/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LESS_EQUALS = 270,
     GREATER_EQUALS = 271,
     NOT_EQUALS = 272,
     ABORT_P = 273,
     ABSOLUTE_P = 274,
     ACCESS = 275,
     ACTION = 276,
     ADD_P = 277,
     ADMIN = 278,
     AFTER = 279,
     AGGREGATE = 280,
     ALL = 281,
     ALSO = 282,
     ALTER = 283,
     ALWAYS = 284,
     ANALYSE = 285,
     ANALYZE = 286,
     AND = 287,
     ANY = 288,
     ARRAY = 289,
     AS = 290,
     ASC_P = 291,
     ASSERTION = 292,
     ASSIGNMENT = 293,
     ASYMMETRIC = 294,
     AT = 295,
     ATTACH = 296,
     ATTRIBUTE = 297,
     AUTHORIZATION = 298,
     BACKWARD = 299,
     BEFORE = 300,
     BEGIN_P = 301,
     BETWEEN = 302,
     BIGINT = 303,
     BINARY = 304,
     BIT = 305,
     BOOLEAN_P = 306,
     BOTH = 307,
     BY = 308,
     CACHE = 309,
     CALLED = 310,
     CASCADE = 311,
     CASCADED = 312,
     CASE = 313,
     CAST = 314,
     CATALOG_P = 315,
     CHAIN = 316,
     CHAR_P = 317,
     CHARACTER = 318,
     CHARACTERISTICS = 319,
     CHECK_P = 320,
     CHECKPOINT = 321,
     CLASS = 322,
     CLOSE = 323,
     CLUSTER = 324,
     COALESCE = 325,
     COLLATE = 326,
     COLLATION = 327,
     COLUMN = 328,
     COLUMNS = 329,
     COMMENT = 330,
     COMMENTS = 331,
     COMMIT = 332,
     COMMITTED = 333,
     CONCURRENTLY = 334,
     CONFIGURATION = 335,
     CONFLICT = 336,
     CONNECTION = 337,
     CONSTRAINT = 338,
     CONSTRAINTS = 339,
     CONTENT_P = 340,
     CONTINUE_P = 341,
     CONVERSION_P = 342,
     COPY = 343,
     COST = 344,
     CREATE_P = 345,
     CROSS = 346,
     CSV = 347,
     CUBE = 348,
     CURRENT_P = 349,
     CURRENT_CATALOG = 350,
     CURRENT_DATE = 351,
     CURRENT_ROLE = 352,
     CURRENT_SCHEMA = 353,
     CURRENT_TIME = 354,
     CURRENT_TIMESTAMP = 355,
     CURRENT_USER = 356,
     CURSOR = 357,
     CYCLE = 358,
     DATA_P = 359,
     DATABASE = 360,
     DAY_P = 361,
     DEALLOCATE = 362,
     DEC = 363,
     DECIMAL_P = 364,
     DECLARE = 365,
     DEFAULT = 366,
     DEFAULTS = 367,
     DEFERRABLE = 368,
     DEFERRED = 369,
     DEFINER = 370,
     DELETE_P = 371,
     DELIMITER = 372,
     DELIMITERS = 373,
     DEPENDS = 374,
     DESC_P = 375,
     DESCRIBE = 376,
     DETACH = 377,
     DICTIONARY = 378,
     DISABLE_P = 379,
     DISCARD = 380,
     DISTINCT = 381,
     DO = 382,
     DOCUMENT_P = 383,
     DOMAIN_P = 384,
     DOUBLE_P = 385,
     DROP = 386,
     EACH = 387,
     ELSE = 388,
     ENABLE_P = 389,
     ENCODING = 390,
     ENCRYPTED = 391,
     END_P = 392,
     ENUM_P = 393,
     ESCAPE = 394,
     EVENT = 395,
     EXCEPT = 396,
     EXCLUDE = 397,
     EXCLUDING = 398,
     EXCLUSIVE = 399,
     EXECUTE = 400,
     EXISTS = 401,
     EXPLAIN = 402,
     EXTENSION = 403,
     EXTERNAL = 404,
     EXTRACT = 405,
     FALSE_P = 406,
     FAMILY = 407,
     FETCH = 408,
     FILTER = 409,
     FIRST_P = 410,
     FLOAT_P = 411,
     FOLLOWING = 412,
     FOR = 413,
     FORCE = 414,
     FOREIGN = 415,
     FORWARD = 416,
     FREEZE = 417,
     FROM = 418,
     FULL = 419,
     FUNCTION = 420,
     FUNCTIONS = 421,
     GENERATED = 422,
     GLOBAL = 423,
     GRANT = 424,
     GRANTED = 425,
     GROUP_P = 426,
     GROUPING = 427,
     HANDLER = 428,
     HAVING = 429,
     HEADER_P = 430,
     HOLD = 431,
     HOUR_P = 432,
     IDENTITY_P = 433,
     IF_P = 434,
     ILIKE = 435,
     IMMEDIATE = 436,
     IMMUTABLE = 437,
     IMPLICIT_P = 438,
     IMPORT_P = 439,
     IN_P = 440,
     INCLUDING = 441,
     INCREMENT = 442,
     INDEX = 443,
     INDEXES = 444,
     INHERIT = 445,
     INHERITS = 446,
     INITIALLY = 447,
     INLINE_P = 448,
     INNER_P = 449,
     INOUT = 450,
     INPUT_P = 451,
     INSENSITIVE = 452,
     INSERT = 453,
     INSTEAD = 454,
     INT_P = 455,
     INTEGER = 456,
     INTERSECT = 457,
     INTERVAL = 458,
     INTO = 459,
     INVOKER = 460,
     IS = 461,
     ISNULL = 462,
     ISOLATION = 463,
     JOIN = 464,
     KEY = 465,
     LABEL = 466,
     LANGUAGE = 467,
     LARGE_P = 468,
     LAST_P = 469,
     LATERAL_P = 470,
     LEADING = 471,
     LEAKPROOF = 472,
     LEFT = 473,
     LEVEL = 474,
     LIKE = 475,
     LIMIT = 476,
     LISTEN = 477,
     LOAD = 478,
     LOCAL = 479,
     LOCALTIME = 480,
     LOCALTIMESTAMP = 481,
     LOCATION = 482,
     LOCK_P = 483,
     LOCKED = 484,
     LOGGED = 485,
     MAPPING = 486,
     MATCH = 487,
     MATERIALIZED = 488,
     MAXVALUE = 489,
     METHOD = 490,
     MINUTE_P = 491,
     MINVALUE = 492,
     MODE = 493,
     MONTH_P = 494,
     MOVE = 495,
     NAME_P = 496,
     NAMES = 497,
     NATIONAL = 498,
     NATURAL = 499,
     NCHAR = 500,
     NEW = 501,
     NEXT = 502,
     NO = 503,
     NONE = 504,
     NOT = 505,
     NOTHING = 506,
     NOTIFY = 507,
     NOTNULL = 508,
     NOWAIT = 509,
     NULL_P = 510,
     NULLIF = 511,
     NULLS_P = 512,
     NUMERIC = 513,
     OBJECT_P = 514,
     OF = 515,
     OFF = 516,
     OFFSET = 517,
     OIDS = 518,
     OLD = 519,
     ON = 520,
     ONLY = 521,
     OPERATOR = 522,
     OPTION = 523,
     OPTIONS = 524,
     OR = 525,
     ORDER = 526,
     ORDINALITY = 527,
     OUT_P = 528,
     OUTER_P = 529,
     OVER = 530,
     OVERLAPS = 531,
     OVERLAY = 532,
     OVERRIDING = 533,
     OWNED = 534,
     OWNER = 535,
     PARALLEL = 536,
     PARSER = 537,
     PARTIAL = 538,
     PARTITION = 539,
     PASSING = 540,
     PASSWORD = 541,
     PLACING = 542,
     PLANS = 543,
     POLICY = 544,
     POSITION = 545,
     PRAGMA_P = 546,
     PRECEDING = 547,
     PRECISION = 548,
     PREPARE = 549,
     PREPARED = 550,
     PRESERVE = 551,
     PRIMARY = 552,
     PRIOR = 553,
     PRIVILEGES = 554,
     PROCEDURAL = 555,
     PROCEDURE = 556,
     PROGRAM = 557,
     PUBLICATION = 558,
     QUOTE = 559,
     RANGE = 560,
     READ_P = 561,
     REAL = 562,
     REASSIGN = 563,
     RECHECK = 564,
     RECURSIVE = 565,
     REF = 566,
     REFERENCES = 567,
     REFERENCING = 568,
     REFRESH = 569,
     REINDEX = 570,
     RELATIVE_P = 571,
     RELEASE = 572,
     RENAME = 573,
     REPEATABLE = 574,
     REPLACE = 575,
     REPLICA = 576,
     RESET = 577,
     RESTART = 578,
     RESTRICT = 579,
     RETURNING = 580,
     RETURNS = 581,
     REVOKE = 582,
     RIGHT = 583,
     ROLE = 584,
     ROLLBACK = 585,
     ROLLUP = 586,
     ROW = 587,
     ROWS = 588,
     RULE = 589,
     SAVEPOINT = 590,
     SCHEMA = 591,
     SCHEMAS = 592,
     SCROLL = 593,
     SEARCH = 594,
     SECOND_P = 595,
     SECURITY = 596,
     SELECT = 597,
     SEQUENCE = 598,
     SEQUENCES = 599,
     SERIALIZABLE = 600,
     SERVER = 601,
     SESSION = 602,
     SESSION_USER = 603,
     SET = 604,
     SETOF = 605,
     SETS = 606,
     SHARE = 607,
     SHOW = 608,
     SIMILAR = 609,
     SIMPLE = 610,
     SKIP = 611,
     SMALLINT = 612,
     SNAPSHOT = 613,
     SOME = 614,
     SQL_P = 615,
     STABLE = 616,
     STANDALONE_P = 617,
     START = 618,
     STATEMENT = 619,
     STATISTICS = 620,
     STDIN = 621,
     STDOUT = 622,
     STORAGE = 623,
     STRICT_P = 624,
     STRIP_P = 625,
     SUBSCRIPTION = 626,
     SUBSTRING = 627,
     SYMMETRIC = 628,
     SYSID = 629,
     SYSTEM_P = 630,
     TABLE = 631,
     TABLES = 632,
     TABLESAMPLE = 633,
     TABLESPACE = 634,
     TEMP = 635,
     TEMPLATE = 636,
     TEMPORARY = 637,
     TEXT_P = 638,
     THEN = 639,
     TIME = 640,
     TIMESTAMP = 641,
     TO = 642,
     TRAILING = 643,
     TRANSACTION = 644,
     TRANSFORM = 645,
     TREAT = 646,
     TRIGGER = 647,
     TRIM = 648,
     TRUE_P = 649,
     TRUNCATE = 650,
     TRUSTED = 651,
     TYPE_P = 652,
     TYPES_P = 653,
     UNBOUNDED = 654,
     UNCOMMITTED = 655,
     UNENCRYPTED = 656,
     UNION = 657,
     UNIQUE = 658,
     UNKNOWN = 659,
     UNLISTEN = 660,
     UNLOGGED = 661,
     UNTIL = 662,
     UPDATE = 663,
     USER = 664,
     USING = 665,
     VACUUM = 666,
     VALID = 667,
     VALIDATE = 668,
     VALIDATOR = 669,
     VALUE_P = 670,
     VALUES = 671,
     VARCHAR = 672,
     VARIADIC = 673,
     VARYING = 674,
     VERBOSE = 675,
     VERSION_P = 676,
     VIEW = 677,
     VIEWS = 678,
     VOLATILE = 679,
     WHEN = 680,
     WHERE = 681,
     WHITESPACE_P = 682,
     WINDOW = 683,
     WITH = 684,
     WITHIN = 685,
     WITHOUT = 686,
     WORK = 687,
     WRAPPER = 688,
     WRITE_P = 689,
     XML_P = 690,
     XMLATTRIBUTES = 691,
     XMLCONCAT = 692,
     XMLELEMENT = 693,
     XMLEXISTS = 694,
     XMLFOREST = 695,
     XMLNAMESPACES = 696,
     XMLPARSE = 697,
     XMLPI = 698,
     XMLROOT = 699,
     XMLSERIALIZE = 700,
     XMLTABLE = 701,
     YEAR_P = 702,
     YES_P = 703,
     ZONE = 704,
     NOT_LA = 705,
     NULLS_LA = 706,
     WITH_LA = 707,
     POSTFIXOP = 708,
     UMINUS = 709
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LESS_EQUALS 270
#define GREATER_EQUALS 271
#define NOT_EQUALS 272
#define ABORT_P 273
#define ABSOLUTE_P 274
#define ACCESS 275
#define ACTION 276
#define ADD_P 277
#define ADMIN 278
#define AFTER 279
#define AGGREGATE 280
#define ALL 281
#define ALSO 282
#define ALTER 283
#define ALWAYS 284
#define ANALYSE 285
#define ANALYZE 286
#define AND 287
#define ANY 288
#define ARRAY 289
#define AS 290
#define ASC_P 291
#define ASSERTION 292
#define ASSIGNMENT 293
#define ASYMMETRIC 294
#define AT 295
#define ATTACH 296
#define ATTRIBUTE 297
#define AUTHORIZATION 298
#define BACKWARD 299
#define BEFORE 300
#define BEGIN_P 301
#define BETWEEN 302
#define BIGINT 303
#define BINARY 304
#define BIT 305
#define BOOLEAN_P 306
#define BOTH 307
#define BY 308
#define CACHE 309
#define CALLED 310
#define CASCADE 311
#define CASCADED 312
#define CASE 313
#define CAST 314
#define CATALOG_P 315
#define CHAIN 316
#define CHAR_P 317
#define CHARACTER 318
#define CHARACTERISTICS 319
#define CHECK_P 320
#define CHECKPOINT 321
#define CLASS 322
#define CLOSE 323
#define CLUSTER 324
#define COALESCE 325
#define COLLATE 326
#define COLLATION 327
#define COLUMN 328
#define COLUMNS 329
#define COMMENT 330
#define COMMENTS 331
#define COMMIT 332
#define COMMITTED 333
#define CONCURRENTLY 334
#define CONFIGURATION 335
#define CONFLICT 336
#define CONNECTION 337
#define CONSTRAINT 338
#define CONSTRAINTS 339
#define CONTENT_P 340
#define CONTINUE_P 341
#define CONVERSION_P 342
#define COPY 343
#define COST 344
#define CREATE_P 345
#define CROSS 346
#define CSV 347
#define CUBE 348
#define CURRENT_P 349
#define CURRENT_CATALOG 350
#define CURRENT_DATE 351
#define CURRENT_ROLE 352
#define CURRENT_SCHEMA 353
#define CURRENT_TIME 354
#define CURRENT_TIMESTAMP 355
#define CURRENT_USER 356
#define CURSOR 357
#define CYCLE 358
#define DATA_P 359
#define DATABASE 360
#define DAY_P 361
#define DEALLOCATE 362
#define DEC 363
#define DECIMAL_P 364
#define DECLARE 365
#define DEFAULT 366
#define DEFAULTS 367
#define DEFERRABLE 368
#define DEFERRED 369
#define DEFINER 370
#define DELETE_P 371
#define DELIMITER 372
#define DELIMITERS 373
#define DEPENDS 374
#define DESC_P 375
#define DESCRIBE 376
#define DETACH 377
#define DICTIONARY 378
#define DISABLE_P 379
#define DISCARD 380
#define DISTINCT 381
#define DO 382
#define DOCUMENT_P 383
#define DOMAIN_P 384
#define DOUBLE_P 385
#define DROP 386
#define EACH 387
#define ELSE 388
#define ENABLE_P 389
#define ENCODING 390
#define ENCRYPTED 391
#define END_P 392
#define ENUM_P 393
#define ESCAPE 394
#define EVENT 395
#define EXCEPT 396
#define EXCLUDE 397
#define EXCLUDING 398
#define EXCLUSIVE 399
#define EXECUTE 400
#define EXISTS 401
#define EXPLAIN 402
#define EXTENSION 403
#define EXTERNAL 404
#define EXTRACT 405
#define FALSE_P 406
#define FAMILY 407
#define FETCH 408
#define FILTER 409
#define FIRST_P 410
#define FLOAT_P 411
#define FOLLOWING 412
#define FOR 413
#define FORCE 414
#define FOREIGN 415
#define FORWARD 416
#define FREEZE 417
#define FROM 418
#define FULL 419
#define FUNCTION 420
#define FUNCTIONS 421
#define GENERATED 422
#define GLOBAL 423
#define GRANT 424
#define GRANTED 425
#define GROUP_P 426
#define GROUPING 427
#define HANDLER 428
#define HAVING 429
#define HEADER_P 430
#define HOLD 431
#define HOUR_P 432
#define IDENTITY_P 433
#define IF_P 434
#define ILIKE 435
#define IMMEDIATE 436
#define IMMUTABLE 437
#define IMPLICIT_P 438
#define IMPORT_P 439
#define IN_P 440
#define INCLUDING 441
#define INCREMENT 442
#define INDEX 443
#define INDEXES 444
#define INHERIT 445
#define INHERITS 446
#define INITIALLY 447
#define INLINE_P 448
#define INNER_P 449
#define INOUT 450
#define INPUT_P 451
#define INSENSITIVE 452
#define INSERT 453
#define INSTEAD 454
#define INT_P 455
#define INTEGER 456
#define INTERSECT 457
#define INTERVAL 458
#define INTO 459
#define INVOKER 460
#define IS 461
#define ISNULL 462
#define ISOLATION 463
#define JOIN 464
#define KEY 465
#define LABEL 466
#define LANGUAGE 467
#define LARGE_P 468
#define LAST_P 469
#define LATERAL_P 470
#define LEADING 471
#define LEAKPROOF 472
#define LEFT 473
#define LEVEL 474
#define LIKE 475
#define LIMIT 476
#define LISTEN 477
#define LOAD 478
#define LOCAL 479
#define LOCALTIME 480
#define LOCALTIMESTAMP 481
#define LOCATION 482
#define LOCK_P 483
#define LOCKED 484
#define LOGGED 485
#define MAPPING 486
#define MATCH 487
#define MATERIALIZED 488
#define MAXVALUE 489
#define METHOD 490
#define MINUTE_P 491
#define MINVALUE 492
#define MODE 493
#define MONTH_P 494
#define MOVE 495
#define NAME_P 496
#define NAMES 497
#define NATIONAL 498
#define NATURAL 499
#define NCHAR 500
#define NEW 501
#define NEXT 502
#define NO 503
#define NONE 504
#define NOT 505
#define NOTHING 506
#define NOTIFY 507
#define NOTNULL 508
#define NOWAIT 509
#define NULL_P 510
#define NULLIF 511
#define NULLS_P 512
#define NUMERIC 513
#define OBJECT_P 514
#define OF 515
#define OFF 516
#define OFFSET 517
#define OIDS 518
#define OLD 519
#define ON 520
#define ONLY 521
#define OPERATOR 522
#define OPTION 523
#define OPTIONS 524
#define OR 525
#define ORDER 526
#define ORDINALITY 527
#define OUT_P 528
#define OUTER_P 529
#define OVER 530
#define OVERLAPS 531
#define OVERLAY 532
#define OVERRIDING 533
#define OWNED 534
#define OWNER 535
#define PARALLEL 536
#define PARSER 537
#define PARTIAL 538
#define PARTITION 539
#define PASSING 540
#define PASSWORD 541
#define PLACING 542
#define PLANS 543
#define POLICY 544
#define POSITION 545
#define PRAGMA_P 546
#define PRECEDING 547
#define PRECISION 548
#define PREPARE 549
#define PREPARED 550
#define PRESERVE 551
#define PRIMARY 552
#define PRIOR 553
#define PRIVILEGES 554
#define PROCEDURAL 555
#define PROCEDURE 556
#define PROGRAM 557
#define PUBLICATION 558
#define QUOTE 559
#define RANGE 560
#define READ_P 561
#define REAL 562
#define REASSIGN 563
#define RECHECK 564
#define RECURSIVE 565
#define REF 566
#define REFERENCES 567
#define REFERENCING 568
#define REFRESH 569
#define REINDEX 570
#define RELATIVE_P 571
#define RELEASE 572
#define RENAME 573
#define REPEATABLE 574
#define REPLACE 575
#define REPLICA 576
#define RESET 577
#define RESTART 578
#define RESTRICT 579
#define RETURNING 580
#define RETURNS 581
#define REVOKE 582
#define RIGHT 583
#define ROLE 584
#define ROLLBACK 585
#define ROLLUP 586
#define ROW 587
#define ROWS 588
#define RULE 589
#define SAVEPOINT 590
#define SCHEMA 591
#define SCHEMAS 592
#define SCROLL 593
#define SEARCH 594
#define SECOND_P 595
#define SECURITY 596
#define SELECT 597
#define SEQUENCE 598
#define SEQUENCES 599
#define SERIALIZABLE 600
#define SERVER 601
#define SESSION 602
#define SESSION_USER 603
#define SET 604
#define SETOF 605
#define SETS 606
#define SHARE 607
#define SHOW 608
#define SIMILAR 609
#define SIMPLE 610
#define SKIP 611
#define SMALLINT 612
#define SNAPSHOT 613
#define SOME 614
#define SQL_P 615
#define STABLE 616
#define STANDALONE_P 617
#define START 618
#define STATEMENT 619
#define STATISTICS 620
#define STDIN 621
#define STDOUT 622
#define STORAGE 623
#define STRICT_P 624
#define STRIP_P 625
#define SUBSCRIPTION 626
#define SUBSTRING 627
#define SYMMETRIC 628
#define SYSID 629
#define SYSTEM_P 630
#define TABLE 631
#define TABLES 632
#define TABLESAMPLE 633
#define TABLESPACE 634
#define TEMP 635
#define TEMPLATE 636
#define TEMPORARY 637
#define TEXT_P 638
#define THEN 639
#define TIME 640
#define TIMESTAMP 641
#define TO 642
#define TRAILING 643
#define TRANSACTION 644
#define TRANSFORM 645
#define TREAT 646
#define TRIGGER 647
#define TRIM 648
#define TRUE_P 649
#define TRUNCATE 650
#define TRUSTED 651
#define TYPE_P 652
#define TYPES_P 653
#define UNBOUNDED 654
#define UNCOMMITTED 655
#define UNENCRYPTED 656
#define UNION 657
#define UNIQUE 658
#define UNKNOWN 659
#define UNLISTEN 660
#define UNLOGGED 661
#define UNTIL 662
#define UPDATE 663
#define USER 664
#define USING 665
#define VACUUM 666
#define VALID 667
#define VALIDATE 668
#define VALIDATOR 669
#define VALUE_P 670
#define VALUES 671
#define VARCHAR 672
#define VARIADIC 673
#define VARYING 674
#define VERBOSE 675
#define VERSION_P 676
#define VIEW 677
#define VIEWS 678
#define VOLATILE 679
#define WHEN 680
#define WHERE 681
#define WHITESPACE_P 682
#define WINDOW 683
#define WITH 684
#define WITHIN 685
#define WITHOUT 686
#define WORK 687
#define WRAPPER 688
#define WRITE_P 689
#define XML_P 690
#define XMLATTRIBUTES 691
#define XMLCONCAT 692
#define XMLELEMENT 693
#define XMLEXISTS 694
#define XMLFOREST 695
#define XMLNAMESPACES 696
#define XMLPARSE 697
#define XMLPI 698
#define XMLROOT 699
#define XMLSERIALIZE 700
#define XMLTABLE 701
#define YEAR_P 702
#define YES_P 703
#define ZONE 704
#define NOT_LA 705
#define NULLS_LA 706
#define WITH_LA 707
#define POSTFIXOP 708
#define UMINUS 709




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "parser/parse_expr.hpp"
#include "utils/datetime.hpp"

#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1216 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1241 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  509
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   43767

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  473
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  338
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1548
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2587

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   709

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,   461,     2,     2,
     466,   467,   459,   457,   470,   458,   468,   460,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   472,   469,
     453,   455,   454,   471,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   464,     2,   465,   462,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   456,   463
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    70,    75,    82,    87,    94,
      99,   106,   111,   118,   120,   123,   127,   130,   132,   136,
     139,   143,   145,   149,   152,   158,   162,   169,   174,   181,
     188,   195,   201,   207,   214,   224,   229,   235,   243,   250,
     255,   264,   269,   272,   277,   281,   288,   293,   296,   299,
     302,   305,   307,   310,   311,   313,   316,   319,   322,   324,
     328,   333,   336,   337,   340,   344,   347,   351,   358,   365,
     374,   381,   390,   397,   406,   413,   422,   431,   442,   451,
     462,   464,   465,   473,   475,   480,   485,   493,   496,   498,
     502,   507,   511,   512,   514,   515,   518,   522,   528,   537,
     543,   544,   550,   556,   564,   567,   568,   570,   572,   574,
     578,   581,   582,   584,   585,   587,   591,   593,   597,   599,
     603,   606,   609,   614,   620,   626,   635,   637,   638,   642,
     652,   665,   669,   670,   675,   682,   684,   687,   689,   691,
     692,   694,   697,   700,   702,   705,   708,   710,   713,   717,
     720,   723,   726,   729,   733,   737,   741,   743,   747,   749,
     750,   752,   755,   758,   761,   764,   767,   770,   773,   776,
     778,   780,   781,   791,   804,   805,   808,   810,   812,   814,
     816,   818,   820,   824,   825,   827,   830,   832,   834,   837,
     840,   844,   846,   848,   851,   854,   856,   859,   863,   869,
     872,   878,   884,   887,   891,   893,   895,   898,   901,   902,
     907,   908,   912,   917,   922,   923,   927,   930,   931,   935,
     937,   939,   941,   943,   945,   947,   949,   951,   953,   955,
     959,   963,   965,   968,   971,   974,   977,   980,   983,   984,
     988,   992,   996,   997,   999,  1002,  1004,  1007,  1010,  1013,
    1016,  1021,  1023,  1027,  1029,  1033,  1035,  1037,  1039,  1041,
    1045,  1047,  1050,  1051,  1053,  1054,  1056,  1060,  1061,  1064,
    1065,  1069,  1073,  1075,  1081,  1085,  1087,  1091,  1093,  1098,
    1104,  1110,  1117,  1121,  1129,  1134,  1146,  1148,  1152,  1155,
    1158,  1161,  1162,  1166,  1168,  1170,  1173,  1176,  1179,  1182,
    1184,  1185,  1187,  1190,  1197,  1202,  1209,  1214,  1221,  1230,
    1232,  1234,  1236,  1239,  1241,  1244,  1246,  1248,  1250,  1254,
    1258,  1262,  1266,  1269,  1272,  1274,  1278,  1280,  1282,  1284,
    1286,  1290,  1292,  1294,  1295,  1297,  1299,  1301,  1310,  1322,
    1332,  1334,  1336,  1340,  1341,  1343,  1347,  1349,  1350,  1352,
    1353,  1355,  1356,  1358,  1362,  1364,  1366,  1368,  1372,  1373,
    1376,  1379,  1380,  1383,  1384,  1386,  1387,  1389,  1391,  1393,
    1397,  1401,  1403,  1405,  1409,  1413,  1417,  1421,  1426,  1430,
    1433,  1435,  1437,  1439,  1441,  1443,  1447,  1449,  1451,  1455,
    1459,  1461,  1464,  1469,  1474,  1477,  1481,  1487,  1493,  1495,
    1497,  1507,  1517,  1519,  1522,  1527,  1532,  1537,  1540,  1543,
    1547,  1549,  1553,  1560,  1563,  1564,  1568,  1572,  1577,  1582,
    1587,  1592,  1596,  1599,  1601,  1603,  1604,  1606,  1608,  1609,
    1611,  1617,  1619,  1620,  1622,  1623,  1627,  1629,  1633,  1638,
    1642,  1644,  1646,  1647,  1650,  1653,  1654,  1657,  1660,  1662,
    1664,  1666,  1667,  1670,  1675,  1681,  1686,  1689,  1693,  1695,
    1697,  1699,  1701,  1704,  1707,  1709,  1711,  1713,  1715,  1717,
    1719,  1723,  1724,  1726,  1730,  1732,  1734,  1737,  1740,  1741,
    1743,  1747,  1749,  1750,  1752,  1755,  1759,  1762,  1767,  1770,
    1774,  1777,  1778,  1780,  1783,  1784,  1789,  1795,  1798,  1799,
    1801,  1805,  1808,  1812,  1815,  1819,  1822,  1826,  1828,  1833,
    1837,  1842,  1848,  1853,  1859,  1864,  1870,  1873,  1878,  1880,
    1882,  1883,  1885,  1890,  1896,  1901,  1902,  1905,  1908,  1911,
    1913,  1915,  1916,  1921,  1924,  1926,  1929,  1932,  1937,  1944,
    1949,  1950,  1953,  1960,  1963,  1965,  1969,  1974,  1975,  1978,
    1979,  1982,  1983,  1985,  1989,  1993,  1996,  1997,  2000,  2004,
    2010,  2017,  2020,  2024,  2028,  2033,  2034,  2036,  2038,  2040,
    2042,  2044,  2047,  2052,  2054,  2056,  2058,  2060,  2063,  2067,
    2071,  2072,  2074,  2076,  2078,  2080,  2082,  2085,  2088,  2091,
    2094,  2097,  2099,  2103,  2104,  2106,  2108,  2110,  2112,  2118,
    2121,  2123,  2125,  2127,  2129,  2134,  2136,  2139,  2142,  2144,
    2148,  2152,  2155,  2157,  2158,  2164,  2167,  2173,  2176,  2178,
    2182,  2186,  2187,  2189,  2191,  2193,  2195,  2197,  2199,  2203,
    2207,  2211,  2215,  2219,  2223,  2227,  2228,  2230,  2235,  2237,
    2241,  2245,  2251,  2254,  2257,  2261,  2265,  2269,  2273,  2277,
    2281,  2285,  2289,  2293,  2297,  2301,  2305,  2309,  2312,  2315,
    2319,  2323,  2326,  2329,  2333,  2339,  2344,  2351,  2355,  2361,
    2366,  2373,  2378,  2385,  2391,  2399,  2403,  2406,  2411,  2415,
    2418,  2422,  2426,  2431,  2435,  2440,  2444,  2449,  2455,  2462,
    2469,  2477,  2484,  2492,  2499,  2507,  2511,  2516,  2521,  2528,
    2530,  2532,  2536,  2539,  2542,  2546,  2550,  2554,  2558,  2562,
    2566,  2570,  2574,  2578,  2582,  2586,  2590,  2594,  2597,  2600,
    2606,  2613,  2620,  2628,  2630,  2632,  2635,  2638,  2643,  2645,
    2647,  2649,  2652,  2655,  2659,  2665,  2672,  2681,  2688,  2695,
    2700,  2705,  2707,  2709,  2711,  2717,  2719,  2721,  2726,  2728,
    2733,  2735,  2740,  2742,  2747,  2749,  2751,  2753,  2755,  2757,
    2759,  2766,  2771,  2776,  2781,  2786,  2793,  2799,  2805,  2811,
    2816,  2823,  2828,  2834,  2835,  2841,  2842,  2845,  2846,  2848,
    2852,  2856,  2859,  2862,  2863,  2870,  2872,  2873,  2877,  2878,
    2881,  2884,  2885,  2887,  2892,  2895,  2898,  2901,  2904,  2907,
    2912,  2916,  2922,  2924,  2926,  2928,  2930,  2932,  2934,  2936,
    2938,  2940,  2942,  2944,  2946,  2948,  2950,  2952,  2954,  2956,
    2958,  2963,  2965,  2970,  2972,  2977,  2979,  2982,  2984,  2987,
    2989,  2993,  2995,  2999,  3001,  3005,  3007,  3011,  3015,  3017,
    3021,  3025,  3026,  3028,  3030,  3032,  3034,  3036,  3038,  3040,
    3042,  3047,  3051,  3054,  3058,  3059,  3063,  3067,  3070,  3073,
    3075,  3076,  3079,  3082,  3086,  3089,  3091,  3093,  3097,  3103,
    3105,  3108,  3113,  3116,  3117,  3119,  3120,  3122,  3125,  3128,
    3131,  3135,  3141,  3143,  3144,  3146,  3149,  3150,  3153,  3155,
    3156,  3158,  3159,  3161,  3165,  3169,  3172,  3174,  3176,  3178,
    3182,  3184,  3187,  3189,  3193,  3195,  3197,  3199,  3202,  3204,
    3206,  3208,  3210,  3212,  3215,  3222,  3225,  3229,  3235,  3242,
    3244,  3246,  3248,  3250,  3252,  3254,  3256,  3258,  3260,  3262,
    3264,  3266,  3269,  3272,  3276,  3280,  3281,  3283,  3285,  3287,
    3289,  3291,  3293,  3299,  3303,  3304,  3306,  3308,  3310,  3312,
    3317,  3325,  3328,  3329,  3331,  3333,  3335,  3337,  3351,  3368,
    3370,  3373,  3374,  3376,  3377,  3379,  3380,  3383,  3384,  3386,
    3387,  3394,  3403,  3410,  3419,  3426,  3435,  3437,  3440,  3445,
    3449,  3455,  3457,  3458,  3460,  3462,  3463,  3465,  3467,  3469,
    3471,  3473,  3475,  3477,  3479,  3481,  3483,  3485,  3487,  3491,
    3493,  3495,  3497,  3499,  3501,  3503,  3506,  3508,  3510,  3513,
    3517,  3521,  3523,  3527,  3531,  3534,  3538,  3542,  3546,  3550,
    3552,  3554,  3556,  3558,  3562,  3568,  3570,  3572,  3574,  3576,
    3580,  3583,  3585,  3590,  3596,  3602,  3607,  3614,  3616,  3618,
    3620,  3622,  3624,  3626,  3627,  3629,  3633,  3635,  3636,  3644,
    3646,  3649,  3653,  3656,  3657,  3660,  3661,  3664,  3669,  3672,
    3674,  3676,  3678,  3681,  3685,  3688,  3691,  3695,  3700,  3703,
    3705,  3707,  3709,  3713,  3723,  3735,  3748,  3763,  3767,  3772,
    3777,  3778,  3786,  3797,  3800,  3804,  3805,  3810,  3812,  3814,
    3816,  3818,  3820,  3822,  3824,  3826,  3828,  3830,  3832,  3834,
    3836,  3838,  3840,  3842,  3844,  3846,  3848,  3850,  3852,  3854,
    3856,  3858,  3860,  3862,  3864,  3866,  3868,  3870,  3872,  3874,
    3876,  3878,  3880,  3882,  3884,  3886,  3888,  3890,  3892,  3894,
    3896,  3898,  3900,  3902,  3904,  3906,  3908,  3910,  3912,  3914,
    3916,  3918,  3920,  3922,  3924,  3926,  3928,  3930,  3932,  3934,
    3936,  3938,  3940,  3942,  3944,  3946,  3948,  3950,  3952,  3954,
    3956,  3958,  3960,  3962,  3964,  3966,  3968,  3970,  3972,  3974,
    3976,  3978,  3980,  3982,  3984,  3986,  3988,  3990,  3992,  3994,
    3996,  3998,  4000,  4002,  4004,  4006,  4008,  4010,  4012,  4014,
    4016,  4018,  4020,  4022,  4024,  4026,  4028,  4030,  4032,  4034,
    4036,  4038,  4040,  4042,  4044,  4046,  4048,  4050,  4052,  4054,
    4056,  4058,  4060,  4062,  4064,  4066,  4068,  4070,  4072,  4074,
    4076,  4078,  4080,  4082,  4084,  4086,  4088,  4090,  4092,  4094,
    4096,  4098,  4100,  4102,  4104,  4106,  4108,  4110,  4112,  4114,
    4116,  4118,  4120,  4122,  4124,  4126,  4128,  4130,  4132,  4134,
    4136,  4138,  4140,  4142,  4144,  4146,  4148,  4150,  4152,  4154,
    4156,  4158,  4160,  4162,  4164,  4166,  4168,  4170,  4172,  4174,
    4176,  4178,  4180,  4182,  4184,  4186,  4188,  4190,  4192,  4194,
    4196,  4198,  4200,  4202,  4204,  4206,  4208,  4210,  4212,  4214,
    4216,  4218,  4220,  4222,  4224,  4226,  4228,  4230,  4232,  4234,
    4236,  4238,  4240,  4242,  4244,  4246,  4248,  4250,  4252,  4254,
    4256,  4258,  4260,  4262,  4264,  4266,  4268,  4270,  4272,  4274,
    4276,  4278,  4280,  4282,  4284,  4286,  4288,  4290,  4292,  4294,
    4296,  4298,  4300,  4302,  4304,  4306,  4308,  4310,  4312,  4314,
    4316,  4318,  4320,  4322,  4324,  4326,  4328,  4330,  4332,  4334,
    4336,  4338,  4340,  4342,  4344,  4346,  4348,  4350,  4352,  4354,
    4356,  4358,  4360,  4362,  4364,  4366,  4368,  4370,  4372,  4374,
    4376,  4378,  4380,  4382,  4384,  4386,  4388,  4390,  4392,  4394,
    4396,  4398,  4400,  4402,  4404,  4406,  4408,  4410,  4412,  4414,
    4416,  4418,  4420,  4422,  4424,  4426,  4428,  4430,  4432,  4434,
    4436,  4438,  4440,  4442,  4444,  4446,  4448,  4450,  4452,  4454,
    4456,  4458,  4460,  4462,  4464,  4466,  4468,  4470,  4472,  4474,
    4476,  4478,  4480,  4482,  4484,  4486,  4488,  4490,  4492,  4494,
    4496,  4498,  4500,  4502,  4504,  4506,  4508,  4510,  4512,  4514,
    4516,  4518,  4520,  4522,  4524,  4526,  4528,  4530,  4532,  4534,
    4536,  4538,  4540,  4542,  4544,  4546,  4548,  4550,  4552,  4554,
    4556,  4558,  4560,  4562,  4564,  4566,  4568,  4570,  4572,  4574,
    4576,  4578,  4580,  4582,  4584,  4586,  4588,  4590,  4592,  4594,
    4596,  4598,  4600,  4602,  4604,  4606,  4608,  4610,  4612,  4614,
    4616,  4618,  4620,  4622,  4624,  4626,  4628,  4630,  4632,  4634,
    4636,  4638,  4640,  4642,  4644,  4646,  4648,  4650,  4652,  4654,
    4656,  4658,  4660,  4662,  4664,  4666,  4668,  4670,  4672
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     474,     0,    -1,   475,    -1,   475,   469,   476,    -1,   476,
      -1,   765,    -1,   514,    -1,   477,    -1,   795,    -1,   766,
      -1,   576,    -1,   804,    -1,   755,    -1,   510,    -1,   523,
      -1,   488,    -1,   791,    -1,   569,    -1,   512,    -1,   767,
      -1,   758,    -1,   491,    -1,   784,    -1,   509,    -1,   752,
      -1,   489,    -1,   593,    -1,   521,    -1,   575,    -1,   786,
      -1,   796,    -1,   778,    -1,   799,    -1,   802,    -1,    -1,
      28,   376,   646,   485,    -1,    28,   376,   179,   146,   646,
     485,    -1,    28,   188,   737,   485,    -1,    28,   188,   179,
     146,   737,   485,    -1,    28,   343,   737,   485,    -1,    28,
     343,   179,   146,   737,   485,    -1,    28,   422,   737,   485,
      -1,    28,   422,   179,   146,   737,   485,    -1,   480,    -1,
     478,   480,    -1,   349,   111,   681,    -1,   131,   111,    -1,
     323,    -1,   323,   516,   517,    -1,   349,   518,    -1,   349,
     167,   568,    -1,   484,    -1,   481,   470,   484,    -1,    22,
     548,    -1,    22,   179,   250,   146,   548,    -1,    22,    73,
     548,    -1,    22,    73,   179,   250,   146,   548,    -1,    28,
     490,   745,   479,    -1,    28,   490,   745,   131,   250,   255,
      -1,    28,   490,   745,   349,   250,   255,    -1,    28,   490,
     745,   349,   365,   520,    -1,    28,   490,   745,   349,   536,
      -1,    28,   490,   745,   322,   536,    -1,    28,   490,   745,
     349,   368,   745,    -1,    28,   490,   745,    22,   167,   568,
      35,   178,   526,    -1,    28,   490,   745,   478,    -1,    28,
     490,   745,   131,   178,    -1,    28,   490,   745,   131,   178,
     179,   146,    -1,   131,   490,   179,   146,   745,   573,    -1,
     131,   490,   745,   573,    -1,    28,   490,   745,   487,   397,
     658,   657,   483,    -1,    28,   490,   745,   486,    -1,    22,
     538,    -1,    28,    83,   739,   524,    -1,   413,    83,   739,
      -1,   131,    83,   179,   146,   739,   573,    -1,   131,    83,
     739,   573,    -1,   349,   230,    -1,   349,   406,    -1,   349,
     536,    -1,   322,   536,    -1,   486,    -1,   410,   681,    -1,
      -1,   531,    -1,   349,   531,    -1,    22,   531,    -1,   131,
     546,    -1,   482,    -1,   485,   470,   482,    -1,   269,   466,
     481,   467,    -1,   349,   104,    -1,    -1,   107,   739,    -1,
     107,   294,   739,    -1,   107,    26,    -1,   107,   294,    26,
      -1,    28,   336,   739,   318,   387,   739,    -1,    28,   376,
     646,   318,   387,   739,    -1,    28,   376,   179,   146,   646,
     318,   387,   739,    -1,    28,   343,   737,   318,   387,   739,
      -1,    28,   343,   179,   146,   737,   318,   387,   739,    -1,
      28,   422,   737,   318,   387,   739,    -1,    28,   422,   179,
     146,   737,   318,   387,   739,    -1,    28,   188,   737,   318,
     387,   739,    -1,    28,   188,   179,   146,   737,   318,   387,
     739,    -1,    28,   376,   646,   318,   490,   739,   387,   739,
      -1,    28,   376,   179,   146,   646,   318,   490,   739,   387,
     739,    -1,    28,   376,   646,   318,    83,   739,   387,   739,
      -1,    28,   376,   179,   146,   646,   318,    83,   739,   387,
     739,    -1,    73,    -1,    -1,   495,   198,   204,   493,   492,
     498,   500,    -1,   593,    -1,   278,   501,   415,   593,    -1,
     466,   505,   467,   593,    -1,   466,   505,   467,   278,   501,
     415,   593,    -1,   111,   416,    -1,   737,    -1,   737,    35,
     745,    -1,   466,   507,   467,   654,    -1,   265,    83,   739,
      -1,    -1,   598,    -1,    -1,   745,   731,    -1,   508,   455,
     681,    -1,   466,   502,   467,   455,   681,    -1,   265,    81,
     494,   127,   408,   349,   506,   654,    -1,   265,    81,   494,
     127,   251,    -1,    -1,   745,   503,   504,   611,   612,    -1,
     686,   503,   504,   611,   612,    -1,   466,   681,   467,   503,
     504,   611,   612,    -1,   325,   734,    -1,    -1,   409,    -1,
     375,    -1,   508,    -1,   502,   470,   508,    -1,    71,   747,
      -1,    -1,   747,    -1,    -1,   496,    -1,   505,   470,   496,
      -1,   497,    -1,   506,   470,   497,    -1,   499,    -1,   507,
     470,   499,    -1,   745,   731,    -1,   291,   745,    -1,   291,
     745,   455,   783,    -1,   291,   745,   466,   709,   467,    -1,
      90,   567,   343,   737,   511,    -1,    90,   567,   343,   179,
     250,   146,   737,   511,    -1,   515,    -1,    -1,   145,   739,
     513,    -1,    90,   567,   376,   806,    35,   145,   739,   513,
     805,    -1,    90,   567,   376,   179,   250,   146,   806,    35,
     145,   739,   513,   805,    -1,   466,   708,   467,    -1,    -1,
      28,   343,   737,   515,    -1,    28,   343,   179,   146,   737,
     515,    -1,   518,    -1,   515,   518,    -1,   429,    -1,   452,
      -1,    -1,     4,    -1,   457,     4,    -1,   458,     4,    -1,
     520,    -1,    35,   660,    -1,    54,   517,    -1,   103,    -1,
     248,   103,    -1,   187,   519,   517,    -1,   234,   517,    -1,
     237,   517,    -1,   248,   234,    -1,   248,   237,    -1,   279,
      53,   747,    -1,   343,   241,   747,    -1,   363,   516,   517,
      -1,   323,    -1,   323,   516,   517,    -1,    53,    -1,    -1,
     743,    -1,   457,   743,    -1,   458,   743,    -1,    18,   522,
      -1,    46,   522,    -1,   363,   522,    -1,    77,   522,    -1,
     137,   522,    -1,   330,   522,    -1,   432,    -1,   389,    -1,
      -1,    90,   567,   376,   737,   466,   555,   467,   543,   535,
      -1,    90,   567,   376,   179,   250,   146,   737,   466,   555,
     467,   543,   535,    -1,    -1,   524,   547,    -1,   562,    -1,
     810,    -1,   705,    -1,   517,    -1,   744,    -1,   249,    -1,
     466,   515,   467,    -1,    -1,   744,    -1,   248,    21,    -1,
     324,    -1,    56,    -1,   349,   255,    -1,   349,   111,    -1,
      83,   739,   530,    -1,   530,    -1,   542,    -1,    71,   747,
      -1,   250,   255,    -1,   255,    -1,   403,   554,    -1,   297,
     210,   554,    -1,    65,   466,   681,   467,   537,    -1,   111,
     682,    -1,   167,   568,    35,   178,   526,    -1,   312,   737,
     557,   565,   533,    -1,   546,   527,    -1,   265,   408,   528,
      -1,   532,    -1,   559,    -1,   532,   559,    -1,   559,   532,
      -1,    -1,   269,   466,   549,   467,    -1,    -1,   265,    77,
     131,    -1,   265,    77,   116,   333,    -1,   265,    77,   296,
     333,    -1,    -1,   466,   540,   467,    -1,   248,   190,    -1,
      -1,    83,   739,   563,    -1,   563,    -1,    76,    -1,    84,
      -1,   112,    -1,   178,    -1,   189,    -1,   365,    -1,   368,
      -1,    26,    -1,   560,    -1,   540,   470,   560,    -1,   410,
     188,   551,    -1,   113,    -1,   250,   113,    -1,   192,   114,
      -1,   192,   181,    -1,   429,   536,    -1,   429,   263,    -1,
     431,   263,    -1,    -1,   466,   550,   467,    -1,   545,   186,
     539,    -1,   545,   143,   539,    -1,    -1,   751,    -1,   250,
     113,    -1,   113,    -1,   192,   181,    -1,   192,   114,    -1,
     250,   412,    -1,   248,   190,    -1,   745,   658,   534,   558,
      -1,   531,    -1,   549,   470,   531,    -1,   553,    -1,   550,
     470,   553,    -1,   745,    -1,   548,    -1,   566,    -1,   538,
      -1,   751,   455,   525,    -1,   751,    -1,   429,   544,    -1,
      -1,   564,    -1,    -1,   745,    -1,   466,   561,   467,    -1,
      -1,   558,   529,    -1,    -1,   265,   116,   528,    -1,   751,
     455,   525,    -1,   751,    -1,   751,   468,   751,   455,   525,
      -1,   751,   468,   751,    -1,   556,    -1,   561,   470,   556,
      -1,   658,    -1,   746,   748,   461,   397,    -1,   350,   746,
     748,   461,   397,    -1,    65,   466,   681,   467,   524,    -1,
     403,   466,   561,   467,   554,   524,    -1,   403,   541,   524,
      -1,   297,   210,   466,   561,   467,   554,   524,    -1,   297,
     210,   541,   524,    -1,   160,   210,   466,   561,   467,   312,
     737,   557,   565,   533,   524,    -1,   552,    -1,   564,   470,
     552,    -1,   232,   164,    -1,   232,   283,    -1,   232,   355,
      -1,    -1,   220,   737,   545,    -1,   382,    -1,   380,    -1,
     224,   382,    -1,   224,   380,    -1,   168,   382,    -1,   168,
     380,    -1,   406,    -1,    -1,    29,    -1,    53,   111,    -1,
     131,   570,   179,   146,   572,   573,    -1,   131,   570,   572,
     573,    -1,   131,   571,   179,   146,   738,   573,    -1,   131,
     571,   738,   573,    -1,   131,   574,   739,   265,   747,   573,
      -1,   131,   574,   179,   146,   739,   265,   747,   573,    -1,
     376,    -1,   343,    -1,   422,    -1,   233,   422,    -1,   188,
      -1,   160,   376,    -1,    72,    -1,    87,    -1,   365,    -1,
     383,   339,   282,    -1,   383,   339,   123,    -1,   383,   339,
     381,    -1,   383,   339,    80,    -1,    20,   235,    -1,   140,
     392,    -1,   148,    -1,   160,   104,   433,    -1,   303,    -1,
     336,    -1,   346,    -1,   747,    -1,   572,   470,   747,    -1,
      56,    -1,   324,    -1,    -1,   289,    -1,   334,    -1,   392,
      -1,   495,   408,   792,   349,   506,   636,   793,   500,    -1,
      88,   588,   737,   557,   586,   577,   582,   591,   578,   516,
     583,    -1,    88,   466,   754,   467,   387,   582,   591,   516,
     583,    -1,   163,    -1,   387,    -1,   580,   118,   744,    -1,
      -1,   590,    -1,   579,   470,   590,    -1,   410,    -1,    -1,
      35,    -1,    -1,   302,    -1,    -1,   587,    -1,   466,   592,
     467,    -1,   775,    -1,   517,    -1,   459,    -1,   466,   579,
     467,    -1,    -1,   751,   584,    -1,   429,   263,    -1,    -1,
     587,   589,    -1,    -1,    49,    -1,    -1,    49,    -1,   263,
      -1,   162,    -1,   117,   581,   744,    -1,   255,   581,   744,
      -1,    92,    -1,   175,    -1,   304,   581,   744,    -1,   139,
     581,   744,    -1,   159,   304,   561,    -1,   159,   304,   459,
      -1,   159,   250,   255,   561,    -1,   159,   255,   561,    -1,
     135,   744,    -1,   775,    -1,   744,    -1,   366,    -1,   367,
      -1,   585,    -1,   592,   470,   585,    -1,   595,    -1,   594,
      -1,   466,   595,   467,    -1,   466,   594,   467,    -1,   597,
      -1,   596,   608,    -1,   596,   607,   628,   614,    -1,   596,
     607,   613,   629,    -1,   598,   596,    -1,   598,   596,   608,
      -1,   598,   596,   607,   628,   614,    -1,   598,   596,   607,
     613,   629,    -1,   597,    -1,   594,    -1,   342,   606,   733,
     601,   636,   654,   623,   627,   690,    -1,   342,   605,   734,
     601,   636,   654,   623,   627,   690,    -1,   635,    -1,   376,
     646,    -1,   596,   402,   604,   596,    -1,   596,   202,   604,
     596,    -1,   596,   141,   604,   596,    -1,   429,   599,    -1,
     452,   599,    -1,   429,   310,   599,    -1,   600,    -1,   599,
     470,   600,    -1,   739,   749,    35,   466,   754,   467,    -1,
     204,   602,    -1,    -1,   382,   603,   737,    -1,   380,   603,
     737,    -1,   224,   382,   603,   737,    -1,   224,   380,   603,
     737,    -1,   168,   382,   603,   737,    -1,   168,   380,   603,
     737,    -1,   406,   603,   737,    -1,   376,   737,    -1,   737,
      -1,   376,    -1,    -1,    26,    -1,   126,    -1,    -1,   126,
      -1,   126,   265,   466,   708,   467,    -1,    26,    -1,    -1,
     608,    -1,    -1,   271,    53,   609,    -1,   610,    -1,   609,
     470,   610,    -1,   681,   410,   705,   612,    -1,   681,   611,
     612,    -1,    36,    -1,   120,    -1,    -1,   451,   155,    -1,
     451,   214,    -1,    -1,   615,   616,    -1,   616,   615,    -1,
     615,    -1,   616,    -1,   613,    -1,    -1,   221,   617,    -1,
     221,   617,   470,   618,    -1,   153,   622,   619,   621,   266,
      -1,   153,   622,   621,   266,    -1,   262,   618,    -1,   262,
     619,   621,    -1,   681,    -1,    26,    -1,   681,    -1,   683,
      -1,   457,   620,    -1,   458,   620,    -1,   743,    -1,     4,
      -1,   332,    -1,   333,    -1,   155,    -1,   247,    -1,   171,
      53,   624,    -1,    -1,   625,    -1,   624,   470,   625,    -1,
     681,    -1,   626,    -1,   466,   467,    -1,   174,   681,    -1,
      -1,   630,    -1,   158,   306,   266,    -1,   628,    -1,    -1,
     631,    -1,   630,   631,    -1,   632,   633,   634,    -1,   158,
     408,    -1,   158,   248,   210,   408,    -1,   158,   352,    -1,
     158,   210,   352,    -1,   260,   736,    -1,    -1,   254,    -1,
     356,   229,    -1,    -1,   416,   466,   708,   467,    -1,   635,
     470,   466,   708,   467,    -1,   163,   637,    -1,    -1,   638,
      -1,   637,   470,   638,    -1,   646,   641,    -1,   646,   641,
     647,    -1,   649,   642,    -1,   215,   649,   642,    -1,   594,
     641,    -1,   215,   594,   641,    -1,   639,    -1,   466,   639,
     467,   640,    -1,   466,   639,   467,    -1,   638,    91,   209,
     638,    -1,   638,   643,   209,   638,   645,    -1,   638,   209,
     638,   645,    -1,   638,   244,   643,   209,   638,    -1,   638,
     244,   209,   638,    -1,    35,   745,   466,   738,   467,    -1,
      35,   745,    -1,   745,   466,   738,   467,    -1,   745,    -1,
     640,    -1,    -1,   640,    -1,    35,   466,   655,   467,    -1,
      35,   745,   466,   655,   467,    -1,   745,   466,   655,   467,
      -1,    -1,   164,   644,    -1,   218,   644,    -1,   328,   644,
      -1,   194,    -1,   274,    -1,    -1,   410,   466,   738,   467,
      -1,   265,   681,    -1,   737,    -1,   737,   459,    -1,   266,
     737,    -1,   266,   466,   737,   467,    -1,   378,   741,   466,
     708,   467,   648,    -1,   319,   466,   681,   467,    -1,    -1,
     686,   653,    -1,   333,   163,   466,   651,   467,   653,    -1,
     686,   652,    -1,   650,    -1,   651,   470,   650,    -1,    35,
     466,   655,   467,    -1,    -1,   452,   272,    -1,    -1,   426,
     681,    -1,    -1,   656,    -1,   655,   470,   656,    -1,   745,
     658,   657,    -1,    71,   747,    -1,    -1,   660,   659,    -1,
     350,   660,   659,    -1,   660,    34,   464,   743,   465,    -1,
     350,   660,    34,   464,   743,   465,    -1,   660,    34,    -1,
     350,   660,    34,    -1,   659,   464,   465,    -1,   659,   464,
     743,   465,    -1,    -1,   662,    -1,   664,    -1,   666,    -1,
     670,    -1,   676,    -1,   677,   679,    -1,   677,   466,   743,
     467,    -1,   664,    -1,   667,    -1,   671,    -1,   676,    -1,
     746,   663,    -1,   746,   748,   663,    -1,   466,   708,   467,
      -1,    -1,   200,    -1,   201,    -1,   357,    -1,    48,    -1,
     307,    -1,   156,   665,    -1,   130,   293,    -1,   109,   663,
      -1,   108,   663,    -1,   258,   663,    -1,    51,    -1,   466,
     743,   467,    -1,    -1,   668,    -1,   669,    -1,   668,    -1,
     669,    -1,    50,   675,   466,   708,   467,    -1,    50,   675,
      -1,   672,    -1,   673,    -1,   672,    -1,   673,    -1,   674,
     466,   743,   467,    -1,   674,    -1,    63,   675,    -1,    62,
     675,    -1,   417,    -1,   243,    63,   675,    -1,   243,    62,
     675,    -1,   245,   675,    -1,   419,    -1,    -1,   386,   466,
     743,   467,   678,    -1,   386,   678,    -1,   385,   466,   743,
     467,   678,    -1,   385,   678,    -1,   203,    -1,   452,   385,
     449,    -1,   431,   385,   449,    -1,    -1,   447,    -1,   239,
      -1,   106,    -1,   177,    -1,   236,    -1,   680,    -1,   447,
     387,   239,    -1,   106,   387,   177,    -1,   106,   387,   236,
      -1,   106,   387,   680,    -1,   177,   387,   236,    -1,   177,
     387,   680,    -1,   236,   387,   680,    -1,    -1,   340,    -1,
     340,   466,   743,   467,    -1,   683,    -1,   681,    11,   658,
      -1,   681,    71,   747,    -1,   681,    40,   385,   449,   681,
      -1,   457,   681,    -1,   458,   681,    -1,   681,   457,   681,
      -1,   681,   458,   681,    -1,   681,   459,   681,    -1,   681,
     460,   681,    -1,   681,   461,   681,    -1,   681,   462,   681,
      -1,   681,   453,   681,    -1,   681,   454,   681,    -1,   681,
     455,   681,    -1,   681,    15,   681,    -1,   681,    16,   681,
      -1,   681,    17,   681,    -1,   681,   704,   681,    -1,   704,
     681,    -1,   681,   704,    -1,   681,    32,   681,    -1,   681,
     270,   681,    -1,   250,   681,    -1,   450,   681,    -1,   681,
     220,   681,    -1,   681,   220,   681,   139,   681,    -1,   681,
     450,   220,   681,    -1,   681,   450,   220,   681,   139,   681,
      -1,   681,   180,   681,    -1,   681,   180,   681,   139,   681,
      -1,   681,   450,   180,   681,    -1,   681,   450,   180,   681,
     139,   681,    -1,   681,   354,   387,   681,    -1,   681,   354,
     387,   681,   139,   681,    -1,   681,   450,   354,   387,   681,
      -1,   681,   450,   354,   387,   681,   139,   681,    -1,   681,
     206,   255,    -1,   681,   207,    -1,   681,   206,   250,   255,
      -1,   681,   250,   255,    -1,   681,   253,    -1,   700,   276,
     700,    -1,   681,   206,   394,    -1,   681,   206,   250,   394,
      -1,   681,   206,   151,    -1,   681,   206,   250,   151,    -1,
     681,   206,   404,    -1,   681,   206,   250,   404,    -1,   681,
     206,   126,   163,   681,    -1,   681,   206,   250,   126,   163,
     681,    -1,   681,   206,   260,   466,   711,   467,    -1,   681,
     206,   250,   260,   466,   711,   467,    -1,   681,    47,   732,
     682,    32,   681,    -1,   681,   450,    47,   732,   682,    32,
     681,    -1,   681,    47,   373,   682,    32,   681,    -1,   681,
     450,    47,   373,   682,    32,   681,    -1,   681,   185,   721,
      -1,   681,   450,   185,   721,    -1,   681,   706,   701,   594,
      -1,   681,   706,   701,   466,   681,   467,    -1,   111,    -1,
     683,    -1,   682,    11,   658,    -1,   457,   682,    -1,   458,
     682,    -1,   682,   457,   682,    -1,   682,   458,   682,    -1,
     682,   459,   682,    -1,   682,   460,   682,    -1,   682,   461,
     682,    -1,   682,   462,   682,    -1,   682,   453,   682,    -1,
     682,   454,   682,    -1,   682,   455,   682,    -1,   682,    15,
     682,    -1,   682,    16,   682,    -1,   682,    17,   682,    -1,
     682,   704,   682,    -1,   704,   682,    -1,   682,   704,    -1,
     682,   206,   126,   163,   682,    -1,   682,   206,   250,   126,
     163,   682,    -1,   682,   206,   260,   466,   711,   467,    -1,
     682,   206,   250,   260,   466,   711,   467,    -1,   727,    -1,
     742,    -1,   471,   731,    -1,    10,   731,    -1,   466,   681,
     467,   731,    -1,   722,    -1,   685,    -1,   594,    -1,   594,
     730,    -1,   146,   594,    -1,   741,   466,   467,    -1,   741,
     466,   709,   607,   467,    -1,   741,   466,   418,   710,   607,
     467,    -1,   741,   466,   709,   470,   418,   710,   607,   467,
      -1,   741,   466,    26,   709,   607,   467,    -1,   741,   466,
     126,   709,   607,   467,    -1,   741,   466,   459,   467,    -1,
     684,   688,   689,   693,    -1,   687,    -1,   684,    -1,   687,
      -1,    72,   158,   466,   681,   467,    -1,    96,    -1,    99,
      -1,    99,   466,   743,   467,    -1,   100,    -1,   100,   466,
     743,   467,    -1,   225,    -1,   225,   466,   743,   467,    -1,
     226,    -1,   226,   466,   743,   467,    -1,    97,    -1,   101,
      -1,   348,    -1,   409,    -1,    95,    -1,    98,    -1,    59,
     466,   681,    35,   658,   467,    -1,   150,   466,   712,   467,
      -1,   277,   466,   714,   467,    -1,   290,   466,   716,   467,
      -1,   372,   466,   717,   467,    -1,   391,   466,   681,    35,
     658,   467,    -1,   393,   466,    52,   720,   467,    -1,   393,
     466,   216,   720,   467,    -1,   393,   466,   388,   720,   467,
      -1,   393,   466,   720,   467,    -1,   256,   466,   681,   470,
     681,   467,    -1,    70,   466,   708,   467,    -1,   430,   171,
     466,   608,   467,    -1,    -1,   154,   466,   426,   681,   467,
      -1,    -1,   428,   691,    -1,    -1,   692,    -1,   691,   470,
     692,    -1,   745,    35,   694,    -1,   275,   694,    -1,   275,
     745,    -1,    -1,   466,   695,   696,   607,   697,   467,    -1,
     745,    -1,    -1,   284,    53,   708,    -1,    -1,   305,   698,
      -1,   333,   698,    -1,    -1,   699,    -1,    47,   699,    32,
     699,    -1,   399,   292,    -1,   399,   157,    -1,    94,   332,
      -1,   681,   292,    -1,   681,   157,    -1,   332,   466,   708,
     467,    -1,   332,   466,   467,    -1,   466,   708,   470,   681,
     467,    -1,    33,    -1,   359,    -1,    26,    -1,     8,    -1,
     703,    -1,   457,    -1,   458,    -1,   459,    -1,   460,    -1,
     461,    -1,   462,    -1,   453,    -1,   454,    -1,   455,    -1,
      15,    -1,    16,    -1,    17,    -1,     8,    -1,   267,   466,
     707,   467,    -1,   702,    -1,   267,   466,   707,   467,    -1,
     702,    -1,   267,   466,   707,   467,    -1,   220,    -1,   450,
     220,    -1,   180,    -1,   450,   180,    -1,   702,    -1,   745,
     468,   707,    -1,   681,    -1,   708,   470,   681,    -1,   710,
      -1,   709,   470,   710,    -1,   681,    -1,   750,    13,   681,
      -1,   750,    14,   681,    -1,   658,    -1,   711,   470,   658,
      -1,   713,   163,   681,    -1,    -1,     3,    -1,   447,    -1,
     239,    -1,   106,    -1,   177,    -1,   236,    -1,   340,    -1,
     744,    -1,   681,   715,   718,   719,    -1,   681,   715,   718,
      -1,   287,   681,    -1,   682,   185,   682,    -1,    -1,   681,
     718,   719,    -1,   681,   719,   718,    -1,   681,   718,    -1,
     681,   719,    -1,   708,    -1,    -1,   163,   681,    -1,   158,
     681,    -1,   681,   163,   708,    -1,   163,   708,    -1,   708,
      -1,   594,    -1,   466,   708,   467,    -1,    58,   726,   723,
     725,   137,    -1,   724,    -1,   723,   724,    -1,   425,   681,
     384,   681,    -1,   133,   681,    -1,    -1,   681,    -1,    -1,
     745,    -1,   745,   730,    -1,   468,   740,    -1,   468,   459,
      -1,   464,   681,   465,    -1,   464,   729,   472,   729,   465,
      -1,   681,    -1,    -1,   728,    -1,   730,   728,    -1,    -1,
     731,   728,    -1,    39,    -1,    -1,   734,    -1,    -1,   735,
      -1,   734,   470,   735,    -1,   681,    35,   751,    -1,   681,
       3,    -1,   681,    -1,   459,    -1,   737,    -1,   736,   470,
     737,    -1,   745,    -1,   745,   730,    -1,   739,    -1,   738,
     470,   739,    -1,   745,    -1,   751,    -1,   746,    -1,   745,
     730,    -1,   743,    -1,     4,    -1,   744,    -1,     6,    -1,
       7,    -1,   741,   744,    -1,   741,   466,   709,   607,   467,
     744,    -1,   661,   744,    -1,   677,   744,   679,    -1,   677,
     466,   743,   467,   744,    -1,   677,   466,   471,   467,   471,
     679,    -1,   394,    -1,   151,    -1,   255,    -1,     9,    -1,
       5,    -1,     3,    -1,   807,    -1,   808,    -1,     3,    -1,
     807,    -1,   809,    -1,   745,    -1,   745,   748,    -1,   468,
     740,    -1,   748,   468,   740,    -1,   466,   738,   467,    -1,
      -1,   746,    -1,     3,    -1,   807,    -1,   808,    -1,   809,
      -1,   810,    -1,   294,   739,   753,    35,   754,    -1,   466,
     711,   467,    -1,    -1,   593,    -1,   491,    -1,   575,    -1,
     791,    -1,    90,   336,   745,   756,    -1,    90,   336,   179,
     250,   146,   745,   756,    -1,   756,   757,    -1,    -1,   523,
      -1,   758,    -1,   510,    -1,   802,    -1,    90,   764,   188,
     761,   762,   265,   737,   760,   466,   507,   467,   763,   654,
      -1,    90,   764,   188,   761,   179,   250,   146,   551,   265,
     737,   760,   466,   507,   467,   763,   654,    -1,   745,    -1,
     410,   759,    -1,    -1,    79,    -1,    -1,   551,    -1,    -1,
     429,   536,    -1,    -1,   403,    -1,    -1,    28,   376,   646,
     349,   336,   739,    -1,    28,   376,   179,   146,   646,   349,
     336,   739,    -1,    28,   343,   737,   349,   336,   739,    -1,
      28,   343,   179,   146,   737,   349,   336,   739,    -1,    28,
     422,   737,   349,   336,   739,    -1,    28,   422,   179,   146,
     737,   349,   336,   739,    -1,    66,    -1,   147,   770,    -1,
     147,   774,   768,   770,    -1,   147,   420,   770,    -1,   147,
     466,   773,   467,   770,    -1,   420,    -1,    -1,   775,    -1,
     517,    -1,    -1,   593,    -1,   491,    -1,   575,    -1,   791,
      -1,   804,    -1,     3,    -1,   807,    -1,   808,    -1,   809,
      -1,   771,    -1,   744,    -1,   776,    -1,   773,   470,   776,
      -1,    31,    -1,    30,    -1,   394,    -1,   151,    -1,   265,
      -1,   772,    -1,   777,   769,    -1,   771,    -1,   774,    -1,
     349,   779,    -1,   349,   224,   779,    -1,   349,   347,   779,
      -1,   780,    -1,   801,   163,    94,    -1,   385,   449,   782,
      -1,   336,   744,    -1,   801,   387,   783,    -1,   801,   455,
     783,    -1,   801,   387,   111,    -1,   801,   455,   111,    -1,
     775,    -1,   517,    -1,   744,    -1,     3,    -1,   677,   744,
     679,    -1,   677,   466,   743,   467,   744,    -1,   517,    -1,
     111,    -1,   224,    -1,   781,    -1,   783,   470,   781,    -1,
     223,   785,    -1,   744,    -1,   411,   788,   790,   768,    -1,
     411,   788,   790,   768,   737,    -1,   411,   788,   790,   768,
     795,    -1,   411,   466,   789,   467,    -1,   411,   466,   789,
     467,   737,   749,    -1,   774,    -1,   420,    -1,   162,    -1,
     164,    -1,     3,    -1,   164,    -1,    -1,   787,    -1,   789,
     470,   787,    -1,   162,    -1,    -1,   495,   116,   163,   792,
     794,   793,   500,    -1,   646,    -1,   646,   745,    -1,   646,
      35,   745,    -1,   426,   681,    -1,    -1,   410,   637,    -1,
      -1,   774,   768,    -1,   774,   768,   737,   749,    -1,   322,
     798,    -1,   801,    -1,    26,    -1,   797,    -1,   385,   449,
      -1,   389,   208,   219,    -1,   800,   593,    -1,   800,   801,
      -1,   800,   385,   449,    -1,   800,   389,   208,   219,    -1,
     800,    26,    -1,   353,    -1,   121,    -1,   745,    -1,   801,
     468,   745,    -1,    90,   567,   422,   737,   557,   763,    35,
     593,   803,    -1,    90,   270,   320,   567,   422,   737,   557,
     763,    35,   593,   803,    -1,    90,   567,   310,   422,   737,
     466,   561,   467,   763,    35,   593,   803,    -1,    90,   270,
     320,   567,   310,   422,   737,   466,   561,   467,   763,    35,
     593,   803,    -1,   429,    65,   268,    -1,   429,    57,    65,
     268,    -1,   429,   224,    65,   268,    -1,    -1,    90,   567,
     376,   806,    35,   593,   805,    -1,    90,   567,   376,   179,
     250,   146,   806,    35,   593,   805,    -1,   429,   104,    -1,
     429,   248,   104,    -1,    -1,   737,   557,   543,   535,    -1,
      18,    -1,    19,    -1,    20,    -1,    21,    -1,    22,    -1,
      23,    -1,    24,    -1,    25,    -1,    27,    -1,    28,    -1,
      29,    -1,    37,    -1,    38,    -1,    40,    -1,    41,    -1,
      42,    -1,    44,    -1,    45,    -1,    46,    -1,    53,    -1,
      54,    -1,    55,    -1,    56,    -1,    57,    -1,    60,    -1,
      61,    -1,    64,    -1,    66,    -1,    67,    -1,    68,    -1,
      69,    -1,    74,    -1,    75,    -1,    76,    -1,    77,    -1,
      78,    -1,    80,    -1,    81,    -1,    82,    -1,    84,    -1,
      85,    -1,    86,    -1,    87,    -1,    88,    -1,    89,    -1,
      92,    -1,    93,    -1,    94,    -1,   102,    -1,   103,    -1,
     104,    -1,   105,    -1,   106,    -1,   107,    -1,   110,    -1,
     112,    -1,   114,    -1,   115,    -1,   116,    -1,   117,    -1,
     118,    -1,   119,    -1,   121,    -1,   122,    -1,   123,    -1,
     124,    -1,   125,    -1,   128,    -1,   129,    -1,   130,    -1,
     131,    -1,   132,    -1,   134,    -1,   135,    -1,   136,    -1,
     138,    -1,   139,    -1,   140,    -1,   142,    -1,   143,    -1,
     144,    -1,   145,    -1,   147,    -1,   148,    -1,   149,    -1,
     152,    -1,   154,    -1,   155,    -1,   157,    -1,   159,    -1,
     161,    -1,   165,    -1,   166,    -1,   167,    -1,   168,    -1,
     170,    -1,   173,    -1,   175,    -1,   176,    -1,   177,    -1,
     178,    -1,   179,    -1,   181,    -1,   182,    -1,   183,    -1,
     184,    -1,   186,    -1,   187,    -1,   188,    -1,   189,    -1,
     190,    -1,   191,    -1,   193,    -1,   196,    -1,   197,    -1,
     198,    -1,   199,    -1,   205,    -1,   208,    -1,   210,    -1,
     211,    -1,   212,    -1,   213,    -1,   214,    -1,   217,    -1,
     219,    -1,   222,    -1,   223,    -1,   224,    -1,   227,    -1,
     228,    -1,   229,    -1,   230,    -1,   231,    -1,   232,    -1,
     233,    -1,   234,    -1,   235,    -1,   236,    -1,   237,    -1,
     238,    -1,   239,    -1,   240,    -1,   241,    -1,   242,    -1,
     246,    -1,   247,    -1,   248,    -1,   251,    -1,   252,    -1,
     254,    -1,   257,    -1,   259,    -1,   260,    -1,   261,    -1,
     263,    -1,   264,    -1,   267,    -1,   268,    -1,   269,    -1,
     272,    -1,   275,    -1,   278,    -1,   279,    -1,   280,    -1,
     281,    -1,   282,    -1,   283,    -1,   284,    -1,   285,    -1,
     286,    -1,   288,    -1,   289,    -1,   291,    -1,   292,    -1,
     294,    -1,   295,    -1,   296,    -1,   298,    -1,   299,    -1,
     300,    -1,   301,    -1,   302,    -1,   303,    -1,   304,    -1,
     305,    -1,   306,    -1,   308,    -1,   309,    -1,   310,    -1,
     311,    -1,   313,    -1,   314,    -1,   315,    -1,   316,    -1,
     317,    -1,   318,    -1,   319,    -1,   320,    -1,   321,    -1,
     322,    -1,   323,    -1,   324,    -1,   326,    -1,   327,    -1,
     329,    -1,   330,    -1,   331,    -1,   333,    -1,   334,    -1,
     335,    -1,   336,    -1,   337,    -1,   338,    -1,   339,    -1,
     340,    -1,   341,    -1,   343,    -1,   344,    -1,   345,    -1,
     346,    -1,   347,    -1,   349,    -1,   351,    -1,   352,    -1,
     353,    -1,   355,    -1,   356,    -1,   358,    -1,   360,    -1,
     361,    -1,   362,    -1,   363,    -1,   364,    -1,   365,    -1,
     366,    -1,   367,    -1,   368,    -1,   369,    -1,   370,    -1,
     371,    -1,   374,    -1,   375,    -1,   377,    -1,   379,    -1,
     380,    -1,   381,    -1,   382,    -1,   383,    -1,   389,    -1,
     390,    -1,   392,    -1,   395,    -1,   396,    -1,   397,    -1,
     398,    -1,   399,    -1,   400,    -1,   401,    -1,   404,    -1,
     405,    -1,   406,    -1,   407,    -1,   408,    -1,   411,    -1,
     412,    -1,   413,    -1,   414,    -1,   415,    -1,   419,    -1,
     421,    -1,   422,    -1,   423,    -1,   424,    -1,   427,    -1,
     430,    -1,   431,    -1,   432,    -1,   433,    -1,   434,    -1,
     435,    -1,   447,    -1,   448,    -1,   449,    -1,    47,    -1,
      48,    -1,    50,    -1,    51,    -1,    62,    -1,    63,    -1,
      70,    -1,   108,    -1,   109,    -1,   146,    -1,   150,    -1,
     156,    -1,   172,    -1,   195,    -1,   200,    -1,   201,    -1,
     203,    -1,   243,    -1,   245,    -1,   249,    -1,   256,    -1,
     258,    -1,   273,    -1,   277,    -1,   290,    -1,   293,    -1,
     307,    -1,   332,    -1,   350,    -1,   357,    -1,   372,    -1,
     385,    -1,   386,    -1,   391,    -1,   393,    -1,   416,    -1,
     417,    -1,   436,    -1,   437,    -1,   438,    -1,   439,    -1,
     440,    -1,   441,    -1,   442,    -1,   443,    -1,   444,    -1,
     445,    -1,   446,    -1,    43,    -1,    49,    -1,    72,    -1,
      79,    -1,    91,    -1,    98,    -1,   162,    -1,   164,    -1,
     180,    -1,   194,    -1,   206,    -1,   207,    -1,   209,    -1,
     218,    -1,   220,    -1,   244,    -1,   253,    -1,   274,    -1,
     276,    -1,   328,    -1,   354,    -1,   378,    -1,   420,    -1,
      26,    -1,    30,    -1,    31,    -1,    32,    -1,    33,    -1,
      34,    -1,    35,    -1,    36,    -1,    39,    -1,    52,    -1,
      58,    -1,    59,    -1,    65,    -1,    71,    -1,    73,    -1,
      83,    -1,    90,    -1,    95,    -1,    96,    -1,    97,    -1,
      99,    -1,   100,    -1,   101,    -1,   111,    -1,   113,    -1,
     120,    -1,   126,    -1,   127,    -1,   133,    -1,   137,    -1,
     141,    -1,   151,    -1,   153,    -1,   158,    -1,   160,    -1,
     163,    -1,   169,    -1,   171,    -1,   174,    -1,   185,    -1,
     192,    -1,   202,    -1,   204,    -1,   215,    -1,   216,    -1,
     221,    -1,   225,    -1,   226,    -1,   250,    -1,   255,    -1,
     262,    -1,   265,    -1,   266,    -1,   270,    -1,   271,    -1,
     287,    -1,   297,    -1,   312,    -1,   325,    -1,   342,    -1,
     348,    -1,   359,    -1,   373,    -1,   376,    -1,   384,    -1,
     387,    -1,   388,    -1,   394,    -1,   402,    -1,   403,    -1,
     409,    -1,   410,    -1,   418,    -1,   425,    -1,   426,    -1,
     428,    -1,   429,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   448,   448,   464,   476,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   515,     9,    18,    27,    36,    45,
      54,    63,    72,    85,    87,    93,    94,    99,   103,   107,
     118,   126,   130,   139,   148,   157,   166,   175,   184,   192,
     200,   209,   218,   227,   236,   253,   262,   271,   280,   290,
     303,   318,   327,   335,   350,   358,   368,   378,   385,   392,
     400,   407,   418,   419,   424,   428,   433,   438,   446,   447,
     452,   456,   457,     7,    13,    19,    25,     6,    15,    25,
      35,    45,    55,    65,    75,    85,    95,   106,   117,   127,
     140,   141,     8,    21,    27,    34,    40,    47,    57,    61,
      70,    79,    88,    95,    96,   101,   113,   118,   143,   153,
     163,   169,   180,   191,   206,   207,   213,   214,   219,   220,
     226,   227,   231,   232,   237,   239,   245,   246,   250,   251,
     256,     7,    14,    22,     9,    19,    32,    33,     7,    14,
      31,    51,    52,     9,    17,    29,    30,    34,    35,    36,
      41,    42,    43,    48,    52,    56,    60,    64,    68,    72,
      76,    80,    84,    88,    92,    97,   101,   105,   112,   113,
     117,   118,   119,     2,     9,    15,    21,    28,    35,    45,
      46,    47,     7,    21,    41,    42,    69,    70,    71,    72,
      73,    74,    78,    79,    84,    89,    90,    91,    92,    93,
      98,   105,   106,   107,   124,   131,   138,   148,   158,   170,
     179,   188,   207,   214,   219,   221,   223,   225,   228,   233,
     234,   238,   239,   240,   241,   246,   250,   251,   256,   263,
     268,   269,   270,   271,   272,   273,   274,   275,   281,   282,
     286,   291,   298,   305,   312,   324,   325,   326,   327,   331,
     336,   337,   338,   343,   348,   349,   350,   351,   352,   353,
     358,   381,   385,   392,   393,   397,   401,   402,   403,   407,
     411,   419,   420,   425,   426,   430,   438,   439,   444,   445,
     449,   454,   458,   462,   467,   475,   476,   480,   481,   487,
     498,   511,   525,   539,   553,   567,   590,   594,   601,   605,
     613,   618,   625,   635,   636,   637,   638,   639,   646,   653,
     654,   659,   660,     9,    19,    29,    39,    49,    59,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    90,    91,    92,    93,    94,    95,    96,   101,
     102,   107,   108,   109,   114,   115,   116,     7,     1,    30,
      53,    54,    59,    63,    68,    72,    80,    81,    85,    86,
      91,    92,    96,    97,   102,   103,   104,   105,   106,   111,
     119,   123,   128,   129,   134,   138,   143,   147,   151,   155,
     159,   163,   167,   171,   175,   179,   183,   187,   191,   195,
     203,   209,   210,   211,   216,   220,    47,    48,    52,    53,
      68,    69,    76,    84,    92,   100,   108,   116,   127,   128,
     155,   169,   184,   185,   204,   208,   212,   229,   236,   243,
     253,   254,   257,   269,   280,   288,   293,   298,   303,   308,
     316,   324,   329,   334,   341,   342,   346,   347,   348,   355,
     356,   360,   361,   365,   366,   370,   374,   375,   378,   387,
     398,   399,   400,   403,   404,   405,   409,   410,   411,   412,
     416,   417,   421,   423,   439,   441,   446,   449,   454,   455,
     463,   483,   484,   486,   491,   492,   496,   497,   500,   501,
     526,   527,   531,   532,   536,   537,   541,   554,   555,   559,
     560,   564,   565,   569,   570,   574,   585,   586,   587,   588,
     592,   593,   598,   599,   600,   609,   615,   633,   634,   638,
     639,   645,   650,   658,   665,   673,   708,   733,   737,   763,
     767,   779,   792,   806,   817,   832,   838,   843,   849,   856,
     857,   865,   869,   873,   879,   886,   891,   892,   893,   894,
     898,   899,   911,   912,   917,   924,   931,   938,   961,   974,
     975,   990,  1000,  1012,  1017,  1018,  1021,  1022,  1025,  1026,
    1031,  1032,  1037,  1041,  1047,  1068,  1076,  1088,  1093,  1100,
    1105,  1111,  1116,  1125,  1127,  1130,  1134,  1135,  1136,  1137,
    1138,  1139,  1144,  1164,  1165,  1166,  1167,  1178,  1184,  1192,
    1193,  1199,  1204,  1209,  1214,  1219,  1224,  1229,  1234,  1240,
    1246,  1252,  1259,  1281,  1290,  1294,  1302,  1306,  1314,  1326,
    1347,  1351,  1357,  1361,  1374,  1382,  1392,  1394,  1396,  1398,
    1400,  1402,  1407,  1408,  1415,  1424,  1432,  1441,  1452,  1460,
    1461,  1462,  1466,  1468,  1470,  1472,  1474,  1476,  1478,  1483,
    1488,  1494,  1502,  1507,  1514,  1521,  1525,  1529,  1565,  1566,
    1568,  1576,  1591,  1593,  1595,  1597,  1599,  1601,  1603,  1605,
    1607,  1609,  1611,  1613,  1615,  1617,  1620,  1622,  1624,  1627,
    1629,  1631,  1633,  1636,  1641,  1648,  1653,  1660,  1665,  1673,
    1678,  1687,  1695,  1703,  1711,  1729,  1737,  1745,  1753,  1761,
    1769,  1785,  1793,  1801,  1809,  1817,  1825,  1833,  1837,  1841,
    1845,  1849,  1857,  1865,  1873,  1881,  1901,  1923,  1934,  1941,
    1966,  1968,  1970,  1972,  1974,  1976,  1978,  1980,  1982,  1984,
    1986,  1988,  1990,  1992,  1994,  1996,  1998,  2000,  2002,  2004,
    2008,  2012,  2016,  2030,  2031,  2032,  2044,  2059,  2071,  2073,
    2075,  2086,  2110,  2123,  2127,  2133,  2140,  2147,  2157,  2164,
    2192,  2227,  2238,  2239,  2246,  2252,  2256,  2260,  2264,  2268,
    2272,  2276,  2280,  2284,  2288,  2292,  2296,  2300,  2304,  2308,
    2312,  2314,  2318,  2327,  2332,  2339,  2354,  2361,  2365,  2369,
    2373,  2377,  2391,  2392,  2396,  2397,  2405,  2406,  2410,  2411,
    2416,  2424,  2426,  2440,  2443,  2470,  2471,  2474,  2475,  2486,
    2504,  2511,  2520,  2537,  2582,  2590,  2598,  2606,  2614,  2635,
    2636,  2637,  2640,  2641,  2642,  2645,  2646,  2649,  2650,  2651,
    2652,  2653,  2654,  2655,  2656,  2657,  2658,  2659,  2660,  2663,
    2665,  2670,  2672,  2677,  2679,  2681,  2683,  2685,  2687,  2701,
    2703,  2707,  2711,  2718,  2722,  2728,  2732,  2741,  2752,  2753,
    2757,  2761,  2768,  2769,  2770,  2771,  2772,  2773,  2774,  2775,
    2785,  2789,  2796,  2803,  2804,  2820,  2824,  2829,  2833,  2848,
    2853,  2857,  2860,  2863,  2864,  2865,  2868,  2875,  2885,  2899,
    2900,  2904,  2915,  2916,  2919,  2920,  2923,  2927,  2934,  2938,
    2942,  2950,  2961,  2962,  2966,  2967,  2971,  2972,  2975,  2976,
    2986,  2987,  2991,  2992,  2995,  3011,  3019,  3027,  3049,  3050,
    3061,  3065,  3092,  3094,  3099,  3101,  3111,  3113,  3124,  3128,
    3132,  3136,  3140,  3149,  3156,  3188,  3192,  3198,  3206,  3218,
    3222,  3226,  3232,  3233,  3249,  3250,  3251,  3256,  3257,  3258,
    3261,  3262,  3265,  3267,  3272,  3273,  3276,  3284,  3285,  3286,
    3287,  3288,     7,    18,    19,    23,    24,    25,    26,     7,
      16,    34,    41,    46,    47,    48,    49,     8,    33,    62,
      66,    67,    72,    73,    78,    79,    83,    84,    89,    90,
       7,    16,    25,    34,    43,    52,     5,     9,    16,    26,
      33,    44,    45,    50,    51,    52,    57,    58,    59,    60,
      61,    65,    66,    67,    68,    73,    74,    79,    83,    91,
      92,    97,    98,    99,   105,   110,   118,   119,    10,    16,
      22,    32,    33,    41,    52,    64,    72,    80,    87,    97,
      99,   105,   109,   113,   128,   135,   136,   137,   141,   142,
       7,    16,     8,    22,    36,    48,    56,    70,    71,    72,
      73,    74,    87,    88,    93,    94,    98,    99,     7,    21,
      25,    32,    43,    44,    50,    51,     9,    19,     2,     7,
      14,    24,    25,    32,     3,    10,    16,    22,    28,    37,
      37,    39,    40,     8,    21,    34,    52,    74,    75,    76,
      77,    11,    24,    41,    42,    43,    48,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LESS_EQUALS", "GREATER_EQUALS", "NOT_EQUALS",
  "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P", "ADMIN", "AFTER",
  "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS", "ANALYSE", "ANALYZE",
  "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION", "ASSIGNMENT",
  "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION", "BACKWARD",
  "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT", "BOOLEAN_P",
  "BOTH", "BY", "CACHE", "CALLED", "CASCADE", "CASCADED", "CASE", "CAST",
  "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER", "CHARACTERISTICS",
  "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER", "COALESCE",
  "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT", "COMMENTS",
  "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION", "CONFLICT",
  "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P", "CONTINUE_P",
  "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV", "CUBE",
  "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DEALLOCATE", "DEC",
  "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE", "DEFERRED",
  "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS", "DESC_P",
  "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD", "DISTINCT",
  "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH", "ELSE",
  "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXTENSION", "EXTERNAL", "EXTRACT", "FALSE_P",
  "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P", "FOLLOWING", "FOR",
  "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM", "FULL", "FUNCTION",
  "FUNCTIONS", "GENERATED", "GLOBAL", "GRANT", "GRANTED", "GROUP_P",
  "GROUPING", "HANDLER", "HAVING", "HEADER_P", "HOLD", "HOUR_P",
  "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P",
  "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT", "INDEX", "INDEXES",
  "INHERIT", "INHERITS", "INITIALLY", "INLINE_P", "INNER_P", "INOUT",
  "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD", "INT_P", "INTEGER",
  "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS", "ISNULL", "ISOLATION",
  "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P",
  "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE", "LIMIT", "LISTEN",
  "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP", "LOCATION", "LOCK_P",
  "LOCKED", "LOGGED", "MAPPING", "MATCH", "MATERIALIZED", "MAXVALUE",
  "METHOD", "MINUTE_P", "MINVALUE", "MODE", "MONTH_P", "MOVE", "NAME_P",
  "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE",
  "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF",
  "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD",
  "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER",
  "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PLACING", "PLANS", "POLICY",
  "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE", "PREPARED",
  "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE",
  "PROGRAM", "PUBLICATION", "QUOTE", "RANGE", "READ_P", "REAL", "REASSIGN",
  "RECHECK", "RECURSIVE", "REF", "REFERENCES", "REFERENCING", "REFRESH",
  "REINDEX", "RELATIVE_P", "RELEASE", "RENAME", "REPEATABLE", "REPLACE",
  "REPLICA", "RESET", "RESTART", "RESTRICT", "RETURNING", "RETURNS",
  "REVOKE", "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE",
  "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P",
  "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER",
  "SESSION", "SESSION_USER", "SET", "SETOF", "SETS", "SHARE", "SHOW",
  "SIMILAR", "SIMPLE", "SKIP", "SMALLINT", "SNAPSHOT", "SOME", "SQL_P",
  "STABLE", "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN",
  "STDOUT", "STORAGE", "STRICT_P", "STRIP_P", "SUBSCRIPTION", "SUBSTRING",
  "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE",
  "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME",
  "TIMESTAMP", "TO", "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT",
  "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED", "TYPE_P", "TYPES_P",
  "UNBOUNDED", "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN",
  "UNLISTEN", "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING", "VACUUM",
  "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR",
  "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW", "VIEWS",
  "VOLATILE", "WHEN", "WHERE", "WHITESPACE_P", "WINDOW", "WITH", "WITHIN",
  "WITHOUT", "WORK", "WRAPPER", "WRITE_P", "XML_P", "XMLATTRIBUTES",
  "XMLCONCAT", "XMLELEMENT", "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES",
  "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P",
  "YES_P", "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'?'", "':'", "$accept",
  "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "RenameStmt", "opt_column", "InsertStmt",
  "insert_rest", "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptTemp",
  "generated_when", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "UpdateStmt", "CopyStmt", "copy_from", "copy_delimiter",
  "copy_generic_opt_arg_list", "opt_using", "opt_as", "opt_program",
  "copy_options", "copy_generic_opt_arg", "copy_generic_opt_elem",
  "opt_oids", "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "tablesample_clause", "opt_repeatable_clause",
  "func_table", "rowsfrom_item", "rowsfrom_list", "opt_col_def_list",
  "opt_ordinality", "where_clause", "TableFuncElementList",
  "TableFuncElement", "opt_collate_clause", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "opt_interval", "interval_second",
  "a_expr", "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "row", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric", "opt_target_list",
  "target_list", "target_el", "qualified_name_list", "qualified_name",
  "name_list", "name", "attr_name", "func_name", "AexprConst", "Iconst",
  "Sconst", "ColId", "type_function_name", "any_name", "attrs",
  "opt_name_list", "param_name", "ColLabel", "PrepareStmt",
  "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExplainStmt", "opt_verbose", "explain_option_arg",
  "ExplainableStmt", "NonReservedWord", "NonReservedWord_or_Sconst",
  "explain_option_list", "analyze_keyword", "opt_boolean_or_string",
  "explain_option_elem", "explain_option_name", "VariableSetStmt",
  "set_rest", "generic_set", "var_value", "zone_value", "var_list",
  "LoadStmt", "file_name", "VacuumStmt", "vacuum_option_elem", "opt_full",
  "vacuum_option_list", "opt_freeze", "DeleteStmt",
  "relation_expr_opt_alias", "where_or_current_clause", "using_clause",
  "AnalyzeStmt", "VariableResetStmt", "generic_reset", "reset_rest",
  "VariableShowStmt", "show_or_describe", "var_name", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,    60,    62,    61,   708,    43,    45,    42,
      47,    37,    94,   709,    91,    93,    40,    41,    46,    59,
      44,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   473,   474,   475,   475,   476,   476,   476,   476,   476,
     476,   476,   476,   476,   476,   476,   476,   476,   476,   476,
     476,   476,   476,   476,   476,   476,   476,   476,   476,   476,
     476,   476,   476,   476,   476,   477,   477,   477,   477,   477,
     477,   477,   477,   478,   478,   479,   479,   480,   480,   480,
     480,   481,   481,   482,   482,   482,   482,   482,   482,   482,
     482,   482,   482,   482,   482,   482,   482,   482,   482,   482,
     482,   482,   482,   482,   482,   482,   482,   482,   482,   482,
     482,   482,   483,   483,   484,   484,   484,   484,   485,   485,
     486,   487,   487,   488,   488,   488,   488,   489,   489,   489,
     489,   489,   489,   489,   489,   489,   489,   489,   489,   489,
     490,   490,   491,   492,   492,   492,   492,   492,   493,   493,
     494,   494,   494,   495,   495,   496,   497,   497,   498,   498,
     498,   499,   499,   499,   500,   500,   501,   501,   502,   502,
     503,   503,   504,   504,   505,   505,   506,   506,   507,   507,
     508,   509,   509,   509,   510,   510,   511,   511,   512,   512,
     512,   513,   513,   514,   514,   515,   515,   516,   516,   516,
     517,   517,   517,   517,   518,   518,   518,   518,   518,   518,
     518,   518,   518,   518,   518,   518,   518,   518,   519,   519,
     520,   520,   520,   521,   521,   521,   521,   521,   521,   522,
     522,   522,   523,   523,   524,   524,   525,   525,   525,   525,
     525,   525,   526,   526,   527,   528,   528,   528,   528,   528,
     529,   529,   529,   529,   530,   530,   530,   530,   530,   530,
     530,   530,   531,   532,   533,   533,   533,   533,   533,   534,
     534,   535,   535,   535,   535,   536,   537,   537,   538,   538,
     539,   539,   539,   539,   539,   539,   539,   539,   540,   540,
     541,   542,   542,   542,   542,   543,   543,   543,   543,   544,
     545,   545,   545,   546,   547,   547,   547,   547,   547,   547,
     548,   549,   549,   550,   550,   551,   552,   552,   552,   553,
     553,   554,   554,   555,   555,   556,   557,   557,   558,   558,
     559,   560,   560,   560,   560,   561,   561,   562,   562,   562,
     563,   563,   563,   563,   563,   563,   564,   564,   565,   565,
     565,   565,   566,   567,   567,   567,   567,   567,   567,   567,
     567,   568,   568,   569,   569,   569,   569,   569,   569,   570,
     570,   570,   570,   570,   570,   570,   570,   570,   570,   570,
     570,   570,   571,   571,   571,   571,   571,   571,   571,   572,
     572,   573,   573,   573,   574,   574,   574,   575,   576,   576,
     577,   577,   578,   578,   579,   579,   580,   580,   581,   581,
     582,   582,   583,   583,   584,   584,   584,   584,   584,   585,
     586,   586,   587,   587,   588,   588,   589,   589,   589,   589,
     589,   589,   589,   589,   589,   589,   589,   589,   589,   589,
     590,   591,   591,   591,   592,   592,   593,   593,   594,   594,
     595,   595,   595,   595,   595,   595,   595,   595,   596,   596,
     597,   597,   597,   597,   597,   597,   597,   598,   598,   598,
     599,   599,   600,   601,   601,   602,   602,   602,   602,   602,
     602,   602,   602,   602,   603,   603,   604,   604,   604,   605,
     605,   606,   606,   607,   607,   608,   609,   609,   610,   610,
     611,   611,   611,   612,   612,   612,   613,   613,   613,   613,
     614,   614,   615,   615,   615,   615,   616,   616,   617,   617,
     618,   619,   619,   619,   620,   620,   621,   621,   622,   622,
     623,   623,   624,   624,   625,   625,   626,   627,   627,   628,
     628,   629,   629,   630,   630,   631,   632,   632,   632,   632,
     633,   633,   634,   634,   634,   635,   635,   636,   636,   637,
     637,   638,   638,   638,   638,   638,   638,   638,   638,   639,
     639,   639,   639,   639,   639,   640,   640,   640,   640,   641,
     641,   642,   642,   642,   642,   642,   643,   643,   643,   643,
     644,   644,   645,   645,   646,   646,   646,   646,   647,   648,
     648,   649,   649,   650,   651,   651,   652,   652,   653,   653,
     654,   654,   655,   655,   656,   657,   657,   658,   658,   658,
     658,   658,   658,   659,   659,   659,   660,   660,   660,   660,
     660,   660,   660,   661,   661,   661,   661,   662,   662,   663,
     663,   664,   664,   664,   664,   664,   664,   664,   664,   664,
     664,   664,   665,   665,   666,   666,   667,   667,   668,   669,
     670,   670,   671,   671,   672,   673,   674,   674,   674,   674,
     674,   674,   675,   675,   676,   676,   676,   676,   677,   678,
     678,   678,   679,   679,   679,   679,   679,   679,   679,   679,
     679,   679,   679,   679,   679,   679,   680,   680,   681,   681,
     681,   681,   681,   681,   681,   681,   681,   681,   681,   681,
     681,   681,   681,   681,   681,   681,   681,   681,   681,   681,
     681,   681,   681,   681,   681,   681,   681,   681,   681,   681,
     681,   681,   681,   681,   681,   681,   681,   681,   681,   681,
     681,   681,   681,   681,   681,   681,   681,   681,   681,   681,
     681,   681,   681,   681,   681,   681,   681,   681,   681,   681,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   683,   683,   683,   683,   683,   683,   683,
     683,   683,   683,   684,   684,   684,   684,   684,   684,   684,
     685,   685,   686,   686,   687,   687,   687,   687,   687,   687,
     687,   687,   687,   687,   687,   687,   687,   687,   687,   687,
     687,   687,   687,   687,   687,   687,   687,   687,   687,   687,
     687,   687,   688,   688,   689,   689,   690,   690,   691,   691,
     692,   693,   693,   693,   694,   695,   695,   696,   696,   697,
     697,   697,   698,   698,   699,   699,   699,   699,   699,   700,
     700,   700,   701,   701,   701,   702,   702,   703,   703,   703,
     703,   703,   703,   703,   703,   703,   703,   703,   703,   704,
     704,   705,   705,   706,   706,   706,   706,   706,   706,   707,
     707,   708,   708,   709,   709,   710,   710,   710,   711,   711,
     712,   712,   713,   713,   713,   713,   713,   713,   713,   713,
     714,   714,   715,   716,   716,   717,   717,   717,   717,   717,
     717,   718,   719,   720,   720,   720,   721,   721,   722,   723,
     723,   724,   725,   725,   726,   726,   727,   727,   728,   728,
     728,   728,   729,   729,   730,   730,   731,   731,   732,   732,
     733,   733,   734,   734,   735,   735,   735,   735,   736,   736,
     737,   737,   738,   738,   739,   740,   741,   741,   742,   742,
     742,   742,   742,   742,   742,   742,   742,   742,   742,   742,
     742,   742,   743,   744,   745,   745,   745,   746,   746,   746,
     747,   747,   748,   748,   749,   749,   750,   751,   751,   751,
     751,   751,   752,   753,   753,   754,   754,   754,   754,   755,
     755,   756,   756,   757,   757,   757,   757,   758,   758,   759,
     760,   760,   761,   761,   762,   762,   763,   763,   764,   764,
     765,   765,   765,   765,   765,   765,   766,   767,   767,   767,
     767,   768,   768,   769,   769,   769,   770,   770,   770,   770,
     770,   771,   771,   771,   771,   772,   772,   773,   773,   774,
     774,   775,   775,   775,   775,   776,   777,   777,   778,   778,
     778,   779,   779,   779,   779,   780,   780,   780,   780,   781,
     781,   782,   782,   782,   782,   782,   782,   782,   783,   783,
     784,   785,   786,   786,   786,   786,   786,   787,   787,   787,
     787,   787,   788,   788,   789,   789,   790,   790,   791,   792,
     792,   792,   793,   793,   794,   794,   795,   795,   796,   797,
     797,   798,   798,   798,   799,   799,   799,   799,   799,   800,
     800,   801,   801,   802,   802,   802,   802,   803,   803,   803,
     803,   804,   804,   805,   805,   805,   806,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   808,   808,   808,   809,
     809,   809,   809,   809,   809,   809,   809,   809,   809,   809,
     809,   809,   809,   809,   809,   809,   809,   809,   809,   809,
     809,   809,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810,   810,
     810,   810,   810,   810,   810,   810,   810,   810,   810
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     4,     6,     4,     6,     4,
       6,     4,     6,     1,     2,     3,     2,     1,     3,     2,
       3,     1,     3,     2,     5,     3,     6,     4,     6,     6,
       6,     5,     5,     6,     9,     4,     5,     7,     6,     4,
       8,     4,     2,     4,     3,     6,     4,     2,     2,     2,
       2,     1,     2,     0,     1,     2,     2,     2,     1,     3,
       4,     2,     0,     2,     3,     2,     3,     6,     6,     8,
       6,     8,     6,     8,     6,     8,     8,    10,     8,    10,
       1,     0,     7,     1,     4,     4,     7,     2,     1,     3,
       4,     3,     0,     1,     0,     2,     3,     5,     8,     5,
       0,     5,     5,     7,     2,     0,     1,     1,     1,     3,
       2,     0,     1,     0,     1,     3,     1,     3,     1,     3,
       2,     2,     4,     5,     5,     8,     1,     0,     3,     9,
      12,     3,     0,     4,     6,     1,     2,     1,     1,     0,
       1,     2,     2,     1,     2,     2,     1,     2,     3,     2,
       2,     2,     2,     3,     3,     3,     1,     3,     1,     0,
       1,     2,     2,     2,     2,     2,     2,     2,     2,     1,
       1,     0,     9,    12,     0,     2,     1,     1,     1,     1,
       1,     1,     3,     0,     1,     2,     1,     1,     2,     2,
       3,     1,     1,     2,     2,     1,     2,     3,     5,     2,
       5,     5,     2,     3,     1,     1,     2,     2,     0,     4,
       0,     3,     4,     4,     0,     3,     2,     0,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       3,     1,     2,     2,     2,     2,     2,     2,     0,     3,
       3,     3,     0,     1,     2,     1,     2,     2,     2,     2,
       4,     1,     3,     1,     3,     1,     1,     1,     1,     3,
       1,     2,     0,     1,     0,     1,     3,     0,     2,     0,
       3,     3,     1,     5,     3,     1,     3,     1,     4,     5,
       5,     6,     3,     7,     4,    11,     1,     3,     2,     2,
       2,     0,     3,     1,     1,     2,     2,     2,     2,     1,
       0,     1,     2,     6,     4,     6,     4,     6,     8,     1,
       1,     1,     2,     1,     2,     1,     1,     1,     3,     3,
       3,     3,     2,     2,     1,     3,     1,     1,     1,     1,
       3,     1,     1,     0,     1,     1,     1,     8,    11,     9,
       1,     1,     3,     0,     1,     3,     1,     0,     1,     0,
       1,     0,     1,     3,     1,     1,     1,     3,     0,     2,
       2,     0,     2,     0,     1,     0,     1,     1,     1,     3,
       3,     1,     1,     3,     3,     3,     3,     4,     3,     2,
       1,     1,     1,     1,     1,     3,     1,     1,     3,     3,
       1,     2,     4,     4,     2,     3,     5,     5,     1,     1,
       9,     9,     1,     2,     4,     4,     4,     2,     2,     3,
       1,     3,     6,     2,     0,     3,     3,     4,     4,     4,
       4,     3,     2,     1,     1,     0,     1,     1,     0,     1,
       5,     1,     0,     1,     0,     3,     1,     3,     4,     3,
       1,     1,     0,     2,     2,     0,     2,     2,     1,     1,
       1,     0,     2,     4,     5,     4,     2,     3,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       3,     0,     1,     3,     1,     1,     2,     2,     0,     1,
       3,     1,     0,     1,     2,     3,     2,     4,     2,     3,
       2,     0,     1,     2,     0,     4,     5,     2,     0,     1,
       3,     2,     3,     2,     3,     2,     3,     1,     4,     3,
       4,     5,     4,     5,     4,     5,     2,     4,     1,     1,
       0,     1,     4,     5,     4,     0,     2,     2,     2,     1,
       1,     0,     4,     2,     1,     2,     2,     4,     6,     4,
       0,     2,     6,     2,     1,     3,     4,     0,     2,     0,
       2,     0,     1,     3,     3,     2,     0,     2,     3,     5,
       6,     2,     3,     3,     4,     0,     1,     1,     1,     1,
       1,     2,     4,     1,     1,     1,     1,     2,     3,     3,
       0,     1,     1,     1,     1,     1,     2,     2,     2,     2,
       2,     1,     3,     0,     1,     1,     1,     1,     5,     2,
       1,     1,     1,     1,     4,     1,     2,     2,     1,     3,
       3,     2,     1,     0,     5,     2,     5,     2,     1,     3,
       3,     0,     1,     1,     1,     1,     1,     1,     3,     3,
       3,     3,     3,     3,     3,     0,     1,     4,     1,     3,
       3,     5,     2,     2,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     2,     2,     3,
       3,     2,     2,     3,     5,     4,     6,     3,     5,     4,
       6,     4,     6,     5,     7,     3,     2,     4,     3,     2,
       3,     3,     4,     3,     4,     3,     4,     5,     6,     6,
       7,     6,     7,     6,     7,     3,     4,     4,     6,     1,
       1,     3,     2,     2,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     2,     2,     5,
       6,     6,     7,     1,     1,     2,     2,     4,     1,     1,
       1,     2,     2,     3,     5,     6,     8,     6,     6,     4,
       4,     1,     1,     1,     5,     1,     1,     4,     1,     4,
       1,     4,     1,     4,     1,     1,     1,     1,     1,     1,
       6,     4,     4,     4,     4,     6,     5,     5,     5,     4,
       6,     4,     5,     0,     5,     0,     2,     0,     1,     3,
       3,     2,     2,     0,     6,     1,     0,     3,     0,     2,
       2,     0,     1,     4,     2,     2,     2,     2,     2,     4,
       3,     5,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       4,     1,     4,     1,     4,     1,     2,     1,     2,     1,
       3,     1,     3,     1,     3,     1,     3,     3,     1,     3,
       3,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       4,     3,     2,     3,     0,     3,     3,     2,     2,     1,
       0,     2,     2,     3,     2,     1,     1,     3,     5,     1,
       2,     4,     2,     0,     1,     0,     1,     2,     2,     2,
       3,     5,     1,     0,     1,     2,     0,     2,     1,     0,
       1,     0,     1,     3,     3,     2,     1,     1,     1,     3,
       1,     2,     1,     3,     1,     1,     1,     2,     1,     1,
       1,     1,     1,     2,     6,     2,     3,     5,     6,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     3,     3,     0,     1,     1,     1,     1,
       1,     1,     5,     3,     0,     1,     1,     1,     1,     4,
       7,     2,     0,     1,     1,     1,     1,    13,    16,     1,
       2,     0,     1,     0,     1,     0,     2,     0,     1,     0,
       6,     8,     6,     8,     6,     8,     1,     2,     4,     3,
       5,     1,     0,     1,     1,     0,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       1,     1,     1,     1,     1,     2,     1,     1,     2,     3,
       3,     1,     3,     3,     2,     3,     3,     3,     3,     1,
       1,     1,     1,     3,     5,     1,     1,     1,     1,     3,
       2,     1,     4,     5,     5,     4,     6,     1,     1,     1,
       1,     1,     1,     0,     1,     3,     1,     0,     7,     1,
       2,     3,     2,     0,     2,     0,     2,     4,     2,     1,
       1,     1,     2,     3,     2,     2,     3,     4,     2,     1,
       1,     1,     3,     9,    11,    12,    14,     3,     4,     4,
       0,     7,    10,     2,     3,     0,     4,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     124,   201,     0,  1030,  1029,   201,  1006,   201,   395,   330,
       0,  1100,     0,   201,     0,   124,     0,     0,     0,     0,
     201,   462,     0,  1099,   201,     0,  1073,     0,     0,     0,
       0,     0,     2,     4,     7,    15,    25,    21,     0,    23,
      13,    18,     6,    27,    14,    17,    28,    10,    26,   429,
     416,   464,   428,   123,   432,    24,    12,    20,     5,     9,
      19,  1012,    31,    22,    29,    16,     8,    30,    32,     0,
      33,    11,   200,   199,   193,     0,     0,     0,     0,     0,
     194,   196,   394,   124,     0,     0,     0,     0,     0,   324,
     323,   998,   329,     0,     0,   954,  1117,  1118,  1119,  1120,
    1121,  1122,  1123,  1124,    95,  1125,  1126,  1127,  1128,  1129,
    1130,  1131,  1132,  1133,  1134,  1135,  1401,  1402,  1403,  1404,
    1136,  1137,  1138,  1139,  1140,  1141,  1142,  1405,  1406,  1143,
    1144,  1145,  1146,  1147,  1407,  1148,  1149,  1150,  1151,  1152,
    1153,  1154,  1155,  1156,  1157,  1158,  1159,  1160,  1161,  1162,
    1163,  1164,  1165,  1166,  1167,  1168,  1169,  1170,  1408,  1409,
    1171,  1172,  1173,  1174,  1175,  1176,  1177,  1178,  1179,  1180,
    1181,  1182,  1183,  1184,  1185,  1186,  1187,  1188,  1189,  1190,
    1191,  1192,  1193,  1194,  1195,  1196,  1197,  1198,  1410,  1199,
    1200,  1201,  1411,  1202,  1203,  1204,  1412,  1205,  1206,  1207,
    1208,  1209,  1210,  1211,  1212,  1413,  1213,  1214,  1215,  1216,
    1217,  1218,  1219,  1220,  1221,  1222,  1223,  1224,  1225,  1226,
    1227,  1228,  1229,  1414,  1230,  1231,  1232,  1233,  1415,  1416,
    1417,  1234,  1235,  1236,  1237,  1238,  1239,  1240,  1241,  1242,
    1243,  1244,  1245,  1246,  1247,  1248,  1249,  1250,  1251,  1252,
    1253,  1254,  1255,  1256,  1257,  1258,  1259,  1260,  1261,  1418,
    1419,  1262,  1263,  1264,  1420,  1265,  1266,  1267,  1421,  1268,
    1422,  1269,  1270,  1271,  1272,  1273,  1274,  1275,  1276,  1277,
    1423,  1278,  1424,  1279,  1280,  1281,  1282,  1283,  1284,  1285,
    1286,  1287,  1288,  1289,  1425,  1290,  1291,  1426,  1292,  1293,
    1294,  1295,  1296,  1297,  1298,  1299,  1300,  1301,  1302,  1303,
    1427,  1304,  1305,  1306,  1307,  1308,  1309,  1310,  1311,  1312,
    1313,  1314,  1315,  1316,  1317,  1318,  1319,  1320,  1321,  1322,
    1323,  1324,  1428,  1325,  1326,  1327,  1328,  1329,  1330,  1331,
    1332,  1333,  1334,  1335,  1336,  1337,  1338,  1339,  1429,  1340,
    1341,  1342,  1343,  1344,  1430,  1345,  1346,  1347,  1348,  1349,
    1350,  1351,  1352,  1353,  1354,  1355,  1356,  1357,  1431,  1358,
    1359,  1360,  1361,  1362,  1363,  1364,  1365,  1432,  1433,  1366,
    1367,  1434,  1368,  1435,  1369,  1370,  1371,  1372,  1373,  1374,
    1375,  1376,  1377,  1378,  1379,  1380,  1381,  1382,  1383,  1384,
    1385,  1436,  1437,  1386,  1387,  1388,  1389,  1390,  1391,  1392,
    1393,  1394,  1395,  1396,  1397,  1438,  1439,  1440,  1441,  1442,
    1443,  1444,  1445,  1446,  1447,  1448,  1398,  1399,  1400,    93,
     934,   955,   956,     0,   345,   346,     0,   354,     0,   343,
       0,   364,   356,   365,   357,   340,   358,   347,   339,     0,
     366,   341,     0,     0,     0,   197,  1292,   162,   330,   124,
       0,  1017,  1018,  1016,  1007,  1012,  1019,  1020,   953,  1061,
    1060,   151,   974,  1090,  1432,  1366,  1101,  1091,  1088,  1089,
     198,   461,   459,     0,   921,  1245,  1328,  1338,  1432,  1038,
    1041,     0,   195,     0,   433,   564,   930,  1072,     0,  1077,
       0,  1306,   437,   440,   965,   438,   429,     0,     0,     1,
     124,     0,     0,     0,   458,   458,     0,   458,     0,   421,
     429,   424,   428,     0,  1011,  1086,  1098,  1432,  1366,  1436,
    1094,  1095,  1218,     0,     0,  1218,     0,  1218,     0,  1218,
       0,   976,   977,   975,     0,   978,   297,   328,   327,   326,
     325,   330,  1218,   982,     0,     0,     0,     0,   993,    96,
      94,   352,   353,     0,   344,   342,     0,  1218,   363,   960,
     359,  1218,   363,   932,  1218,     0,     0,   158,     0,  1009,
    1021,  1449,  1450,  1451,  1452,  1453,  1454,  1455,  1456,  1457,
    1458,  1459,  1460,  1461,  1462,  1463,  1464,  1465,  1466,  1467,
    1468,  1469,  1470,  1471,  1036,     0,  1037,  1027,  1015,  1022,
    1023,  1024,   124,     0,     0,     0,     0,  1092,     0,     0,
       0,   954,   939,   941,   942,   849,   952,   916,  1402,  1403,
    1404,   905,     0,  1405,  1406,  1407,  1451,   788,   775,   784,
     789,   776,   778,   785,  1408,  1409,   729,  1186,  1410,  1411,
     950,  1412,  1415,  1416,  1417,   780,   782,  1418,  1419,     0,
     951,  1421,  1422,  1274,  1424,  1425,  1427,  1428,   786,  1430,
    1431,  1432,  1433,  1434,  1435,   949,   787,  1437,     0,     0,
       0,   927,     0,   916,   760,     0,   603,   604,   626,   627,
     605,   632,   633,   635,   606,     0,   926,   668,   803,   759,
     771,     0,     0,   758,   753,   444,   922,     0,   754,   938,
     940,   906,   936,   955,   959,   444,   920,  1039,  1044,  1040,
       0,     0,     0,     0,     0,   566,   565,   913,     0,   914,
     931,  1071,  1069,  1070,  1068,  1067,  1074,     0,  1076,  1012,
     861,     0,   439,     0,     0,     0,   419,   418,     3,     0,
       0,  1079,     0,   456,   457,     0,     0,     0,     0,     0,
       0,     0,     0,   512,   478,   479,   481,   509,   513,   521,
       0,   425,     0,   965,  1096,     0,     0,     0,   111,   111,
       0,     0,     0,     0,     0,    88,    37,    81,     0,     0,
       0,     0,   176,   189,     0,     0,     0,     0,     0,   186,
       0,     0,   169,    39,   163,   165,     0,   111,     0,    35,
       0,     0,     0,    41,     0,     0,   391,     0,     0,   979,
       0,  1218,   157,  1218,   297,     0,   297,   992,   995,   355,
     351,   349,   348,   350,     0,   361,   362,     0,   334,     0,
     961,     0,     0,   336,     0,     0,     0,     0,   124,     0,
     170,  1032,  1033,  1031,     0,     0,  1014,   173,   190,  1026,
    1035,  1025,  1034,  1013,  1008,  1050,  1049,  1058,   152,   865,
       0,   863,   936,     0,   957,   614,   643,   621,   643,   643,
     610,   610,   623,   611,   612,   648,     0,   643,   610,   615,
       0,   613,   651,   651,   638,   868,   595,   596,   597,   598,
     624,   625,   599,   630,   631,   600,   665,     0,   610,   958,
     124,  1093,  1102,     0,   756,   642,   629,   904,     0,     0,
     637,   636,     0,     0,     0,     0,     0,   619,   618,   617,
     762,   871,     0,   616,     0,     0,   643,   643,   641,   691,
       0,   620,     0,     0,   884,     0,   890,     0,     0,     0,
     647,     0,   645,     0,     0,   692,   672,   673,   760,   861,
       0,   755,   761,   945,     0,     0,   665,   925,   849,     0,
     846,   847,   848,     0,     0,     0,   919,     0,   857,     0,
       0,   706,   855,     0,   709,     0,     0,     0,     0,   843,
     844,   845,   837,   838,   839,   840,   841,   842,   853,   836,
     688,     0,     0,   805,     0,   687,     0,     0,   528,     0,
     943,   907,   528,  1052,  1056,  1057,  1055,     0,  1051,  1043,
    1042,  1047,  1045,  1048,  1046,     0,   912,     0,   967,  1472,
    1473,  1474,  1475,  1476,  1477,  1478,  1479,  1480,  1481,  1482,
    1483,  1484,  1485,  1486,  1487,  1488,  1489,  1490,  1491,  1492,
    1493,  1494,  1495,  1496,  1497,  1498,  1499,  1500,  1501,  1502,
    1503,  1504,  1505,  1506,  1507,  1508,  1509,  1510,  1511,  1512,
    1513,  1514,  1515,  1516,  1517,  1518,  1519,  1520,  1521,  1522,
    1523,  1524,  1525,  1526,  1527,  1528,  1529,  1530,  1531,  1532,
    1533,  1534,  1535,  1536,  1537,  1538,  1539,  1540,  1541,  1542,
    1543,  1544,  1545,  1546,  1547,  1548,   909,   908,   935,   968,
     969,   970,   971,   915,  1065,     0,  1062,   525,     0,   441,
       0,     0,  1085,     0,   118,     0,  1080,     0,   436,   435,
     465,   466,   472,   434,   498,   499,     0,     0,     0,     0,
     518,   516,   489,   482,   488,     0,     0,   486,     0,   490,
     668,   511,   423,   476,   477,   480,   422,     0,   514,     0,
     524,   512,   481,     0,  1087,  1097,     0,     0,     0,     0,
       0,  1218,     0,     0,    72,    53,   249,     0,   110,     0,
       0,     0,     0,     0,     0,     0,    80,    77,    78,    79,
       0,     0,     0,     0,   174,   175,   188,     0,   179,   180,
     177,   181,   182,     0,     0,   167,   168,     0,     0,     0,
       0,   166,     0,     0,     0,     0,     0,     0,     0,     0,
     381,   305,     0,   295,     0,     0,     0,     0,     0,   330,
     985,   983,   981,   984,   986,     0,     0,   154,   156,     0,
     294,   268,     0,   997,  1218,   994,   285,     0,   363,   360,
     962,     0,   363,   933,     0,   363,   161,  1218,   297,     0,
    1010,  1028,   171,   191,   172,   192,     0,   153,     0,     0,
       0,   595,   591,   587,   654,   655,   656,   653,   666,   652,
       0,   601,   657,   973,     0,   607,   610,   972,     0,   917,
       0,     0,   903,   899,     0,     0,     0,     0,     0,     0,
     872,   875,   876,   877,   874,   878,   873,     0,     0,   879,
       0,     0,     0,   640,   639,     0,   835,   846,   847,   848,
     843,   844,   845,   837,   838,   839,   840,   841,   842,   859,
       0,     0,     0,     0,     0,     0,     0,     0,   730,     0,
       0,   830,     0,   861,   889,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   861,   895,     0,   916,     0,
       0,     0,     0,   946,   669,   683,   684,   685,   689,   924,
       0,   918,     0,     0,   670,   697,     0,   896,   725,     0,
     713,     0,   705,     0,   711,   715,   693,   708,     0,   690,
       0,   919,   858,     0,   856,     0,   680,   681,   682,   674,
     675,   676,   677,   678,   679,   686,   834,   832,   833,     0,
       0,     0,   813,     0,     0,   710,  1211,  1245,     0,   455,
     455,   455,   443,   453,   923,     0,   581,     0,     0,     0,
       0,   763,   464,   581,     0,   665,   567,   910,   913,   965,
    1075,  1063,  1064,   862,   964,   124,     0,  1083,     0,     0,
       0,   130,   113,     0,  1081,     0,   146,   528,     0,   916,
       0,   470,   471,     0,   475,  1428,  1325,     0,     0,     0,
       0,   491,   519,     0,   510,     0,   939,   492,   938,   493,
     496,   497,   487,   520,   928,   522,     0,   515,   427,   426,
     526,     0,    38,     0,  1218,    55,     0,     0,     0,     0,
       0,     0,   204,   240,   204,    92,  1218,   363,  1218,   363,
    1121,  1187,  1339,     0,    51,    84,     0,   273,   104,     0,
     258,   302,    74,    89,    97,     0,     0,    40,   164,   178,
     183,   100,   187,   184,  1002,   185,   111,     0,    36,     0,
      98,     0,  1000,     0,     0,    42,   102,  1004,   380,     0,
     296,     0,   390,   370,   371,   381,     0,   297,   982,     0,
       0,     0,     0,     0,   288,   286,   316,     0,   293,   287,
     295,     0,     0,   244,     0,  1115,     0,     0,     0,     0,
     333,   963,   335,     0,   337,     0,     0,  1059,   864,   866,
     867,   592,   588,     0,     0,     0,     0,     0,     0,     0,
       0,   869,   608,   460,     0,     0,     0,   900,     0,     0,
     801,     0,   777,   779,   609,   791,     0,   622,   781,   783,
       0,   850,     0,     0,     0,   792,   732,   733,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   748,   747,   793,   829,     0,
       0,   887,   888,   794,   650,   649,   651,   651,     0,     0,
     894,     0,     0,     0,   799,   757,   862,   634,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   714,   707,     0,
     712,   716,     0,     0,     0,   701,     0,     0,   699,   726,
     695,     0,     0,   727,     0,     0,     0,   770,   455,   455,
     455,   455,   452,   454,     0,     0,     0,     0,  1325,     0,
     550,   527,   529,   537,   550,   555,   772,   579,   773,     0,
     930,     0,   501,   464,   464,   464,   769,     0,     0,   463,
     501,     0,  1053,   912,     0,  1066,     0,  1084,     0,   135,
     117,   137,   136,     0,   144,     0,   916,     0,   135,   119,
       0,   138,     0,  1083,     0,   150,   467,     0,   851,   475,
       0,   469,   495,   494,     0,   485,   517,   483,     0,   523,
       0,     0,     0,   248,     0,     0,     0,   204,     0,     0,
     312,     0,   299,    73,     0,     0,     0,    47,     0,    65,
      57,    43,    71,     0,     0,    76,     0,    69,    86,    87,
      85,    90,     0,   232,   214,   245,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   169,   411,   306,     0,     0,   997,   980,     0,     0,
     157,   297,     0,   272,   268,     0,   266,   265,   267,     0,
    1116,   162,     0,  1111,   996,     0,     0,   991,   363,     0,
       0,     0,   593,     0,   659,   660,   661,   662,   663,   664,
       0,   658,   602,   628,     0,   902,   898,     0,   774,   870,
       0,   860,   882,   881,   731,   743,   744,   745,   883,     0,
       0,     0,   740,   741,   742,   734,   735,   736,   737,   738,
     739,   746,   892,   891,   885,   886,   646,   644,     0,   796,
     797,   798,   893,   831,   665,   947,   671,     0,     0,   698,
     897,   717,     0,     0,     0,   694,   850,     0,     0,     0,
       0,     0,   703,     0,     0,     0,   816,   811,   812,     0,
       0,     0,     0,   446,   445,   451,   550,   555,     0,     0,
     429,     0,   537,     0,   549,   535,   548,     0,     0,   561,
     559,     0,   561,     0,   561,     0,   531,     0,   551,   533,
     548,     0,   571,     0,   931,   580,     0,   508,     0,     0,
       0,     0,   764,   508,     0,   911,   442,  1082,     0,  1078,
       0,     0,     0,   125,   122,   112,     0,     0,   147,   135,
     126,     0,   468,   473,   474,   484,   929,   105,   204,     0,
       0,    54,     0,   314,   260,   292,   275,     0,     0,     0,
     205,     0,   280,     0,    46,    66,     0,    62,     0,    91,
       0,     0,     0,     0,     0,    49,    61,     0,    44,     0,
     363,   363,    52,   259,   211,  1274,     0,   837,   838,   209,
     301,   206,   307,   208,   210,   610,   207,   304,   101,  1003,
       0,    99,     0,  1001,   108,   106,   103,  1005,   393,   373,
       0,     0,  1218,     0,   997,   155,   294,     0,   322,   244,
     317,     0,  1115,  1113,     0,  1110,     0,     0,     0,   338,
       0,     0,   589,   594,   667,   901,   790,   800,   880,     0,
       0,     0,     0,   795,   948,   723,   721,   718,     0,   719,
     702,     0,     0,   700,   696,     0,   728,   802,     0,   818,
     815,   450,   449,   448,   447,   536,   534,   937,     0,   539,
     546,     0,   530,     0,   560,   556,     0,   557,     0,     0,
     558,     0,     0,   532,     0,   546,     0,   578,   464,     0,
       0,   807,   767,   768,   765,   464,   944,   807,  1054,   134,
     114,     0,   115,   145,     0,     0,     0,     0,   139,   367,
       0,   310,    56,     0,   292,     0,   204,   277,   276,   279,
     274,   278,   281,     0,     0,     0,     0,     0,   261,     0,
       0,     0,   225,     0,     0,   292,   298,   221,   222,   331,
       0,     0,     0,    58,    48,    45,    50,    59,     0,     0,
      60,    63,   586,    75,    68,   610,   610,     0,     0,     0,
       0,   369,   382,   376,   169,     0,     0,     0,     0,   294,
       0,     0,     0,  1115,     0,     0,   202,     0,   241,     0,
     159,  1114,     0,  1103,     0,   989,   990,     0,     0,   590,
     749,     0,     0,     0,   720,   724,   722,   704,   804,     0,
     464,   574,     0,   577,   538,     0,     0,   540,     0,     0,
     542,   544,     0,     0,     0,     0,   582,     0,     0,     0,
     934,     0,     0,   500,   502,   505,   504,   507,     0,   431,
       0,   430,     0,     0,     0,   148,     0,   141,   141,     0,
     127,   852,     0,   204,     0,   291,   311,   239,     0,     0,
     223,     0,   229,     0,   263,   264,   262,   224,   292,   297,
     226,   332,     0,    67,     0,    83,   610,     0,   303,   109,
     107,   414,     0,   388,   396,   401,   379,     0,   379,     0,
     398,   402,   379,   397,   379,   392,   393,     0,   997,  1110,
       0,     0,   268,   162,  1112,   257,   250,   251,   252,   253,
     254,   255,   256,   271,   270,   242,   243,     0,     0,     0,
     991,     0,   750,     0,   751,     0,   821,   579,     0,     0,
     573,     0,   547,   563,     0,   543,   541,     0,   552,     0,
     586,     0,   554,   764,   506,     0,   806,   808,     0,   766,
       0,   121,     0,   581,     0,     0,   143,   143,   129,     0,
     297,   313,     0,   283,   290,   282,     0,     0,   220,     0,
     227,   321,   213,   585,     0,    70,     0,   308,   383,     0,
     386,     0,   385,   389,   384,   378,     0,   409,     0,     0,
       0,     0,     0,     0,   368,   372,     0,  1104,     0,  1110,
     244,  1115,     0,  1107,     0,     0,   997,   752,   817,     0,
       0,     0,   572,   575,     0,   545,     0,     0,   583,   584,
     553,   503,     0,     0,   116,   141,   120,   149,   140,   472,
     142,   472,     0,   321,   269,     0,     0,   247,   213,     0,
     238,     0,    64,    82,   309,   415,     0,   374,   410,   399,
     404,     0,   408,   406,   405,   400,   403,     0,   294,  1105,
     203,   160,  1108,  1109,     0,   581,  1401,  1164,  1373,     0,
     819,   822,   820,   814,     0,   562,   570,   809,   810,   143,
     475,   475,   581,   238,   284,   289,     0,   228,   230,   318,
     319,   320,     0,   234,   231,   235,     0,   387,     0,   407,
    1110,     0,   987,     0,   826,   825,   824,   828,   827,   576,
       0,   568,   472,   132,   131,   128,   204,   246,     0,     0,
       0,   236,     0,   237,   212,   375,  1106,   997,     0,     0,
     475,   315,   217,     0,   216,     0,   300,   233,   581,   823,
       0,   133,   215,   219,   218,   988,   569
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    31,    32,    33,    34,  1789,  1790,  1791,  1513,   785,
    2415,  1514,   786,   787,  1793,    35,    36,  1180,   461,  1451,
    1123,  2156,    38,  1744,  1456,  1748,  2285,  1979,  1743,  1750,
    2396,  2469,  1745,  1457,  2286,  1458,    39,    40,  1237,    41,
     577,    42,  1238,  1207,   865,   805,  1197,   857,    43,    74,
      44,  1780,  2040,  2482,  1803,  2576,  2186,  2187,  1515,  2533,
    2534,  1782,  1840,  1189,  2527,  1564,  2353,  1519,  1502,  2188,
    1573,  2295,  2068,  1516,  2010,  1565,  2173,  2402,  1245,  1566,
    2403,  2166,  1567,  1221,  1241,  2012,  2535,  1520,  1222,  2041,
    1176,  1568,  2480,  1569,    93,  2191,    45,   452,   453,   568,
     838,   454,   462,    47,  1555,  2214,  2486,  2215,  2426,  1549,
    2211,  2423,  2321,  1225,  2212,    84,  2335,  2487,  1821,  2322,
     463,   684,    50,    51,    52,   508,   502,   503,  1008,  1422,
    1704,   755,   483,   484,   518,  1729,  1130,  1131,  1464,  1761,
    1155,  1156,   764,   765,  1143,  1147,  1148,  1477,  1470,  1136,
    1967,  2273,  2274,  2275,  2141,  1151,  1152,   767,   768,   769,
    1160,  1487,    54,  1426,  1711,  1712,  1713,  1944,  1945,  1959,
    1955,  2125,  2260,  1714,  2133,  2551,  1715,  2251,  2252,  2370,
    1962,  1722,  2265,  2266,  2315,   895,  1273,   896,   685,   897,
    1285,   686,   933,   899,   687,   688,   689,   902,   690,   691,
     692,   693,   916,   694,   695,   950,  1281,  1282,   740,  1337,
     697,   698,   699,  1717,   700,  1003,  1412,  2279,  2386,  2387,
    1697,  1927,  2109,  2250,  2451,  2510,  2511,   701,  1409,   998,
     999,   702,  2043,  1001,  1330,  1356,   870,   871,   907,  1307,
    1308,  1333,  1624,  1340,  1345,  1651,  1652,  1357,  1378,   703,
    1292,  1293,  1608,   918,   704,   729,  1027,   962,   914,  1373,
     715,   705,   706,  1483,   495,  2256,   573,  1107,   707,   708,
     709,   710,   711,   712,  2470,   840,   745,   873,  1517,    55,
     616,   544,    56,   819,  1232,    57,  2236,  2078,   828,  1247,
    1577,    94,    58,    59,    60,   525,   860,   464,   861,   862,
     605,    61,   866,   607,   608,    62,   489,   490,   867,  1019,
     868,    63,   470,    64,   736,   499,   737,   739,   466,   752,
    1739,  1447,    66,    67,   477,   478,    68,    69,   491,    70,
    2233,   467,  1843,   825,   431,   432,   714,  1112
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2218
static const int yypact[] =
{
    2608,   -85,   631, -2218, -2218,   -85, -2218,   -85,    49,  1266,
   29922, -2218,  4028,   -85, 33498,   921,   228, 33498, 33498, 30369,
     -85,   227, 33945, -2218,   -85, 30816,    -3,  -174, 34392, 33498,
     710,   299,  -139, -2218, -2218, -2218, -2218, -2218,    63, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,   116,
   -2218,   509,   117,   322,  -133, -2218, -2218, -2218, -2218, -2218,
   -2218,   -43, -2218, -2218, -2218, -2218, -2218, -2218, -2218, 18362,
   -2218, -2218, -2218, -2218, -2218, 34839, 33498, 35286, 31263, 35733,
   -2218, -2218, -2218,   710, 33498,   588,   605,   220, 36180, -2218,
   -2218, -2218, -2218,   377,   260, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, 31710, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218,   195, -2218, -2218,   188, -2218,    74, -2218,
     187, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,   238,
   -2218, -2218, 36627, 37074, 37521, -2218, -2218,   201,   521,   332,
   17912, -2218, -2218, -2218, -2218,   -43, -2218, -2218, -2218, -2218,
   -2218,   -26,   256, -2218,   267,   478, -2218, -2218, -2218,   271,
   -2218, -2218,   492,  7736,  7736, 37968,   228, 37968,   355, -2218,
   -2218,    20, -2218, 19262, -2218,   397,   372, -2218,   197,   619,
   10081, 33498,   411, -2218,   401,   411,   396,   457,   322, -2218,
    2608,   773,   713, 30816,   247,   247,   893,   247,   944,   977,
   -2218,  1560, -2218,   489, -2218, 33498, -2218,   514,   764,  -174,
   -2218,   271,   842,   829,   684,   878,  5294,   886,   936,   904,
    1262, -2218, -2218, -2218,   593, -2218,   604, -2218, -2218, -2218,
   -2218,   521,   837, -2218,   672, 38415, 38862, 33498,  1042, -2218,
   -2218, -2218, -2218,   711, -2218, -2218,   428,   987,    41,   680,
   -2218,  1010,   109, -2218,  1014,   906, 10081, -2218,   821, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218,   473, -2218, -2218, 24330, -2218,
   -2218, -2218,   332, 24330, 10081, 42885,  1182, -2218,  1012, 33498,
     791,   123, -2218, -2218, -2218, -2218, -2218, -2218,  1257,   100,
    1259, 10081,   813,   100,   100,   827,  1143, -2218, -2218, -2218,
     134,   850,   852, -2218,    94,    94, -2218,  1018,   873,   885,
   -2218,    97,  1328,  1348,   106,   899,   905,   374,   100, 10081,
   -2218,   912,    94,   919,   923,   924,  1354,   925, -2218,  1396,
     939,    96,   136,   946,   947, -2218, -2218,   108, 10081, 10081,
   10081, -2218,  6798, -2218,   372,   228, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218,   948, -2218,   124,  4370, -2218,   976, -2218,
   -2218,  1134, 10081, -2218, -2218,    48, -2218,   128, -2218, -2218,
   -2218,   372, -2218,   150, -2218,  1216,   965, -2218, -2218, -2218,
     147,  1347, 23436, 23883, 33498, -2218, -2218, 10081, 22542, -2218,
     372, -2218, -2218, -2218, -2218, -2218, -2218,   519, -2218,   -43,
   25168,   533,   411, 33498, 33498,  1408, -2218, -2218, -2218, 30816,
   33498, 39309,  1099, -2218, -2218,   322,   322, 10081,   322,   110,
     548,  8205, 10550,  1304,  1208,   113,   102,  1313, -2218,  1220,
     944,   977, 10081,   401, -2218,  1267, 33498, 28581,   632,   728,
    1046,  1089,  1047,   425,  1415, -2218,  1034, -2218,  1128, 33498,
   43318,   153, -2218,  1463,   153,   153,   558,  1468,  1142,   177,
    1289,   418,   251,  1034,  3102, -2218, 30816,   112,   446,  1034,
   33498,  1148,   493,  1034,  1151, 33498,  1110,   -48,  1394,  1451,
   33498,  1292,  3102,  1293,  1079,  1512,   604, -2218, 39756, -2218,
   -2218, -2218, -2218, -2218, 33498, -2218, -2218, 33498, -2218, 25899,
    1080, 33498, 33498, -2218, 33498, 33498,   542, 40203,   332, 27687,
   -2218, -2218, -2218, -2218,   335,   796, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,  1083, 25168,
     621, -2218,   836,   862, -2218, -2218,  1131, -2218,  1131,  1131,
    1092,  1092,  1093, -2218, -2218, -2218,   374,  1131,  1092, -2218,
   43318, -2218,   341,   438, -2218, -2218,  1520, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218,    15,   629,   525, -2218,
     710, -2218, -2218, 10081,   372, -2218,  1098, 25168,  1144, 10081,
   -2218, -2218, 10081,  1101,  1556,  1556, 10081, -2218, -2218, -2218,
   -2218,   166,  1556, -2218,  1556,  1556,  1131,  1131, -2218, 25426,
   10081, -2218, 21509, 10081, 12895,  8674, 10081,  1186,  1187,  1556,
   -2218,  1556, -2218, 10081,  7267, 25426,  1562,  1562,  1940,  4421,
    1106,   372,   372, -2218,  1556,    76,    70, -2218,   237, 42885,
   10081, 10081, 10081, 10081, 25899,  1192,    91, 33498, 10081,  1112,
    1069, -2218, 10081,  1331, -2218,  1121, 10081,  1201,   155, 10081,
   10081, 10081, 10081, 10081, 10081, 10081, 10081, 10081, -2218, -2218,
   14760,   253,  1419,  1437,   -82,   436, 32157,  7736,  1430,  5860,
   -2218,    75,  1430, -2218, -2218, -2218, -2218,   129, -2218, -2218,
   -2218, -2218,  1083, -2218,  1083,  1129, 22094,  1123, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, 33498,   197, 29475, -2218, 10081, -2218,
     636,  1137,  1190,  1457,  1569, 33498, -2218, 19711,  1395, -2218,
    1136, -2218,  5399,  1395, -2218, -2218, 13353,  1256,  1399,  1346,
   -2218, -2218, -2218,  1145, 25168, 11019, 11019, -2218,   681, 25168,
     776, -2218, -2218, -2218, -2218, -2218, -2218,    27, -2218, 33498,
     -10,  1304,   102,   637, -2218, -2218,  1338,  1147, 40650, 33498,
    1404,  1366,  1407,   -83, -2218, -2218, -2218, 42885, -2218, 33498,
   33498, 41097, 41544, 26346, 33498, 25899, -2218, -2218, -2218, -2218,
   33498,   943, 33498, 25418, -2218, -2218, -2218,   153, -2218, -2218,
   -2218, -2218, -2218, 33498, 33498, -2218, -2218,   153, 33498, 33498,
     153, -2218,  1375, 33498, 33498, 33498, 33498,  1376, 33498, 33498,
    1318, -2218,   664, -2218,  1363,    31,  1205, 33498, 33498,  1664,
   -2218, -2218, -2218, -2218, -2218,  1164,  1485, -2218,  3102,  1486,
   29028,   568,   532,  1204,  1384, -2218, -2218,  1371,    41, -2218,
   -2218, 25899,   109, -2218,  1372,   137, -2218,  1388,   604,  1605,
   -2218, -2218, -2218, -2218, -2218, -2218, 24330, -2218, 10081, 10081,
   10081,  1607,  1178,  1179,  1268,  1274,  1278, -2218,  1183,  1283,
    1556, -2218, -2218, -2218, 42885, -2218,   600, -2218,   683, -2218,
   10081, 10081,    78, -2218, 24811,   700, 10081,  1206,  1207,   754,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218,  1209,  1508, -2218,
    1211,  1212,  1214, -2218, -2218,  4005, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218, -2218,
    1215,  1217, 24845,  1221, 12895, 12895,  6798,  2948, -2218, 12895,
    1223, -2218,   756, 24774,  1222,  1224,  1235,  1250,  1233,  1236,
   24863,  9143, 10081,  9143,  9143, 25077,  1222,  1241, -2218, 10081,
    1244,  1245,  1249, -2218, -2218,  2650,  2650,  2650, 25426, -2218,
    1253, -2218, 12895, 12895, -2218,  1581,  6798, -2218, -2218,  1554,
   -2218,  1140, -2218,  1255, -2218, -2218,  2895, -2218, 21509, 25392,
   10081,    92, 10081,  1112, 10081,  1332,  2650,  2650,  2650,   178,
     178,   164,   164,   164,   385,   436, -2218, -2218, -2218,  1261,
    1265,  1270,  1447,   925, 10081, -2218,   696,   697, 33498,  2073,
    3377,  3817, -2218, -2218, -2218, 16116,  1302, 10081, 10081, 10081,
    1271, -2218,   -57,  1302,  1556,    70, -2218, -2218, 10081,   401,
   -2218, -2218, -2218, 25168, -2218,   710, 16116,  1307,  1321,   300,
   18812,  1474, -2218, 33498, -2218, 33498, -2218,    19,  1285, -2218,
   10081, -2218, -2218,  1065,  1291,  1478,  1479,   799,   799,   681,
    1480, -2218, -2218,  1340, -2218, 10081,   940, -2218,   955, -2218,
   -2218, -2218, -2218,  1279, -2218, -2218,  1524, -2218, -2218, -2218,
   -2218,  1368,  1034, 10081,  1507, -2218,    79,  1298,  1612,   246,
    1577, 33498, -2218,  1498, -2218,   656,  1623,   137,  1625,   137,
   25899, 25899, 25899,   763, -2218, -2218,   228, -2218, -2218,   765,
   -2218,   217, -2218, -2218, -2218,  1386,   496,  1034,  3102, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218,   243,   658,  1034,  1393,
   -2218,  1397, -2218,  1398,   689,  1034, -2218, -2218, -2218,   241,
   -2218, 33498, -2218, -2218, -2218,  1318, 33498,   604, -2218,   867,
   33498, 33498, 33498, 33498, -2218, -2218, -2218,  1316,  1317, -2218,
   42885,   -65,  1527,  1528, 33498,  1369,  1047,  1757,  1649, 33498,
   -2218, -2218, -2218, 33498, -2218,  1657,   710, -2218, -2218, 25168,
   25168,  1343,  1179,  1556,    77,    54,     9,  1464,  1556,  1584,
    1353, -2218, -2218, -2218,   777, 25134, 10081, -2218,  1687, 42885,
   -2218,  4853, -2218, -2218, -2218, -2218, 10081, -2218, -2218, -2218,
   10081, -2218, 21509, 10081,  1662, -2218,  1816,  1816,  4421, 42885,
   12895, 12895, 12895, 12895,    98,   919, 12895, 12895, 12895, 12895,
   12895, 12895, 12895, 12895, 12895, 13822,   185, -2218, -2218, 10081,
   10081,  1671,  1662, -2218, -2218, -2218,   458,   458, 42885,  1367,
    1222,  1370,  1374, 10081, -2218,   372,  4904, -2218,  1359,   228,
   10081,  1651,  4325, 10081,   778, 10081,  1675, -2218, -2218,  1373,
   -2218, -2218, 42885, 10081,  1380,  3613, 12895, 12895,  3679, -2218,
    3697, 10081,  6798, -2218,  1571,  1417, 20160, -2218,  1475,  1475,
    1475,  1475, -2218, -2218, 33498, 33498, 33498, 16565,  1690, 15666,
   32604,  1385,  1058, -2218, 32604, 33051, -2218,  1402, -2218,  1400,
     372, 10081,  1679,   -46,   -46,  1571, -2218,  9612,  1392, -2218,
    1679,  1401, -2218, 25168,  1406, -2218,  1405,  1385, 10081,  1536,
   -2218, -2218, -2218,  1449, -2218,   779, -2218,  1781,  1536, -2218,
     811, -2218, 19711,  1307, 10081,   372, -2218,  1410, -2218,  1291,
     158, -2218, -2218, -2218,  1601, -2218, -2218, -2218, 33498, -2218,
   33498,  5171,  1728, -2218, 33498, 33498, 33498, -2218, 33498,   828,
     870,  1411, -2218,   870,  1708,   552,  1047,   177,  2958,   345,
   -2218, -2218, -2218,  1481, 33498, -2218, 33498, -2218, -2218, -2218,
   -2218, -2218, 26346, -2218, -2218, -2218, 25899, 21061, 25899, 33498,
   33498, 33498, 33498, 33498, 33498, 33498, 33498, 33498, 33498, -2218,
   -2218,   251, -2218, -2218,   241,  1413,  1204,  1451, 41991,   843,
    3102,  1421,  1848, -2218,   568, 29028, -2218, -2218, -2218,  1813,
   -2218,   201,   132, -2218, -2218,   710, 33498,  1482,   137, 33498,
    1556,  1426, -2218,  1428, -2218, -2218, -2218, -2218, -2218, -2218,
    1429, -2218, -2218, -2218, 10081, 25168, -2218,  1444, -2218, 25168,
    5328, -2218, 25168,  1671, -2218,   922,   922,   922,  2799,  1732,
     467,  1446,   922,   922,   922,   161,   161,   156,   156,   156,
    1816,   185, 25168, 25168, -2218, -2218, -2218, -2218,  1448, -2218,
   -2218, -2218,  1222, -2218,    70, -2218,   318, 10081, 10081,  2908,
   -2218, 25454, 10081, 42885,   845,  2908,   268, 10081,  4473,  4502,
   10081, 10081,  4124, 21964,  1450, 10081, 42438, -2218, -2218, 33498,
   33498, 33498, 33498, -2218, -2218, -2218, 32604, 33051,   372,  1453,
   15216,  1058,  1455, 33498, -2218, -2218,  1454, 16116,  1704,  1640,
   -2218, 16116,  1640,    93,  1640,  1707,  1546, 20609, -2218, -2218,
    1461,  1656, -2218,  5860,   450, 25168,  1880,  1767,  1483,  1487,
    1488, 10081,   228,  1767,   228, -2218, -2218, 25168,  7736, -2218,
     710,   -62, 33498,   372,   -55, -2218,  1490, 33498, -2218,  1536,
   25168, 21509, -2218, -2218, -2218, -2218, -2218, -2218, -2218, 33498,
     856, -2218,   860,   870, -2218,  1513, -2218,   179,  1756,    61,
   -2218, 25899,  1689,   279, -2218,  1770,  1698, -2218,   153, -2218,
   10081,   279,  1709,   111, 33498, -2218, -2218,  3499, -2218, 42885,
     137,   137, -2218, -2218, -2218,  1410, 43318,   335,   796, -2218,
   -2218, -2218, -2218, -2218, -2218,   525, -2218,  1511, -2218, -2218,
    1585, -2218,  1587, -2218, -2218, -2218, -2218, -2218,  1502,   122,
   33498,  1936,  1725,  1510,  1204, -2218, 29028,  1016,   471,  1528,
   -2218,   103,  1369, -2218,  1873,  1549,  1714, 33498,  1515, -2218,
    1948,  1519, -2218, -2218, -2218, 25168, -2218, -2218, -2218, 12895,
    1822,  1523, 42885, -2218, -2218,  2908,  2908, 25454,   876, -2218,
    2908, 10081, 10081,  2908,  2908, 10081, -2218, -2218, 21982,  1706,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218,   372, 26793, 32604,
    1526, 33498,  1058, 16116, -2218, -2218,   928, -2218, 16116,  1786,
   -2218, 16116, 28134, -2218, 33498,  1530, 33498, -2218,   -57, 11488,
   10081,  1572, -2218, -2218, -2218,  1571, -2218,  1572, -2218,   965,
   -2218,   300, -2218, -2218,  1914, 17014,  1876, 10081, -2218, -2218,
    1538,   870, -2218,  1694,  1513,  1541, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218,   894,  1542, 33498, 33498, 12895, -2218,   279,
     210,   280, -2218,  1800, 33498,  1513, -2218, -2218, -2218, -2218,
    1900,  1977,  1867, -2218, -2218, 25168, -2218, -2218,  1556,  1556,
   -2218, -2218,  1943, -2218, -2218,   525,   307, 21061, 33498, 33498,
   25899, -2218,  1998, -2218,   251,  1898,   902,   710,  1871, 29028,
    1984,  1553, 33498,  1369,   294,   294, -2218,  1692, -2218,  1693,
   -2218, -2218,   250, -2218, 33498, -2218, -2218, 17014,   710, -2218,
    3217, 12895, 42885,   932, -2218,  2908,  2908,  2908, -2218,  1970,
    1571, -2218,   952,  1992, -2218, 33498,   957, -2218, 10081,  1563,
   -2218, -2218, 16116,   928,  1564,   959, -2218, 42885, 33498,   963,
   42885,  1561,  6329,  1565, -2218, -2218, 25168, 25168, 33498, -2218,
    1570, -2218,  1617, 33498, 10081, -2218,   970,  1974,    32,   -22,
   25168, -2218, 33498, -2218, 25899, -2218,   870, -2218, 25899, 10081,
   -2218,   623,  2799,  2013, -2218, -2218, -2218, -2218,  1513,   604,
   -2218, -2218,  1872, -2218, 33498,  1639,   404,  1655, -2218, -2218,
   -2218, -2218,   972, 17463, -2218, -2218,  2018,   228,  2018,   609,
   -2218, -2218,  2018, -2218,  2018, -2218,  1502,   228,  1204,  1549,
   33498,   710,   568,   201, -2218, -2218, -2218, -2218, -2218, -2218,
   -2218, -2218, -2218, -2218, -2218, -2218, -2218,  1989,  1787,  1991,
    1482,   982,  3217,   989, -2218, 10081,    36,  1402, 26793,  1591,
   -2218,   990, -2218, 25168, 33498, -2218, -2218, 10081, -2218, 33498,
    1943,   994, -2218, -2218, -2218, 11488,  1588, -2218,  2024, -2218,
     710, -2218, 22001,  1302, 17014, 33498, 33498, 33498, -2218,  1713,
     604,   870,  1008, -2218,  1608, -2218, 22035,  1809, -2218,  1887,
   -2218,  1836,  1603, -2218, 10081, -2218,  1674, -2218, -2218, 25899,
   -2218, 27240, -2218, -2218, -2218, -2218,   228, -2218,   228,  1817,
   33498, 22989,   228,   228, -2218, -2218,  2039, -2218,  1610,  1549,
    1528,  1369,  1810, -2218,  1811,  1616,  1204, -2218,  1222, 11957,
   11957,  1618, -2218, -2218, 33498, -2218,  1024,  1025, -2218, -2218,
   -2218, -2218, 33498,  1620, -2218,  1974, -2218, -2218, -2218,   242,
   -2218,   242, 19711,  1836, -2218, 25899, 21061,  1835,  1603,    53,
    1824,  3102, -2218, 25168, -2218, -2218,  1032, -2218, -2218, -2218,
   -2218, 33498,  1621, -2218,  1621, -2218, -2218,   710, 29028, -2218,
   -2218, -2218, -2218, -2218, 17014,  1302, 14291,  1755,   281, 24792,
   -2218, -2218, -2218, -2218,  1038, -2218,  1776, -2218, -2218, 33498,
    1291,  1291,   226,  1824, -2218, -2218,  1907, -2218, -2218, -2218,
   -2218, -2218,   114,  1834, -2218,  1837,  1088, -2218, 27240,  1621,
    1549,  1044, -2218,  2068, -2218, -2218, -2218, -2218, -2218, -2218,
    1635, -2218,   242, -2218, -2218, -2218, -2218, -2218,   376,   376,
    1987, -2218,  1699, -2218, -2218, -2218, -2218,  1204, 12426, 10081,
    1291,   870, -2218,  2093, -2218,   171, -2218, -2218,  1302, -2218,
   22053, -2218, -2218, -2218, -2218, -2218, -2218
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2218, -2218, -2218,  1606, -2218, -2218, -2218,   328, -2218,   931,
   -2218,   323,  -426,   624, -2218, -2218, -2218,  -714,    40, -2218,
   -2218, -2218, -2218,   144,   375, -2218,  -259, -1561,   -13, -2218,
   -2065, -2156, -2218,  -333, -2047, -1389, -2218,  -783,   313, -2218,
   -1767, -2218,  -533,  -770,  -582,  -793, -2218,   121, -2218,  1350,
    -773, -1467, -2027,  -332, -2218,  -414, -2218,  -150, -1452,  -383,
    -367, -2218, -1945,  -723, -2218,  1382,   -63, -2218,   665, -2218,
   -1761, -2218, -2218,   655, -2218,  -729, -2218, -2218, -1494,   333,
    -308, -1921, -1972,   620,  -530, -2218,  -363,   363, -1359, -2218,
     676, -2218,  -296, -2218,  -402, -1813, -2218, -2218, -2218,  1344,
    -534, -2218,    43, -2218, -2218, -2218, -2218, -2218, -1352,   627,
    -153, -2218,  -234, -2218, -2218, -2218, -2218,  -352,   364, -2218,
      13,   173,   -29,     4,     8,    39,    60,  1452,  1472, -2218,
    -499,   602, -2218, -2218,  -487,   -44, -2218,   729, -1787, -1704,
    -327,  1030,  1431,  1434, -2218,   719,  1063,  -988, -1003, -2218,
     474, -2218,  -184, -2218,   230,  -319,  1045, -2218,  1438, -2218,
   -2218, -2218, -2218,  -921,   761, -1626,   501, -1609, -1517,   275,
     262,  -814,   -47,    65, -2218, -2218,   510,  -148, -2218, -2218,
    -149, -1412, -1968,  -158,  -157,  -939,   953,  -775, -2218, -2218,
    -621,   -77, -2218, -2218, -2218,   351,   393, -2218, -2218,   857,
    1171, -2218,   530,  1473,  -613,  -608,  -914,  -690,  2938,  1409,
    -602, -1293, -2218, -1934, -1108, -2218, -2218,    80, -2218,  -237,
   -2218,  -235, -2218, -2218, -2218,  -221, -2217,  1228, -2218,  -930,
   -2218,  3363,   770, -2218, -1325,  -467,  -959, -1197, -1601, -2218,
   -2218, -2218, -2218, -2218, -2218,  -883, -1446,  -471,   846, -2218,
   -2218,   949, -2218, -2218, -2218,  -643,   797,  -491,  -641,   847,
   -2218,  -475,  1238, -2218,   618,  -449,    90,  -747, -1376, -2218,
    1801,   -16,     0,   720,  -425,  -888,  -711, -2218,  -693, -2218,
   -2218,  -842, -2218,   688, -2218,  -772, -2218,  -118, -2218, -2218,
   -1773, -2218, -2218, -2218, -2218,  -295, -2218,  -364,  -320, -2218,
   -2218,    30,  -600,  1403, -2218, -2218,   766, -2218,   983, -2218,
     622, -2218, -2218, -2218,  1133, -2218, -2218, -2218,    44,  1501,
     503, -2218,  1138, -2218, -2218, -2218, -2218, -2218,   518,  -768,
   -2117,    72, -1947,  -816,  1850,  -454,  -325, -1740
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1455
static const yytype_int16 yytable[] =
{
     469,   507,   906,   804,   572,   730,   610,   519,   863,   716,
     430,  1211,  1329,    48,   430,  1194,   816,   471,   430,   476,
    1286,  1730,   476,   927,   928,   496,   856,   570,   430,   430,
    1364,  1259,  1210,   741,   770,  1108,  1230,  1783,   843,    53,
      37,   941,   961,    46,    65,   465,  1231,  1233,  1175,  1719,
    1432,  1234,  1363,  2061,    53,  1992,   578,   521,  1798,  1186,
    1800,   522,  1164,  1684,   952,  1182,  1751,  2046,  1287,   476,
    1719,  1588,    71,  2069,  2072,   496,   430,   496,   496,   496,
    -937,  1914,   530,  1941,   496,   626,   626,  1113,   553,   505,
     494,  1433,  1250,  1215,  2221,   579,   543,   835,    82,  -610,
     429,  -651,  -623,  2395,   457,  -643,  1958,  1017,   472,   846,
     803,  -648,   809,  -638,   813,  1271,  -417,  -420,   504,   504,
     626,  1274,    53,   541,  2226,  2230,   542,   545,  -957,   468,
    1371,  1371,  1716,   468,   468,   611,  -957,  -957,  1016, -1454,
     604,  -651,  1779,   538,  1167,  1482,  1108, -1454, -1454,   817,
    1013,   850,   468,  1716,   610,  -958,   626,   850,  1479,   610,
    1150,   497,   626,  -958,  -958,   835,   534,  1629,  2269,  1300,
     612,   468,  1629,    49,  2170,   969,  1274,   906,   563,   511,
    2318,  -169,  1425,   721,  2253,  1178,  -169,  1985,    49,   969,
    2361,   763,  1275,   835,  1553,  1213,  1629,  1956,  1836,   766,
     731,  1829,  1391,   506,   975,  1894,  -417,  -420,  2196,  1195,
    2154,  1606,  1198,  1199,   516,   960,  2151,  2529,   975,  2227,
    1011,  2287,  2437,  2397,  1879,   516,   520,     3,     4,  2398,
    2558,  1854,  1725,   468,  2228,   977,  2073,  1137,  1503,  1170,
    -377,  2471,    49,  2293,  1485,  1857,   468,  1275,   864,   977,
    1413,  1276,  1006,   481,  1277,   759,    49,  1949,  1014,   927,
     928,   512,  1226,  -835,  2310,  1134,   759,   941,   610,   610,
    -835,  1289,  1301,   753,  1110,  1138,  2344,   906,  1461,  1406,
      21,  1369,  2583,   611,  2004,   952,  1407,  1950,   611,  2543,
    1855,  2220,   500,  2167,  -854,  1120,  1243,  1871,   430,   509,
    2381,  -854,  2128,  2287,    72,  1163,  1276,  2357,  2189,  1277,
    2003,  1952,  2098,  1993,    25,  2358,  1178,  1718,  1289,  1113,
    2345,  2122,  2499,   761,  2304,  2126,  1811,  1500,  1958,   969,
     510,  1719,  2190,  1719,   761,  1392,  2530,   523,  1718,  1262,
    1393,  2449,  1338,  1302,   626,  1601,  1486,    73,  1880,  1278,
     885,  2579,  2076,   482,    27,  1278,   906,  1135,  1881,   732,
    2168,   733,  1462,  2552,   762,   836,  2303,    28,  1113,  2450,
    2346,  1015,  1994,   754,  1227,  1394,  1172,   524,  2347,  1140,
    2074,  -417,  -420,  1501,  1414,  1110,  2399,  2410,   560,   977,
      29,  2305,  1252,  2306,  1278,   610,   969,   611,   611,  2229,
    2519,  1185,  1303,  1111,    30,  1304,  2348,   722,  2531,   570,
    1278,  2155,  1249,  1727,  1716,  2000,  1716,  2002,  1554,  2115,
    1255,  1954,   458,  2566,  1268,   975,  2584,  2088,  2159,   613,
     561,   507,  2572,   836,  2253,  1141,   936,   937,  2545,  1495,
     614,  -417,  -420,  1161,  1116,  1211,  1288,   969,   558,  2525,
     564,  1162,   569,   430,   430,  1295,   977,  2541,  1329,  1299,
    2287,   836,  1279,   498,  1372,  1686,  1764,  2046,  1723,  1724,
     718,   513,  2349,  2171,  2359,   723,   975,   771,  1342,  1344,
    1479,  1280,  1173,  2350,  1260,   476,  2514,   476,   619,  1752,
     606,  2243,  1521,   496,  2501,  2500,   727,  2257,    53,  1214,
     728,   430,  2261,  1291,  1581,  2263,  1305,   977,   830,  1395,
    2254,   837,   521,   496,  1111,    83,   522,  1279,  1007,   915,
    1110,  1732,  2559,    48,   611,   496,  2221,   947,   735,   604,
    1588,  2161,  2213,  1758,  1471,  2307,  1753,   479,   898,   727,
     551,  -937,  1852,   728,   575,  -417,  -420,  1361,   948,    53,
      37,   831,  1374,    46,    65,   496,   496,   496,  1108,  2172,
     926,   742,   949,   932,   906,  2436,  -643,   947,  2198,  2199,
    2287,  1719,  -648,  2546,  -638,  1719,  2441,   566,   751,   842,
     562,  2440,    71,  -417,  -420,  -417,  -420,   531,   948,  -957,
     965,   504,   859,  2090,  1009,  1434,  -835,   859,  2158,  1718,
   -1454,  1718,   951,  1736,   854,   855,  1205,  1819,  1820,   565,
     854,   855,  1408,  1306,  2224,  1529,  -958,   734,  1644,   912,
    1641,  1642,  1643,  1644,  2573,  1532,   997,  -854,  1535,  1206,
    1812,  1503,    49,   506,  -169,  -169,  2375,   994,   995,   996,
     997,  2363,  1639,  1640,  1641,  1642,  1643,  1644,  1187,  1111,
     514,    53,  1721,   507,  1716,  1187,  1500,  2225,  1716,  2351,
    1528,  1200,  2352,  2014,    21,  1602,  2160,   576,  1787,   963,
    1867,   906,  1807,  2505,    21,  1741,  1187,  1574,  1784,   966,
    1205,   520,  2520,    49,  2521,  1808,   618,   554,  2174,    85,
    1874,  1010,  1329,   533,  2027,   536,  1752,   540,    25,  2296,
    2574,  2216,   546,  1206,  1018,  1178,   859,   859,    25,  1742,
     832,   515,  1776,   898,  1580,  1179,   617,  1665,  1582,  1898,
     555,  1584,   615,  1187,   496,  2575,  1187,  2091,  1735,  1110,
    2015,  1110,  1338,  1338,  2177,  1211,  2046,  1338,    27,   619,
    1492,  1873,  1719,   430,   430,    86,  1832,  1719,    27,   496,
     496,  1126,  1719,   556,  1209,  1719,  2264,   620,  1137,  1128,
    1129,    28,  1133,   522,   522,  2570,   522,  1527,  2317,  1895,
    1338,  1338,   947,   926,  2145,  1251,   496,  1177,  1530,  1719,
     516,   738,  1216,  1533,    29,    49,  1538,  1785,    30,   496,
    2179,  1545,  1201,   948,  2578,  1202,  1138,  1110,    30,   557,
    1264,  1178,  2016,  1762,   720,   626,   496,   949,   626,   833,
     496,  1181,   610,   898,   751,  1223,  2553,  2554,  1755,    75,
     496,   930,  1813,  1604,  1188,  1716,  2401,  1559,  1246,  1219,
    1716,  1188,  1810,   504,   569,  1716,   727,   569,  1716,  1718,
     728,   430,   430,  1718,   430,   569,  2405,   496,  1837,  -966,
    -966,   777,  1188,  1844,  1139,   958,   726,   778,  1111,  2429,
    1111,  1719,  1716,   746,  2430,  2416,  2581,   744,  2042,   947,
     926,  1212,  1251,  2407,    21,  1269,  1270,  1758,  2182,   606,
    1659,   743,  1661,  1662,  1185,  1660,  1719,    53,  1187,   947,
     948,  1185,   898,   992,   993,   994,   995,   996,   997,  1188,
    1140,    89,  1188,    90,   951,  1856,  1858,  1859,    25,  1674,
     948,   517,  1185,  2431,   727,  1309,  -937,   750,   728,  1187,
    2183,  1705,  1706,   543,   747,   780,  1111,    92,   520,   520,
     625,   520,  1253,  1629,  1254,  2184,   749, -1455, -1455, -1455,
     848,   611,  1331,   849,  1716,  1728,   757,   960,    27,    53,
     541,     3,     4,   542,   545,   772,  1141,   906,   777,  1185,
     779,    28,  1185,   774,   778,   777,   900,    76,   547,  1716,
     548,   778,   775,  1795,    77,  1797,  2428,   569,  1786,  1787,
    2432,  2466,  2433,  2006,    29,   549,  1114,   550,   776,  1115,
    2094,   926,  1719,   839,  1814,  2025,   906,  1571,    30,  1572,
    1117,  1435,   788,  1118,  2138,  1788,   496,    78,   901,  1256,
    1718,   458,  1118,  1480,  1481,  1718,   906,  2018,  1719,  1948,
    1718,    49,  1289,  1718,   789,  1818,  2185,  1826,  1338,  1338,
    1338,  1338,   806,  2080,  1338,  1338,  1338,  1338,  1338,  1338,
    1338,  1338,  1338,  1338,  1230,   906,  2001,  1718,  1896,  1897,
     810,  2058,    21,    79,  1231,  1233,  1110,  1110,  1110,  1234,
     814,  1329,  2007,  2017,  1188,  2026,   926,   779,  1251,   906,
     815,  2492,  2494,  1316,   779,  1716,  1698,  1700,  1699,  1701,
    1317,  1318,  1319,    49,  1338,  1338,    25,   818,  1267,  2571,
    2202,  1268,  1949,  2542,   820,  1188,  1283,   759,   780,  1284,
     898,  1716,   760,  1444,  1490,  1983,   842,  1118,  -491,  -491,
    2555,   725,  1289,  1521,   496,  2047,   496,   756,  2008,   758,
    2009,   827,  1950,   790,  1185,  1454,    27,  1459,  1719,  1718,
    -463,  1550,  2539,   834,  1551,  -463,  1452,  1951,  2127,    28,
    2130,   900,   791,   773,   829,   735,  1952,   781,   839,  1948,
    1603,   782,  1377,  1118,  1718,  1185,   841,  2206,  1848,   496,
     844,  2222,    29,   920,   921,   761,  2585,  1610,  1177,   430,
    1118,   845,  1953,   822,   824,   826,    30,   554,   783,   430,
    1505,   430,  1509,   901,   430,  1111,  1111,  1111,   938,  1635,
     430,   792,   430,  2258,   906,  1379,  1902,   847,  -463,  1929,
    1930,  1931,  1932,   569,   430,   780,   762,   898,   569,   430,
     555,  1716,   780,   430,   430,   430,   430,   910,   430,   430,
    1380,  1614,  1949,  1648,  1118,  2039,  1118,   496,  1558,  1964,
    1801,   911,  1805,  1802,  2025,  1806,  1968,  1969,  1970,  -463,
    1570,   900,   784,  1828,  1863,  1910,  1981,  1118,  1118,  1982,
     859,   717,  1950,   719,   807,  1575,  1954,   913,   782,  1496,
    1718,  1271,  -614,    21,  -621,   782,  1676,  1951,  2042,  1504,
    2162,  1507,  -495,  -495,  1518,   793,  1952,  1758,  1986,   919,
    1522,  1987,  1524,   901,   777,   808,  1718,  -494,  -494,   557,
     778,  1677,   783,   922,  1531,  2005,    49,    25,  1551,  1534,
     906,   923,  1953,  1539,  1540,  1541,  1542,   507,  1546,  1547,
    2064,   929,  2099,  1551,  2079,  1284,   924,  2316,   925,  1381,
     900,  1113,   794,  2163,  1382,   795,  1551,  2164,  2380,  1383,
    1551,  2380,  1757,  -611,   872,   908,   796,    27,  2259,    30,
    1289,   459,  1025,  2244,  1022,  1024,  1284,   507,  1110,   784,
      28,   931,  1110,  -612,  1110,    80,   784,    81,    21,  -615,
     777,  2297,   901,   455,  2298,   934,   778,   797,  1124,  2338,
     480,   935,  1551,    29,   492, -1455, -1455, -1455,   940,  1639,
    1640,  1641,  1642,  1643,  1644,   942,  1954,   460,  1331,   943,
     944,   945,    25,   779,  1166,  1678,  1718,   777,   777,  2364,
    1679,  -613,  1284,   778,   778,   946,  1002,  1193,   920,   921,
    1004,   799,   953,   954,   964,    49,   906,   938,   496,  2367,
    1006,   507,  2368,   906,  2372,  1720,  2378,   842,  1217,  2379,
    2382,   800,    27,  2379,    85,  1007,  2194,  2393,  1235,  2418,
    2394,  1020,  2419,  1121,  2336,    28,  1720,  2117,  1127,  2446,
    1746,   802,  2394,  1749,  -999,  1459,  2447,  2455,   543,  1284,
     842,  2460,   760,  1384,  2379,  1258,  1313,  1314,    29,   779,
     762,  1157,   903,  1385,  1113,  2474,  1184,  1111,  2475,   906,
    1159,  1111,    30,  1111,    53,   541,  1165,  1338,   542,   545,
      86,  2515,  2516,   898,   842,  1118,  2203,  2204,  1190,  2537,
    1804,  1223,  2538,  2149,  1191,  2549,   779,   779,  2379,   958,
     908,  2567,  1183,  1185,  2394,  1192,  1196,  2323,  1320,  1321,
    1322,  1203,  1323,  1324,  1325,  1326,  1327,  1328,   900,  1204,
    1208,   780,   898,  1822,  1680,  1218,    87,  2042,  1220,  1224,
    1228,  1229,  1236,  1239,  1681,  1240,  1758,  1242,  1251,   958,
     915,  1223,   898,  1266,  1272,  2564,   496,  1110,   926,   932,
    1223,   496,   496,   496,  1290,   626,  1377,  1296,  1448,  1291,
     901,  1346,  1347,   969,   430,  1338,  1359,  1370,  1376,   496,
     811,   898,  1693,   569,   782,  1602,  1387,  1388,  1390,   968,
    1410,  1411,   969,  1425,   906,  1438,  1436,   515,  1710,  1575,
    1446,  2404,    88,  1445,  1453,   898,  1460,   780,  1472,  1473,
     908,   812,  1474,  1493,  1497,  1475,  1498,  1499,    49,  1710,
    1548,   975,  1331,   506,  1423,  2039,  1552,  1556, -1455,   906,
    1560,  1561,  1562,  1576,  1578,   900,  1579,  1583,  1585,  1338,
    1586,  1591,  1593,  1594,   780,   780,    89,   903,    90,  1598,
    1924,  2271,   977,  1905,   906,  1595,  1491,   906,  2280,   625,
     782,  1596,  1629,   507,  1841,  1597,  1630,  1631,  1632,    91,
    1599,  1616,    92,  1612,  1613,   784,  1615,   901,  1617,  1618,
     507,  1619,  1621,  1907,  1654,  1622,  1111,   783,  1625,   908,
    1647,  1653,  1118,  1536,  1543,  1602,  1928,   782,   782,  1655,
    1656,   514,  1670,  1657,   496,   496,   496,  1938,  1664,  1720,
    1946,  1667,  1668,  -464,  1946,  1960,  1669,  1675,  -464,  1691,
    1673,  1682,  1696,  2424,  1537,  1544,  2323,  1692,  1721,   872,
     898,  1694,  1439,  1738,  1441,  1449,  1695,  1740,  1726,  1747,
    1754,  2422,  1760,  1211,  -496,  -497,  1765,   903,  1766,  1768,
    2300,   784,  1459,  1769,  2174,  1770,  1110,  1772,  1775,    49,
    2175, -1455,   515,  2366,  1774,  1778, -1455,  1781,   496,  1794,
     430,  1796,  2176,  1809,  1223,  1177,  1223,  1484,  1246,  2411,
    1815,  -464,  2404,  1834,  1816,  1817,   904,  1835,   784,   784,
    1838,  2044,  1845,  1839,   430,  1846,  2031,  2117,  1842,    21,
    2177, -1455,  2178,  1849,  1278,   960,  2371,  1850,  1822,   430,
     430,   430,   430,   430,   430,   430,   430,   430,   430,  2371,
    1862,  2488,  -464,  1861,  1866,  1650,   903,  1629,   496,  1649,
    1904,   516,    85,    25,  1899,  1177,   898,  1900,  1912,  1913,
    1110,  1901,   516,  1925,  1110,  1557,  1246,  1916,   985,   496,
    1966,  1703,  -999,  1939,  1961,  1947,  2179,  1634,  2075,  1972,
    1997,  1978,  1984,   906,  1980,   958,  1963,  1995,  1974,   610,
    2473,  1975,  1976,    27,  1999,  2013,  1991,  2011,  2029,  2060,
    1936,  2180,  1940,  2067,  2030,  1111,    28,  2066,    86,  2413,
    2071,  2082,  2077,  2083,  2039,  2089,  2084,   908,  2448,  2048,
    2049,  2050,  2051,  2052,  2053,  2054,  2055,  2056,  2057,    29,
    2457,  2086,  2092,  2123,  2124,  2093,  2131,  2107,  1635,  2118,
    2121,   900,  2119,  1450,  2132,  2456,  2110,  2136,  2137,   496,
     496,   496,   496,  2139,    87, -1455,  1946,  1960,  2488,  2181,
    1946,  2140,  2165,  2120,  2182,  2157,  2169,  1720,  2536,  2192,
    2142,  1720,   898,  2193,  2143,  2144,  2146,  2135,  2148,   898,
     900,   904,   517,   901,  2197,  1110,  2207,   610,  2210,  1111,
    2468,  2217,  2208,  1111,  2209,  2218,  2219,  2231,  2232,  2234,
     900,  2237,  1746,  2238,  2239,  2241,  2183,  1459,   872,  2242,
    2249,  1331,  2255,  2150,  2152,  2262,  2268,  2283,   611,  1177,
    2278,  2184,   901,  2289,   908,  2291,  2292,  2294,  2299,   900,
    2308,  2311,  2312,  2313,  2314,   898,  2337,  2340,    49,  2341,
    2342,  1110,   901,  2365,  2201,  2355,  2356,  2369,  2383,  2374,
    2377, -1455,  2390,   900,   903,  2385,  1702,  2389,   992,   993,
     994,   995,   996,   997,    89,  2395,    90,  2324,  2409,  2414,
    2412,   901,  2417,  2425,  2442,  2443,  2444,  2454,  2462,  2463,
    1223,   904,  2472,  2476,  2307,  2478,  1570,    91,  2479,  2481,
      92,  2484,  2491, -1362,  2497,   901,  2498,  2235,  2502,  2503,
    2223,  -429,  2504,  2526,   610,  2513,  1926,  2544,   905,  2532,
    2325,  1551,  2185,  -429,  1111,  2550,   611,  2557,  -429,  2560,
    2568,  2569,  2562,  2558,  1636,  1637,  1638,  2559,  1639,  1640,
    1641,  1642,  1643,  1644,  2582,  2326,   748,  2028,  1938,  1946,
    1710,   430,  1523,  1720,  1710,  2032,  2153,  1988,  1720,  1792,
     898,  1720,  1938,  2327,  2267,  2467,  2270,  2328,  2282,  2522,
     904,   903,  -429,  2065,  2200,  2577,  2528,   872,   872,   872,
    1111,  2408,  2563,    49,    49,  2288,  2556,  2329,   900,  1174,
    2330,  -429,  2354, -1362,  1777,   898,  1799,  2524,  2070,  2033,
    2561,  1823,  1773,  2331,  1825,   569,   430,  2523,  1248,  1830,
    1831,  1833,  1824,  2434,   496,  2485,  2565,  1012,  2059,  1756,
     898,  2044,  1489,   898,  1767,  1119,  1154,  1847,  1153,  1469,
     901,  2461,  -429,  2147,  1973,  1158,  1488,  1737,   430,   430,
    1942,  -429,  2116,   611, -1362,  2129,  2376,  1937,  2452,  1177,
    2453,  2458,   430,  2459,  1592,  2517, -1362,  2281,  2518,  2512,
    2339, -1362,  1415,  1759,   496,  1734, -1362,  2288,  1687,  1689,
      49,  1607,  2445,   507, -1362,  1424,  1827, -1362,  1440,  1587,
    1122,  2223,  1261,  2332,  1442,   430,  1989,     0,     0,     0,
       0,  2333,  1720,   905,   900,     0,  2301,     0,  2270,     0,
       0,     0,     0,     0,     0, -1362,     0,     0,  2388,     0,
       0,     0,     0,   430,     0,     0,     0,     0,     0,     0,
     908,     0,   496,     0, -1362,     0,  1710,     0,  2319,  2320,
       0,  1710,  2334,     0,  1710,     0,   901,   859,     0,     0,
     609,  2427,  2343,     0,   569,     0,     0,     0,     0,     0,
       0,  2435,  1933,  1934,  1935,     0,     0,     0,     0,   908,
       0,     0,     0,   713,   713, -1362,     0,     0, -1362,     0,
     496,     0,  -429,     0, -1362,     0,     0,     0,   904,   908,
     713,     0,     0,     0,  2439,     0,     0,     0,     0,     0,
       0,     0,     0,   905,     0,     0,     0,     0,  1938,     0,
       0,     0,     0,  2391,   430,     0,     0,     0,   908,  2267,
     900,     0,     0,     0,     0,     0,  1996,   900,     0,     0,
      49,     0,     0,     0,  2288,   569,   569,   569, -1362,   898,
       0,     0,   908,  2464,   727,   859,     0,   746,   728,   858,
    2489,    49,  2490,     0,   858,     0,  2495,  2496,     0,     0,
       0,     0,   901,     0,     0,     0,   713,   903,     0,   901,
    1223,  1223,     0,     0,     0,  1710,     0,     0,     0,     0,
       0,     0,   905,   900,     0,   958,  2063,   872,     0,  1703,
       0,     0,     0,     0,  2267,   904,     0,     0,   609,     0,
    2044,     0,  2388,   609,   713,   909,   903,  1258,     0,     0,
       0,     0,  1459,     0,     0, -1362,     0,     0,     0,     0,
       0,   713,     0,     0,     0,   901,   903,     0,     0,     0,
       0,  1223,     0,     0,     0,     0,     0,     0,  1177, -1362,
       0, -1362, -1362,     0,  2288,     0,     0,     0,     0,   713,
    2540,     0,     0,     0,    49,   903,     0,     0,     0,   569,
       0,   858,   859,   858,   858,     0,     0,  2045,   713,   713,
     713,     0,   713,     0,     0,     0,     0, -1362,     0,   903,
   -1362, -1362, -1362,     0,     0,     0,     0,  2111,  2112,  2113,
    2114,     0,   713,     0,     0,     0,     0,     0,   900,     0,
       0,     0,     0,    49,     0,     0,     0,     0,     0,     0,
       0,     0,   609,   609,     0,     0,     0,   713,  1109,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   858,   900,     0,   858,   858,     0,     0,     0,
     901,     0,     0,     0,     0,     0,     0,   713,   -34,     0,
       0,   713,   713,     0,     0,     0,     0,     0,   900,     0,
       0,   900,   713,     0,     0,     0,     1,     0,     0,     0,
       0,     0,     0,   908,     0,   901,     2,     0,     3,     4,
     909,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     905,     0,     0,     0,     5,  1263,  1265,     0,   968,     0,
     901,   969,     0,   901,   903, -1455, -1455, -1455,     0,     0,
      49,     0,     0,     0,     6,     0,     0,     0,     0,     0,
       0,     0,     0,   872,     0,     7,     0,     0,     0,  1109,
     975,   872,     0,     0,     0,     0,     8,   976,     9,   609,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    10,     0,     0,     0,     0,
       0,   977,     0,     0,     0,  1297,  1298,     0,     0,    11,
       0,     0,     0,  1310,     0,  1311,  1312,     0,     0,    12,
     909,   904,     0,  1626,  1627,    13,     0,     0,  1646,   908,
    1348,     0,  1349,    14,     0,    15,  2205,   905,     0,     0,
       0,     0,     0,   713,     0,  1360,  1362,     0,     0,   713,
     903,     0,   713,     0,     0,     0,   713,     0,     0,     0,
     904,  1671,  1672,     0,     0,     0,     0,     0,     0,     0,
     713,     0,     0,   713,   713,   713,   713,     0,     0,     0,
     904,     0,  2309,   713,   713,     0,     0,   625,     0,     0,
    1629,     0,   908,     0,  1630,  1631,  1632,     0,     0,   909,
     713,   713,   713,   713,  1109,     0,     0,   900,   713,   904,
     978,    16,   713,     0,     0,   979,   713,     0,     0,   713,
     713,   713,   713,   713,   713,   713,   713,   713,     0,     0,
     713,     0,  2360,   904,     0,     0,     0,   713,     0,   713,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   901,
     982,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   903,     0,     0,     0,
       0,     0,     0,   903,     0,     0,     0,     0,     0,    17,
       0,     0,    18,   968,     0,     0,   969,     0,     0,     0,
    2400,     0,     0,     0,     0,     0,   968,   985,     0,   969,
       0,     0,     0,     0,     0,     0,     0,  2045,     0,     0,
      19,     0,     0,     0,     0,   975,     0,     0,    20,     0,
       0,     0, -1455,     0,     0,     0,  1478,  1478,   975,   903,
      21,     0,     0,     0,     0, -1455,   625,    22,  2438,  1629,
       0,    23,   908,  1630,  1631,  1632,   977,     0,   713,     0,
       0,    24,     0,     0,     0,     0,     0,     0,   904,   977,
       0,     0,     0,     0,    25,     0,   713,   908,     0,     0,
     908,     0,     0,   790,     0,   713,   713,     0,   858,     0,
       0,     0,     0,     0,   987,  1634,     0,     0,   858,     0,
       0,   858,   791,     0,     0,     0,     0,     0,     0,    26,
       0,     0,     0,     0,    27,     0,     0,   909,     0,     0,
       0,     0,     0,  1109,  1683,  1109,     0,    28,     0,  1875,
    1876,  1877,  1878,   905,     0,  1882,  1883,  1884,  1885,  1886,
    1887,  1888,  1889,  1890,  1891,     0,     0,     0,     0,     0,
      29,   792,  2019,     0,   903,     0,  1635,   858,     0,  2020,
       0,     0,     0,     0,    30, -1455,     0,   -34,     0,     0,
   -1455,  1600,   905,     0,   904,     0,     0,     0, -1455,     0,
       0,     0,     0, -1455,     0,  1918,  1919,     0,     0,   903,
     988,  1109,   905, -1455, -1455, -1455,     0,   992,   993,   994,
     995,   996,   997,     0,     0, -1455,   609,     0,   713,   713,
     713,     0,     0,     0,   903,  2021,     0,   903, -1455,     0,
       0,   905,     0,  1633,   909,     0,     0,   790,     0,     0,
     713,   713,     0,     0,     0,   793,   713,     0,     0,     0,
       0,     0,     0,     0,  1634,   905,   791,     0,     0,     0,
       0,     0,   985,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   985,     0,     0,     0,     0,
       0,     0,     0,     0,   713,   713,   713,     0,     0,   713,
       0,     0,   794,     0,     0,   795,  2045,     0,     0,     0,
     904,   713,   713,   713,   713,   792,   796,   904,  2022,   713,
       0,     0,     0,     0,     0,  1635,     0,     0,     0,     0,
       0,     0,   713,   713,     0,   625,   713,     0,  1629,     0,
       0,     0,  1630,  1631,  1632,  1731,     0,   797,     0,     0,
     713,     0,   713,     0,   713,     0,     0,     0,     0, -1455,
       0,     0,  1636,  1637,  1638,     0,  1639,  1640,  1641,  1642,
    1643,  1644, -1455,   904,   713,     0,     0,     0,  1763,  1763,
       0,     0,     0,     0,     0,   713,     0,   713,   713,   713,
     905,   799,     0,     0,     0,     0,     0,     0,   713,   793,
       0,     0,     0,     0,     0,     0,   713,     0,     0,     0,
       0,   800,     0,     0,     0,     0,     0,     0,     0,     0,
     713,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   802,     0,  2023,     0,   713,  2024,     0,     0,     0,
       0,     0,     0,   903,     0,     0,   794,     0,     0,   795,
       0,     0,     0,   713,     0, -1455,     0,     0,     0,     0,
     796,     0,   992,   993,   994,   995,   996,   997, -1455,     0,
    1109,  1109,  1109,     0,     0,   992,   993,   994,   995,   996,
     997,     0,     0,     0,     0,     0,     0, -1364,   904,     0,
       0,   797,     0,     0,     0,     0,   905,     0,     0,     0,
       0,     0,     0,     0,  1851,  1853,     0,     0,     0,  1860,
       0,  1636,  1637,  1638,     0,  1639,  1640,  1641,  1642,  1643,
    1644,     0,     0,   904,     0,     0,     0,     0,     0,     0,
     909,   696,   696, -1455,  1185,   799,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   904,     0,
       0,   904,     0,     0,     0,   800,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   713,     0,     0,   909,
       0,     0,     0,     0,     0,   802,   713, -1364,     0,     0,
     713,     0,     0,   713,     0,     0,     0,     0,     0,   909,
     713,   713,   713,   713,  1635,     0,   713,   713,   713,   713,
     713,   713,   713,   713,   713,   713,     0,     0,  2240,   713,
     713,     0,   905,     0,     0,     0,     0,     0,   909,   905,
       0,     0,     0,   713,     0,     0,     0,     0, -1364,     0,
     713,     0,     0,   713,     0,   713,     0,     0,     0,     0,
   -1364,     0,   909,   713,   790, -1364,   713,   713,     0,     0,
   -1364,   713,   713,     0,     0,     0,     0,     0, -1364,     0,
       0, -1364,   869,   791,     0,     0,     0,   713,     0,   713,
       0,     0,     0,     0,     0,   905,     0,     0,     0,   917,
       0,   713,     0,     0,     0,     0,     0,   713,     0, -1364,
       0,     0,     0,     0,     0,     0,  2302,     0,   713,     0,
       0,     0,     0,     0,     0,     0,     0,   939, -1364,     0,
       0,     0,   792,     0,   713,     0,     0,     0,   858,     0,
       0,     0,     0,     0,     0,     0,   955,   956,   957,     0,
     959,   968,     0,     0,   969,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1364,
    1005,     0, -1364,     0,     0,     0,     0,   904, -1364,     0,
    2362,  2081,  1109,   975,     0,     0,  1109,   909,  1109,     0,
   -1455,     0,     0,     0,     0,  1026,  2021,     0,     0,     0,
    1636,  1637,  1638,     0,  1639,  1640,  1641,  1642,  1643,  1644,
     905,     0,     0,     0,   977,     0,   793,   968,     0,     0,
     969,     0,     0,     0,     0,  1132,     0,     0,     0,  1144,
    1149,     0, -1364,     0,     0,   968,     0,     0,   969,     0,
       0,     0,     0,     0,   713,   905,     0,     0,     0,   975,
       0,     0,     0,     0,     0,     0, -1455,     0,     0,     0,
       0,     0,     0,   794,     0,     0,   795,   975,     0,     0,
     905,     0,     0,   905, -1455,     0,     0,   796,     0,     0,
     977,     0,  1917,  1703,     0,     0,     0,   713,   713,     0,
       0,     0,   713,   909,     0,     0,     0,   713,   977,     0,
     713,   713,     0,     0,     0,   713,     0,     0,   797, -1364,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1455,     0,     0,     0,   713, -1455,     0,
       0,   713,     0, -1364,     0, -1364, -1364,     0,     0,     0,
       0,     0,     0,   713,     0,     0,     0, -1378,  1920,   858,
       0,   713,   799,     0,   858,     0,     0,     0,   713,     0,
       0,     0,     0, -1455,     0,     0,  1921,     0,  1263,  1265,
       0, -1364,   800,     0, -1364, -1364, -1364,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1294,     0, -1455,
       0,  1109,   802,     0, -1455,     0,     0,     0,     0,     0,
     713,     0,     0,     0,     0,     0,     0, -1455,  1315,   909,
     985,  1332, -1455,     0,  1343,     0,   909,     0,     0,     0,
       0,  1350,  1355,     0,     0,     0,     0,     0,     0, -1455,
       0,     0,     0,     0,     0,     0,     0, -1378,  1365,  1366,
    1367,  1368,     0,     0,     0,     0,  1375, -1455,     0,     0,
    1386,     0,     0,     0,  1389,     0,     0,  1396,  1397,  1398,
    1399,  1400,  1401,  1402,  1403,  1404,     0,     0,  1405,   713,
       0,     0,   909,     0,     0,   696,   985,   869,     0,   905,
       0,   713,   713,     0,     0,   713,     0,     0, -1378,     0,
       0,     0,     0,     0,   985,     0,     0, -1455,   713,     0,
   -1378,     0,     0,   713,     0, -1378,     0,     0,   713,     0,
   -1378,   713,   713,     0,     0,     0,     0,     0, -1378,   713,
     713, -1378,     0,     0,     0,     0,     0,     0,     0,  1263,
    1265,     0,     0,     0,     0,   713,     0,   713,   858,     0,
       0,     0,     0,   968,     0,     0,   969,     0,     0, -1378,
     970,   971,   972,     0,     0,     0,     0,   713,     0,     0,
       0,     0,     0, -1455,     0,     0,     0,   973, -1378,     0,
       0,     0,     0,     0,     0,   975,     0,     0,   433,     0,
       0, -1455,   976,     0,     0,     0,  1443,   909,     0,  1000,
    1109,     0,     0, -1455,     0,     0,     0,     0,     0,     0,
     992,   993,   994,   995,   996,   997,   977,     0,     0, -1378,
       0,     0, -1378,   956,   957,     0,     0,   713, -1378,     0,
       0,   713,   909,     0,     0,     0,     0,     0,     0,     0,
     434,     0,     0,  1000,     0,     0,     0,     0,   713,     0,
       0,     0,   713,     0,     0,   435,     0,   909,     0,     0,
     909,     0,   713,     0,   858,     0,     0,     0,     0, -1455,
       0,     0,   968,     0,   713,   969,   992,   993,   994,   995,
     996,   997, -1378,     0,  1109,     0,     0, -1455,  1109,   713,
       0,     0,     0,     0,   992,   993,   994,   995,   996,   997,
       0,     0,     0,     0,   975,     0,     0,     0,   436,     0,
       0, -1455,     0,   609,     0,     0,   437,     0,     0,     0,
       0,     0,     0,     0,     0,   978,     0,     0,   438,     0,
     979,     0,     0,  1703,     0,   977,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   869,  1589,  1590,     0,
       0,   980,   981,     0,     0,   713,   439,     0,   713, -1378,
       0,     0,     0,     0,     0,   982,     0,   713,     0,  1605,
       0,     0,  1000,     0,  1611,   713,     0,     0,     0,     0,
       0,     0,     0, -1378,   713, -1378, -1378,     0,     0,     0,
       0,     0,     0,     0,     0,   983,     0,     0,   984,     0,
       0,   440,     0,  2105,   713,     0,     0,     0,     0,  1109,
       0,   609,   985,     0,  1628,   986,     0,   858,     0,     0,
    1000, -1378,     0,     0, -1378, -1378, -1378,     0,     0,  1355,
       0,  1355,  1355,     0,     0,     0,     0,  1666,     0,   713,
     713,     0,  1000,     0, -1455,     0,     0,  1339,     0, -1455,
       0,     0,     0,     0,     0,     0,     0,   441,  1000,  1000,
    1000,     0,  1000,     0,     0,  1109,   909,     0,  1685,     0,
    1688,   442,  1690,   625,     0,     0,  1629,     0,     0,     0,
    1630,  1631,  1632,     0, -1455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   713,     0,   713,  1908,     0,   987,
       0,     0,   443,     0,   444,   869,   869,   869,  1000,     0,
       0,   445,     0,   967,   446,     0,  1733,     0,   968,     0,
       0,   969,     0,     0,     0,   970,   971,   972,   609,  1000,
       0,   985,     0,   447,     0,     0,     0,     0,  1132,     0,
       0,     0,   973,     0,   448,   974,     0,     0,     0,     0,
     975,   449,     0,  1149,     0,     0,     0,   976,   713,   713,
     450,     0,     0,     0,     0,     0,     0,     0,     0,   968,
       0,  1771,   969,     0,     0,     0,   970,   971,   972,     0,
       0,   977,     0,     0,     0,     0,     0,     0,     0,     0,
     451,     0,     0,   973,     0,   988,     0,     0,   989,   990,
     991,   975,   992,   993,   994,   995,   996,   997,   976,     0,
       0,     0,     0,     0,     0,  1620,     0,     0, -1455,     0,
       0,   625,     0,     0,  1629,     0,     0,     0,  1630,  1631,
    1632,     0,   977,     0,     0,  1000,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2101,     0,  1000,     0,     0,
     625,     0,  1000,  1629,     0,     0,     0,  1630,  1631,  1632,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1634,     0,     0,  2102,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1865,     0,     0,     0,     0,     0,
     978,     0,     0,     0,  1869,   979,     0,     0,  1870,     0,
       0,  1872,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1455,     0,   980,   981,     0,     0,
       0,   992,   993,   994,   995,   996,   997,  1892,  1893,     0,
     982,     0,  1635,     0,     0,     0,     0,     0,     0,     0,
       0,   978,     0,     0,     0,     0,   979,     0,  1906,     0,
       0,  1909,     0,  1911,     0,     0,     0,     0,     0,     0,
     983,  1915,     0,   984,     0,     0,     0,   980,   981,  1922,
    1923,     0,     0,     0,     0,     0,     0,   985,     0,     0,
     986,   982,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1000,     0,  1965,
       0,     0,     0,     0,     0,   869,     0,     0,     0,     0,
       0,   983,     0,     0,   984,     0,  1977,     0,  1000,  1634,
       0,     0,     0,     0,     0,     0,     0,     0,   985,     0,
       0,   986,  1990,     0,     0,  1000,     0,  1339,  1339,     0,
    1645,     0,  1339,     0,     0,     0,  1000,     0,  1634,     0,
       0,     0,     0,  1000,     0,     0,     0,     0,  1000,     0,
       0,     0,     0,     0,   987,     0,     0,     0,  1000,  1000,
    1000,  1000,     0,     0,     0,  1339,  1339,     0,  1000,     0,
    1635,     0,     0,     0,     0,     0,     0,     0,     0,  1000,
       0,     0,  1000,     0,     0,     0,     0,     0,     0,  1000,
    1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1635,
       0,     0,     0,     0,     0,   987,     0,     0,  1636,  1637,
    1638,     0,  1639,  1640,  1641,  1642,  1643,  1644,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2085,     0,     0,     0,  1000,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     988,     0,     0,   989,   990,   991,     0,   992,   993,   994,
     995,   996,   997,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2095,  2096,     0,     0,     0,
    2097,     0,     0,     0,     0,  2100,     0,     0,  2103,  2104,
       0,   968,     0,  2108,   969,     0,     0,     0,   970,   971,
     972,   988,     0,     0,   989,   990,   991,     0,   992,   993,
     994,   995,   996,   997,     0,   973,     0,     0,  1358,     0,
       0,     0,     0,   975,     0,     0,     0,     0,     0,     0,
     976,   869,     0,     0,     0,     0,     0,     0,     0,   869,
       0,     0,   968,     0,     0,   969,   696,     0,     0,   970,
     971,   972,     0,     0,   977,     0,  1636,  1637,  1638,     0,
    1639,  1640,  1641,  1642,  1643,  1644,   973,     0,     0,     0,
       0,     0,     0,     0,   975,     0,     0,     0,     0,     0,
       0,   976,  1000,  1000,     0,  1636,  1637,  1638,  2195,  1639,
    1640,  1641,  1642,  1643,  1644,     0,     0,     0,  1000,     0,
       0,     0,     0,     0,  1000,   977,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1645,
    1645,  1000,     0,  1339,  1339,  1339,  1339,     0,     0,  1339,
    1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,  1645,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1000,
       0,     0,     0,   978,  1645,  1645,     0,     0,   979,  2245,
    2246,     0,     0,  2247,     0,     0,     0,     0,  1000,  1339,
    1339,  1000,     0,  1000,     0,     0,     0,     0,     0,   980,
     981,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   982,     0,     0,     0,  2276,  2277,     0,
       0,     0,     0,     0,   978,     0,     0,     0,     0,   979,
       0,     0,     0,     0,     0,  2290,  1000,     0,     0,     0,
       0,     0,     0,   983,     0,     0,   984,     0,     0,     0,
     980,   981,     0,     0,     0,     0,     0,     0,     0,     0,
     985,     0,     0,   986,   982,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1000,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   983,     0,     0,   984,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   985,     0,     0,   986,     0,     0,     0,     0,   968,
       0,     0,   969,     0,     0,     0,   970,   971,   972,     0,
       0,     0,     0,     0,     0,     0,  2373,     0,     0,     0,
       0,     0,     0,   973,     0,     0,     0,   987,     0,     0,
     959,   975,     0,     0,     0,     0,     0,     0,   976,     0,
       0,     0,  2392,     0,     0,     0,     0,     0,  1000,     0,
       0,     0,  1000,  1000,     0,  1000,     0,  2406,  1645,  1645,
    1645,  1645,   977,     0,     0,  1645,  1645,  1645,  1645,  1645,
    1645,  1645,  1645,  1645,  1645,  1000,  1000,     0,   987,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1000,
       0,     0,  1000,     0,  1000,     0,     0,     0,  1000,     0,
       0,  1645,  1645,     0,     0,  1000,  1000,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   988,     0,     0,   989,   990,   991,     0,
     992,   993,   994,   995,   996,   997,   777,     0,     0,     0,
    1868,     0,   778,  2276,     0,     0,     0,     0,  1000,   790,
       0,     0,     0,     0,     0,     0,   968,     0,     0,   969,
    1000,     0,     0,   970,   971,   972,     0,     0,   791,     0,
       0,   978,  2483,  1000,   988,     0,   979,   989,   990,   991,
     973,   992,   993,   994,   995,   996,   997,     0,   975,     0,
       0,  1903,     0,     0,     0,   976,     0,   980,   981,     0,
       0,     0,     0,     0,     0,     0,     0,  2509,  2509,     0,
       0,   982,     0,     0,     0,     0,     0,   792,     0,   977,
       0,     0,     0,     0,     0,     0,     0,   968,     0,     0,
     969,     0,     0,     0,   970,   971,   972,     0,     0,     0,
       0,   983,     0,     0,   984,   779,     0,     0,     0,     0,
       0,   973,     0,     0,     0,  1461,     0,     0,   985,   975,
       0,   986,     0,     0,  2509,     0,   976,     0,  1000,     0,
       0,     0,  1339,     0,     0,     0,     0,     0,  1000,  1000,
    1000,     0,     0,  1000,     0,     0,  1000,  1000,     0,     0,
     977,  1000,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   793,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2509,  2580,   978,     0,
       0,     0,     0,   979,     0,     0,     0,     0,     0,  1462,
       0,     0,     0,     0,     0,   987,     0,     0,   794,     0,
       0,   795,     0,     0,   980,   981,     0,     0,     0,     0,
    1339,     0,   796,     0,     0,     0,     0,     0,   982,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1000,     0,
       0,     0,     0,   780,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   797,     0,     0,     0,     0,   983,   978,
       0,   984,     0,     0,   979,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   985,     0,     0,   986,     0,
       0,     0,     0,  1645,  1339,   980,   981,     0,  1000,  1000,
    1000,     0,   798,     0,     0,     0,   782,   799,     0,   982,
       0,   988,     0,     0,   989,   990,   991,     0,   992,   993,
     994,   995,   996,   997,     0,     0,     0,   800,  1998,  1000,
    1000,     0,     0,   801,     0,     0,     0,     0,     0,   983,
       0,     0,   984,  1000,     0,     0,     0,   802,     0,     0,
       0,     0,     0,     0,     0,  1645,   985,     0,     0,   986,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   987,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   784,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1645,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1000,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   987,     0,  1000,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1000,
       0,     0,     0,     0,     0,     0,     0,     0,   988,     0,
       0,   989,   990,   991,     0,   992,   993,   994,   995,   996,
     997,     0,     0,     0,     0,  2087,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1463,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1000,     0,     0,   988,
       0,     0,   989,   990,   991,     0,   992,   993,   994,   995,
     996,   997,     0,   621,   622,   468,   623,   624,   625,   626,
     627,     0,  1000,     0,     0,     0,     0,     0,    96,    97,
      98,    99,   100,   101,   102,   103,  1427,   105,   106,   107,
       0,     0,     0,     0,     0,     0,     0,   108,   109,     0,
     110,   111,   112,   581,   113,   114,   115,   116,   628,   582,
     629,   630,     0,   120,   121,   122,   123,   124,   631,   632,
     125,   126,   633,   634,   129,     0,   130,   131,   132,   133,
     635,     0,   636,     0,   135,   136,   137,   138,   139,   584,
     140,   141,   142,  1000,   143,   144,   145,   146,   147,   148,
       0,   585,   149,   150,   151,   637,   638,   639,   640,   641,
     642,   643,   152,   153,   154,   155,   156,   157,   644,   645,
     160,   646,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,  1428,     0,   173,   174,
     647,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   648,   189,   190,   191,
     649,   650,   193,     0,   194,   195,   651,   197,     0,   198,
       0,   199,   587,     0,   588,   200,   201,   202,   203,     0,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
     589,   212,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,     0,   222,   590,   223,   224,   225,   226,   227,
     652,   653,     0,   654,     0,   231,   591,   592,   232,   593,
     233,   234,   235,   236,   237,     0,     0,   238,   594,   239,
     595,     0,   240,   241,   242,   655,   656,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   657,   596,   658,   261,   262,   263,   264,
     659,   265,   266,   597,   267,   660,   661,   269,   662,   271,
     272,   273,     0,   274,   275,     0,     0,   663,   277,   278,
       0,     0,   279,   280,   598,   281,   599,   664,   283,   284,
     285,   286,   287,   288,   289,   290,   291,     0,   292,   293,
     665,   295,   296,   297,   456,   299,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   666,   311,   312,
     313,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   600,   329,
     330,   331,   667,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   668,   347,
     348,   349,   350,   351,   601,   352,   353,   669,   355,     0,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   670,     0,   369,   370,     0,   371,   602,   372,
     373,   374,   375,   376,     0,   671,   672,     0,     0,   379,
     380,   673,   382,   674,   675,   384,   385,   386,   387,   388,
     389,   390,     0,     0,   391,   392,   393,   394,   395,   676,
       0,   396,   397,   398,   399,   400,   401,   677,  1429,   403,
     603,   404,   405,   406,   407,     0,     0,   408,     0,     0,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     678,     0,     0,     0,     0,     0,     0,   679,   680,  1430,
       0,     0,     0,     0,     0,     0,   682,  1431,     0,     0,
       0,   683,   621,   622,   468,   623,   624,   625,   626,   627,
       0,     0,     0,     0,     0,     0,     0,    96,    97,    98,
      99,   100,   101,   102,   103,     0,   105,   106,   107,     0,
       0,     0,     0,     0,     0,     0,   108,   109,     0,   110,
     111,   112,   581,   113,   114,   115,   116,   628,   582,   629,
     630,     0,   120,   121,   122,   123,   124,   631,   632,   125,
     126,   633,   634,   129,     0,   130,   131,   132,   133,   635,
       0,   636,     0,   135,   136,   137,   138,   139,   584,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,     0,
     585,   149,   150,   151,   637,   638,   639,   640,   641,   642,
     643,   152,   153,   154,   155,   156,   157,   644,   645,   160,
     646,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   647,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   648,   189,   190,   191,   649,
     650,   193,     0,   194,   195,   651,   197,     0,   198,     0,
     199,   587,     0,   588,   200,   201,   202,   203,     0,   204,
       0,   205,   206,     0,   207,   208,   209,   210,   211,   589,
     212,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,     0,   222,   590,   223,   224,   225,   226,   227,   652,
     653,     0,   654,     0,   231,   591,   592,   232,   593,   233,
     234,   235,   236,   237,     0,     0,   238,   594,   239,   595,
       0,   240,   241,   242,   655,   656,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   657,   596,   658,   261,   262,   263,   264,   659,
     265,   266,   597,   267,   660,   661,   269,   662,   271,   272,
     273,     0,   274,   275,     0,     0,   663,   277,   278,     0,
       0,   279,   280,   598,   281,   599,   664,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   292,   293,   665,
     295,   296,   297,   456,   299,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   666,   311,   312,   313,
     314,     0,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   600,   329,   330,
     331,   667,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    21,   342,   343,   344,   345,   346,   668,   347,   348,
     349,   350,   351,   601,   352,   353,   669,   355,     0,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   670,     0,   369,   370,    25,   371,   602,   372,   373,
     374,   375,   376,     0,   671,   672,     0,     0,   379,   380,
     673,   382,   674,   675,   384,   385,   386,   387,   388,   389,
     390,     0,     0,   391,   392,   393,   394,   395,   676,     0,
     396,   397,   398,   399,   400,   529,   677,     0,   403,   603,
     404,   405,   406,   407,     0,     0,   408,     0,    28,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   678,
       0,    29,     0,     0,     0,     0,   679,   680,     0,     0,
       0,     0,     0,     0,     0,   682,  2384,     0,     0,     0,
     683,   621,   622,   468,   623,   624,   625,   626,   627,     0,
       0,     0,     0,     0,     0,     0,    96,    97,    98,    99,
     100,   101,   102,   103,     0,   105,   106,   107,     0,     0,
       0,     0,     0,     0,     0,   108,   109,     0,   110,   111,
     112,   581,   113,   114,   115,   116,   628,   582,   629,   630,
       0,   120,   121,   122,   123,   124,   631,   632,   125,   126,
     633,   634,   129,     0,   130,   131,   132,   133,   635,     0,
     636,     0,   135,   136,   137,   138,   139,   584,   140,   141,
     142,     0,   143,   144,   145,   146,   147,   148,     0,   585,
     149,   150,   151,   637,   638,   639,   640,   641,   642,   643,
     152,   153,   154,   155,   156,   157,   644,   645,   160,   646,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   647,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   648,   189,   190,   191,   649,   650,
     193,     0,   194,   195,   651,   197,     0,   198,     0,   199,
     587,     0,   588,   200,   201,   202,   203,     0,   204,     0,
     205,   206,     0,   207,   208,   209,   210,   211,   589,   212,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   221,
       0,   222,   590,   223,   224,   225,   226,   227,   652,   653,
       0,   654,     0,   231,   591,   592,   232,   593,   233,   234,
     235,   236,   237,     0,     0,   238,   594,   239,   595,     0,
     240,   241,   242,   655,   656,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   657,   596,   658,   261,   262,   263,   264,   659,   265,
     266,   597,   267,   660,   661,   269,   662,   271,   272,   273,
       0,   274,   275,     0,     0,   663,   277,   278,     0,     0,
     279,   280,   598,   281,   599,   664,   283,   284,   285,   286,
     287,   288,   289,   290,   291,     0,   292,   293,   665,   295,
     296,   297,   456,   299,   300,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   666,   311,   312,   313,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   600,   329,   330,   331,
     667,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      21,   342,   343,   344,   345,   346,   668,   347,   348,   349,
     350,   351,   601,   352,   353,   669,   355,     0,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     670,     0,   369,   370,    25,   371,   602,   372,   373,   374,
     375,   376,     0,   671,   672,     0,     0,   379,   380,   673,
     382,   674,   675,   384,   385,   386,   387,   388,   389,   390,
       0,     0,   391,   392,   393,   394,   395,   676,     0,   396,
     397,   398,   399,   400,   529,   677,     0,   403,   603,   404,
     405,   406,   407,     0,     0,   408,     0,    28,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   678,     0,
      29,     0,     0,     0,     0,   679,   680,     0,     0,     0,
       0,     0,     0,     0,   682,     0,     0,     0,     0,   683,
     621,   622,   468,   623,   624,   625,   626,   627,     0,     0,
       0,     0,     0,     0,     0,    96,    97,    98,    99,   100,
     101,   102,   103,     0,   105,   106,   107,     0,     0,     0,
       0,     0,     0,     0,   108,   109,     0,   110,   111,   112,
     581,   113,   114,   115,   116,   628,   582,   629,   630,  1351,
     120,   121,   122,   123,   124,   631,   632,   125,   126,   633,
     634,   129,     0,   130,   131,   132,   133,   635,     0,   636,
       0,   135,   136,   137,   138,   139,   584,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,     0,   585,   149,
     150,   151,   637,   638,   639,   640,   641,   642,   643,   152,
     153,   154,   155,   156,   157,   644,   645,   160,   646,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   647,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   648,   189,   190,   191,   649,   650,   193,
       0,   194,   195,   651,   197,     0,   198,     0,   199,   587,
    1352,   588,   200,   201,   202,   203,     0,   204,     0,   205,
     206,     0,   207,   208,   209,   210,   211,   589,   212,   213,
     214,   215,     0,   216,   217,   218,   219,   220,   221,     0,
     222,   590,   223,   224,   225,   226,   227,   652,   653,     0,
     654,     0,   231,   591,   592,   232,   593,   233,   234,   235,
     236,   237,     0,  1353,   238,   594,   239,   595,     0,   240,
     241,   242,   655,   656,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     657,   596,   658,   261,   262,   263,   264,   659,   265,   266,
     597,   267,   660,   661,   269,   662,   271,   272,   273,     0,
     274,   275,     0,     0,   663,   277,   278,     0,     0,   279,
     280,   598,   281,   599,   664,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   292,   293,   665,   295,   296,
     297,   456,   299,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   666,   311,   312,   313,   314,     0,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   600,   329,   330,   331,   667,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   668,   347,   348,   349,   350,
     351,   601,   352,   353,   669,   355,     0,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   670,
       0,   369,   370,     0,   371,   602,   372,   373,   374,   375,
     376,     0,   671,   672,     0,  1354,   379,   380,   673,   382,
     674,   675,   384,   385,   386,   387,   388,   389,   390,     0,
       0,   391,   392,   393,   394,   395,   676,     0,   396,   397,
     398,   399,   400,   401,   677,     0,   403,   603,   404,   405,
     406,   407,     0,     0,   408,     0,     0,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   678,     0,     0,
       0,     0,     0,     0,   679,   680,     0,     0,     0,     0,
       0,     0,     0,   682,     0,     0,     0,     0,   683,   621,
     622,   468,   623,   624,   625,   626,   627,     0,     0,     0,
       0,     0,     0,     0,    96,    97,    98,    99,   100,   101,
     102,   103,     0,   105,   106,   107,     0,     0,     0,     0,
       0,     0,     0,   108,   109,     0,   110,   111,   112,   581,
     113,   114,   115,   116,   628,   582,   629,   630,     0,   120,
     121,   122,   123,   124,   631,   632,   125,   126,   633,   634,
     129,     0,   130,   131,   132,   133,   635,     0,   636,     0,
     135,   136,   137,   138,   139,   584,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,     0,   585,   149,   150,
     151,   637,   638,   639,   640,   641,   642,   643,   152,   153,
     154,   155,   156,   157,   644,   645,   160,   646,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   647,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   648,   189,   190,   191,   649,   650,   193,     0,
     194,   195,   651,   197,     0,   198,     0,   199,   587,     0,
     588,   200,   201,   202,   203,     0,   204,     0,   205,   206,
       0,   207,   208,   209,   210,   211,   589,   212,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,     0,   222,
     590,   223,   224,   225,   226,   227,   652,   653,     0,   654,
       0,   231,   591,   592,   232,   593,   233,   234,   235,   236,
     237,     0,     0,   238,   594,   239,   595,     0,   240,   241,
     242,   655,   656,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   657,
     596,   658,   261,   262,   263,   264,   659,   265,   266,   597,
     267,   660,   661,   269,   662,   271,   272,   273,     0,   274,
     275,     0,     0,   663,   277,   278,     0,     0,   279,   280,
     598,   281,   599,   664,   283,   284,   285,   286,   287,   288,
     289,   290,   291,     0,   292,   293,   665,   295,   296,   297,
     456,   299,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   666,   311,   312,   313,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   600,   329,   330,   331,   667,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   668,   347,   348,   349,   350,   351,
     601,   352,   353,   669,   355,     0,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   670,     0,
     369,   370,     0,   371,   602,   372,   373,   374,   375,   376,
       0,   671,   672,     0,     0,   379,   380,   673,   382,   674,
     675,   384,   385,   386,   387,   388,   389,   390,     0,     0,
     391,   392,   393,   394,   395,   676,     0,   396,   397,   398,
     399,   400,   401,   677,     0,   403,   603,   404,   405,   406,
     407,     0,     0,   408,     0,     0,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   678,     0,     0,     0,
       0,     0,     0,   679,   680,   681,     0,     0,     0,     0,
       0,     0,   682,     0,     0,     0,     0,   683,   621,   622,
     468,   623,   624,   625,   626,   627,     0,     0,     0,     0,
       0,     0,     0,    96,    97,    98,    99,   100,   101,   102,
     103,  1142,   105,   106,   107,     0,     0,     0,     0,     0,
       0,     0,   108,   109,     0,   110,   111,   112,   581,   113,
     114,   115,   116,   628,   582,   629,   630,     0,   120,   121,
     122,   123,   124,   631,   632,   125,   126,   633,   634,   129,
       0,   130,   131,   132,   133,   635,     0,   636,     0,   135,
     136,   137,   138,   139,   584,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,   585,   149,   150,   151,
     637,   638,   639,   640,   641,   642,   643,   152,   153,   154,
     155,   156,   157,   644,   645,   160,   646,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   647,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   648,   189,   190,   191,   649,   650,   193,     0,   194,
     195,   651,   197,     0,   198,     0,   199,   587,     0,   588,
     200,   201,   202,   203,     0,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,   589,   212,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   222,   590,
     223,   224,   225,   226,   227,   652,   653,     0,   654,     0,
     231,   591,   592,   232,   593,   233,   234,   235,   236,   237,
       0,     0,   238,   594,   239,   595,     0,   240,   241,   242,
     655,   656,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   657,   596,
     658,   261,   262,   263,   264,   659,   265,   266,   597,   267,
     660,   661,   269,   662,   271,   272,   273,     0,   274,   275,
       0,     0,   663,   277,   278,     0,     0,   279,   280,   598,
     281,   599,   664,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   292,   293,   665,   295,   296,   297,   456,
     299,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   666,   311,   312,   313,   314,     0,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   600,   329,   330,   331,   667,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   668,   347,   348,   349,   350,   351,   601,
     352,   353,   669,   355,     0,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   670,     0,   369,
     370,     0,   371,   602,   372,   373,   374,   375,   376,     0,
     671,   672,     0,     0,   379,   380,   673,   382,   674,   675,
     384,   385,   386,   387,   388,   389,   390,     0,     0,   391,
     392,   393,   394,   395,   676,     0,   396,   397,   398,   399,
     400,   401,   677,     0,   403,   603,   404,   405,   406,   407,
       0,     0,   408,     0,     0,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   678,     0,     0,     0,     0,
       0,     0,   679,   680,     0,     0,     0,     0,     0,     0,
       0,   682,     0,     0,     0,     0,   683,   621,   622,   468,
     623,   624,   625,   626,   627,     0,     0,     0,     0,     0,
       0,     0,    96,    97,    98,    99,   100,   101,   102,   103,
       0,   105,   106,   107,     0,     0,     0,     0,     0,     0,
       0,   108,   109,     0,   110,   111,   112,   581,   113,   114,
     115,   116,   628,   582,   629,   630,     0,   120,   121,   122,
     123,   124,   631,   632,   125,   126,   633,   634,   129,     0,
     130,   131,   132,   133,   635,     0,   636,     0,   135,   136,
     137,   138,   139,   584,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,     0,   585,   149,   150,   151,   637,
     638,   639,   640,   641,   642,   643,   152,   153,   154,   155,
     156,   157,   644,   645,   160,   646,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   647,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     648,   189,   190,   191,   649,   650,   193,     0,   194,   195,
     651,   197,     0,   198,     0,   199,   587,     0,   588,   200,
     201,   202,   203,     0,   204,     0,   205,   206,     0,   207,
     208,   209,   210,   211,   589,   212,   213,   214,   215,     0,
     216,   217,   218,   219,   220,   221,     0,   222,   590,   223,
     224,   225,   226,   227,   652,   653,     0,   654,     0,   231,
     591,   592,   232,   593,   233,   234,   235,   236,   237,     0,
       0,   238,   594,   239,   595,     0,   240,   241,   242,   655,
     656,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   657,   596,   658,
     261,   262,   263,   264,   659,   265,   266,   597,   267,   660,
     661,   269,   662,   271,   272,   273,     0,   274,   275,     0,
       0,   663,   277,   278,     0,     0,   279,   280,   598,   281,
     599,   664,   283,   284,   285,   286,   287,   288,   289,   290,
     291,     0,   292,   293,   665,   295,   296,   297,   456,   299,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   666,   311,   312,   313,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   600,   329,   330,   331,   667,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   668,   347,   348,   349,   350,   351,   601,   352,
     353,   669,   355,     0,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   670,     0,   369,   370,
       0,   371,   602,   372,   373,   374,   375,   376,     0,   671,
     672,     0,     0,   379,   380,   673,   382,   674,   675,   384,
     385,   386,   387,   388,   389,   390,     0,     0,   391,   392,
     393,   394,   395,   676,     0,   396,   397,   398,   399,   400,
     401,   677,     0,   403,   603,   404,   405,   406,   407,     0,
       0,   408,     0,     0,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   678,     0,     0,     0,     0,     0,
       0,   679,   680,     0,     0,     0,     0,     0,     0,     0,
     682,  1341,     0,     0,     0,   683,   621,   622,   468,   623,
     624,   625,   626,   627,     0,     0,     0,     0,     0,     0,
       0,    96,    97,    98,    99,   100,   101,   102,   103,     0,
     105,   106,   107,     0,     0,     0,     0,     0,     0,     0,
     108,   109,     0,   110,   111,   112,   581,   113,   114,   115,
     116,   628,   582,   629,   630,     0,   120,   121,   122,   123,
     124,   631,   632,   125,   126,   633,   634,   129,     0,   130,
     131,   132,   133,   635,     0,   636,     0,   135,   136,   137,
     138,   139,   584,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,   585,   149,   150,   151,   637,   638,
     639,   640,   641,   642,   643,   152,   153,   154,   155,   156,
     157,   644,   645,   160,   646,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   647,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   648,
     189,   190,   191,   649,   650,   193,     0,   194,   195,   651,
     197,     0,   198,     0,   199,   587,  1352,   588,   200,   201,
     202,   203,     0,   204,     0,   205,   206,     0,   207,   208,
     209,   210,   211,   589,   212,   213,   214,   215,     0,   216,
     217,   218,   219,   220,   221,     0,   222,   590,   223,   224,
     225,   226,   227,   652,   653,     0,   654,     0,   231,   591,
     592,   232,   593,   233,   234,   235,   236,   237,     0,     0,
     238,   594,   239,   595,     0,   240,   241,   242,   655,   656,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   657,   596,   658,   261,
     262,   263,   264,   659,   265,   266,   597,   267,   660,   661,
     269,   662,   271,   272,   273,     0,   274,   275,     0,     0,
     663,   277,   278,     0,     0,   279,   280,   598,   281,   599,
     664,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   292,   293,   665,   295,   296,   297,   456,   299,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     666,   311,   312,   313,   314,     0,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   600,   329,   330,   331,   667,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   668,   347,   348,   349,   350,   351,   601,   352,   353,
     669,   355,     0,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   670,     0,   369,   370,     0,
     371,   602,   372,   373,   374,   375,   376,     0,   671,   672,
       0,     0,   379,   380,   673,   382,   674,   675,   384,   385,
     386,   387,   388,   389,   390,     0,     0,   391,   392,   393,
     394,   395,   676,     0,   396,   397,   398,   399,   400,   401,
     677,     0,   403,   603,   404,   405,   406,   407,     0,     0,
     408,     0,     0,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   678,     0,     0,     0,     0,     0,     0,
     679,   680,     0,     0,     0,     0,     0,     0,     0,   682,
       0,     0,     0,     0,   683,   621,   622,   468,   623,   624,
     625,   626,   627,     0,     0,     0,     0,     0,     0,     0,
      96,    97,    98,    99,   100,   101,   102,   103,     0,   105,
     106,   107,     0,     0,     0,     0,     0,     0,     0,   108,
     109,     0,   110,   111,   112,   581,   113,   114,   115,   116,
     628,   582,   629,   630,     0,   120,   121,   122,   123,   124,
     631,   632,   125,   126,   633,   634,   129,     0,   130,   131,
     132,   133,   635,     0,   636,     0,   135,   136,   137,   138,
     139,   584,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,     0,   585,   149,   150,   151,   637,   638,   639,
     640,   641,   642,   643,   152,   153,   154,   155,   156,   157,
     644,   645,   160,   646,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   647,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   648,   189,
     190,   191,   649,   650,   193,     0,   194,   195,   651,   197,
       0,   198,     0,   199,   587,     0,   588,   200,   201,   202,
     203,     0,   204,     0,   205,   206,     0,   207,   208,   209,
     210,   211,   589,   212,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,     0,   222,   590,   223,   224,   225,
     226,   227,   652,   653,     0,   654,     0,   231,   591,   592,
     232,   593,   233,   234,   235,   236,   237,     0,     0,   238,
     594,   239,   595,     0,   240,   241,   242,   655,   656,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   657,   596,   658,   261,   262,
     263,   264,   659,   265,   266,   597,   267,   660,   661,   269,
     662,   271,   272,   273,     0,   274,   275,     0,     0,   663,
     277,   278,     0,     0,   279,   280,   598,   281,   599,   664,
     283,   284,   285,   286,   287,   288,   289,   290,   291,     0,
     292,   293,   665,   295,   296,   297,   456,   299,   300,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   666,
     311,   312,   313,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     600,   329,   330,   331,   667,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     668,   347,   348,   349,   350,   351,   601,   352,   353,   669,
     355,     0,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   670,     0,   369,   370,     0,   371,
     602,   372,   373,   374,   375,   376,     0,   671,   672,     0,
       0,   379,   380,   673,   382,   674,   675,   384,   385,   386,
     387,   388,   389,   390,     0,     0,   391,   392,   393,   394,
     395,   676,     0,   396,   397,   398,   399,   400,   401,   677,
    1971,   403,   603,   404,   405,   406,   407,     0,     0,   408,
       0,     0,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   678,     0,     0,     0,     0,     0,     0,   679,
     680,     0,     0,     0,     0,     0,     0,     0,   682,     0,
       0,     0,     0,   683,   621,   622,   468,   623,   624,   625,
     626,   627,     0,     0,     0,     0,     0,     0,     0,    96,
      97,    98,    99,   100,   101,   102,   103,     0,   105,   106,
     107,     0,     0,     0,     0,     0,     0,     0,   108,   109,
       0,   110,   111,   112,   581,   113,   114,   115,   116,   628,
     582,   629,   630,     0,   120,   121,   122,   123,   124,   631,
     632,   125,   126,   633,   634,   129,     0,   130,   131,   132,
     133,   635,     0,   636,     0,   135,   136,   137,   138,   139,
     584,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,     0,   585,   149,   150,   151,   637,   638,   639,   640,
     641,   642,   643,   152,   153,   154,   155,   156,   157,   644,
     645,   160,   646,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   647,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   648,   189,   190,
     191,   649,   650,   193,     0,   194,   195,   651,   197,     0,
     198,     0,   199,   587,     0,   588,   200,   201,   202,   203,
       0,   204,     0,   205,   206,     0,   207,   208,   209,   210,
     211,   589,   212,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   221,     0,   222,   590,   223,   224,   225,   226,
     227,   652,   653,     0,   654,     0,   231,   591,   592,   232,
     593,   233,   234,   235,   236,   237,     0,     0,   238,   594,
     239,   595,     0,   240,   241,   242,   655,   656,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   657,   596,   658,   261,   262,   263,
     264,   659,   265,   266,   597,   267,   660,   661,   269,   662,
     271,   272,   273,     0,   274,   275,     0,     0,   663,   277,
     278,     0,     0,   279,   280,   598,   281,   599,   664,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   292,
     293,   665,   295,   296,   297,   456,   299,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   666,   311,
     312,   313,   314,     0,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   600,
     329,   330,   331,   667,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   668,
     347,   348,   349,   350,   351,   601,   352,   353,   669,   355,
       0,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   670,     0,   369,   370,     0,   371,   602,
     372,   373,   374,   375,   376,     0,   671,   672,     0,     0,
     379,   380,   673,   382,   674,   675,   384,   385,   386,   387,
     388,   389,   390,     0,     0,   391,   392,   393,   394,   395,
     676,     0,   396,   397,   398,   399,   400,   401,   677,     0,
     403,   603,   404,   405,   406,   407,     0,     0,   408,     0,
       0,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   678,     0,     0,     0,     0,     0,     0,   679,   680,
       0,     0,     0,     0,     0,     0,     0,   682,     0,     0,
       0,     0,   683,   621,   622,   468,   623,   624,   625,   626,
     627,     0,     0,     0,     0,     0,     0,     0,    96,    97,
      98,    99,   100,   101,   102,   103,     0,   105,   106,   107,
       0,     0,     0,     0,     0,     0,     0,   108,   109,     0,
     110,   111,   112,   581,   113,   114,   115,   116,   628,   582,
     629,   630,     0,   120,   121,   122,   123,   124,   631,   632,
     125,   126,   633,   634,   129,     0,   130,   131,   132,   133,
     635,     0,   636,     0,   135,   136,   137,   138,   139,   584,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
       0,   585,   149,   150,   151,   637,   638,   639,   640,   641,
     642,   643,   152,   153,   154,   155,   156,   157,   644,   645,
     160,   646,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     647,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   648,   189,   190,   191,
     649,   650,   193,     0,   194,   195,   651,   197,     0,   198,
       0,   199,   587,     0,   588,   200,   201,   202,   203,     0,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
     589,   212,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,     0,   222,   590,   223,   224,   225,   226,   227,
     652,   653,     0,   654,     0,   231,   591,   592,   232,   593,
     233,   234,   235,   236,   237,     0,     0,   238,   594,   239,
     595,     0,   240,   241,   242,   655,   656,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   657,   596,   658,   261,   262,   263,   264,
     659,   265,   266,   597,   267,   660,   661,   269,   662,   271,
     272,   273,     0,   274,   275,     0,     0,   663,   277,   278,
       0,     0,   279,   280,   598,   281,   599,   664,   283,   284,
     285,   286,   287,   288,   289,   290,   291,     0,   292,   293,
     665,   295,   296,   297,   456,   299,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   666,   311,   312,
     313,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   600,   329,
     330,   331,   667,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   668,   347,
     348,   349,   350,   351,   601,   352,   353,   669,   355,     0,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   670,     0,   369,   370,     0,   371,   602,   372,
     373,   374,   375,   376,     0,   671,   672,     0,     0,   379,
     380,   673,   382,   674,   675,   384,   385,   386,   387,   388,
     389,   390,     0,     0,   391,   392,   393,   394,   395,   676,
       0,   396,   397,   398,   399,   400,   401,   677,     0,   403,
     603,   404,   405,   406,   407,     0,     0,   408,     0,     0,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     678,     0,     0,     0,     0,     0,     0,  1145,  1146,     0,
       0,     0,     0,     0,     0,     0,   682,     0,     0,     0,
       0,   683,   621,  1476,   468,   623,   624,   625,   626,   627,
       0,     0,     0,     0,     0,     0,     0,    96,    97,    98,
      99,   100,   101,   102,   103,     0,   105,   106,   107,     0,
       0,     0,     0,     0,     0,     0,   108,   109,     0,   110,
     111,   112,   581,   113,   114,   115,   116,   628,   582,   629,
     630,     0,   120,   121,   122,   123,   124,   631,   632,   125,
     126,   633,   634,   129,     0,   130,   131,   132,   133,   635,
       0,   636,     0,   135,   136,   137,   138,   139,   584,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,     0,
     585,   149,   150,   151,   637,   638,   639,   640,   641,   642,
     643,   152,   153,   154,   155,   156,   157,   644,   645,   160,
     646,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   647,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   648,   189,   190,   191,   649,
     650,   193,     0,   194,   195,   651,   197,     0,   198,     0,
     199,   587,     0,   588,   200,   201,   202,   203,     0,   204,
       0,   205,   206,     0,   207,   208,   209,   210,   211,   589,
     212,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,     0,   222,   590,   223,   224,   225,   226,   227,   652,
     653,     0,   654,     0,   231,   591,   592,   232,   593,   233,
     234,   235,   236,   237,     0,     0,   238,   594,   239,   595,
       0,   240,   241,   242,   655,   656,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   657,   596,   658,   261,   262,   263,   264,   659,
     265,   266,   597,   267,   660,   661,   269,   662,   271,   272,
     273,     0,   274,   275,     0,     0,   663,   277,   278,     0,
       0,   279,   280,   598,   281,   599,   664,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   292,   293,   665,
     295,   296,   297,   456,   299,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   666,   311,   312,   313,
     314,     0,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   600,   329,   330,
     331,   667,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   668,   347,   348,
     349,   350,   351,   601,   352,   353,   669,   355,     0,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   670,     0,   369,   370,     0,   371,   602,   372,   373,
     374,   375,   376,     0,   671,   672,     0,     0,   379,   380,
     673,   382,   674,   675,   384,   385,   386,   387,   388,   389,
     390,     0,     0,   391,   392,   393,   394,   395,   676,     0,
     396,   397,   398,   399,   400,   401,   677,     0,   403,   603,
     404,   405,   406,   407,     0,     0,   408,     0,     0,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   678,
       0,     0,     0,     0,     0,     0,   679,   680,     0,     0,
       0,     0,     0,     0,     0,   682,     0,     0,     0,     0,
     683,   621,   622,   468,   623,   624,   625,   626,   627,     0,
       0,     0,     0,     0,     0,     0,    96,    97,    98,    99,
     100,   101,   102,   103,     0,   105,   106,   107,     0,     0,
       0,     0,     0,     0,     0,   108,   109,     0,   110,   111,
     112,   581,   113,   114,   115,   116,   628,   582,   629,   630,
       0,   120,   121,   122,   123,   124,   631,   632,   125,   126,
     633,   634,   129,     0,   130,   131,   132,   133,   635,     0,
     636,     0,   135,   136,   137,   138,   139,   584,   140,   141,
     142,     0,   143,   144,   145,   146,   147,   148,     0,   585,
     149,   150,   151,   637,   638,   639,   640,   641,   642,   643,
     152,   153,   154,   155,   156,   157,   644,   645,   160,   646,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   647,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   648,   189,   190,   191,   649,   650,
     193,     0,   194,   195,   651,   197,     0,   198,     0,   199,
     587,     0,   588,   200,   201,   202,   203,     0,   204,     0,
     205,   206,     0,   207,   208,   209,   210,   211,   589,   212,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   221,
       0,   222,   590,   223,   224,   225,   226,   227,   652,   653,
       0,   654,     0,   231,   591,   592,   232,   593,   233,   234,
     235,   236,   237,     0,     0,   238,   594,   239,   595,     0,
     240,   241,   242,   655,   656,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   657,   596,   658,   261,   262,   263,   264,   659,   265,
     266,   597,   267,   660,   661,   269,   662,   271,   272,   273,
       0,   274,   275,     0,     0,   663,   277,   278,     0,     0,
     279,   280,   598,   281,   599,   664,   283,   284,   285,   286,
     287,   288,   289,   290,   291,     0,   292,   293,   665,   295,
     296,   297,   456,   299,   300,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   666,   311,   312,   313,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   600,   329,   330,   331,
     667,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   668,   347,   348,   349,
     350,   351,   601,   352,   353,   669,   355,     0,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     670,     0,   369,   370,     0,   371,   602,   372,   373,   374,
     375,   376,     0,   671,   672,     0,     0,   379,   380,   673,
     382,   674,   675,   384,   385,   386,   387,   388,   389,   390,
       0,     0,   391,   392,   393,   394,   395,   676,     0,   396,
     397,   398,   399,   400,   401,   677,     0,   403,   603,   404,
     405,   406,   407,     0,     0,   408,     0,     0,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   678,     0,
       0,     0,     0,     0,     0,   679,   680,     0,     0,     0,
       0,     0,     0,     0,  2272,     0,     0,     0,     0,   683,
     621,   622,   468,   623,   624,   625,   626,   627,     0,     0,
       0,     0,     0,     0,     0,    96,    97,    98,    99,   100,
     101,   102,   103,     0,   105,   106,   107,     0,     0,     0,
       0,     0,     0,     0,   108,   109,     0,   110,   111,   112,
     581,   113,   114,   115,  2506,   628,   582,   629,   630,     0,
     120,   121,   122,   123,   124,   631,   632,   125,   126,   633,
     634,   129,     0,   130,   131,   132,   133,   635,     0,   636,
       0,   135,   136,   137,   138,   139,   584,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,     0,   585,   149,
     150,  2507,   637,   638,   639,   640,   641,   642,   643,   152,
     153,   154,   155,   156,   157,   644,   645,   160,   646,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   647,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   648,   189,   190,   191,   649,   650,   193,
       0,   194,   195,   651,   197,     0,   198,     0,   199,   587,
       0,   588,   200,   201,   202,   203,     0,   204,     0,   205,
     206,     0,   207,   208,   209,   210,   211,   589,   212,   213,
     214,   215,     0,   216,   217,   218,   219,   220,   221,     0,
     222,   590,   223,   224,   225,   226,   227,   652,   653,     0,
     654,     0,   231,   591,   592,   232,   593,   233,   234,   235,
     236,   237,     0,     0,   238,   594,   239,   595,     0,   240,
     241,   242,   655,   656,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     657,   596,   658,   261,   262,   263,   264,   659,   265,   266,
     597,   267,   660,   661,   269,   662,   271,   272,   273,     0,
     274,   275,     0,     0,   663,   277,   278,     0,     0,   279,
     280,   598,   281,   599,   664,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   292,   293,   665,   295,   296,
     297,   456,   299,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   666,   311,   312,   313,   314,     0,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   600,   329,   330,   331,   667,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   668,   347,   348,   349,   350,
     351,   601,   352,   353,   669,   355,     0,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   670,
       0,   369,   370,     0,   371,   602,   372,   373,   374,   375,
     376,     0,   671,   672,     0,     0,   379,   380,   673,   382,
     674,   675,   384,   385,   386,   387,  2508,   389,   390,     0,
       0,   391,   392,   393,   394,   395,   676,     0,   396,   397,
     398,   399,   400,   401,   677,     0,   403,   603,   404,   405,
     406,   407,     0,     0,   408,     0,     0,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   678,     0,     0,
       0,     0,     0,     0,   679,   680,     0,     0,     0,     0,
       0,     0,     0,   682,     0,     0,     0,     0,   683,   621,
     622,   468,   623,   624,   625,   626,   627,     0,     0,     0,
       0,     0,     0,     0,    96,    97,    98,    99,   100,   101,
     102,   103,     0,   105,   106,   107,     0,     0,     0,     0,
       0,     0,     0,   108,   109,     0,   110,   111,   112,   581,
     113,   114,   115,   116,   628,   582,   629,   630,     0,   120,
     121,   122,   123,   124,   631,   632,   125,   126,   633,   634,
     129,     0,   130,   131,   132,   133,   635,     0,   636,     0,
     135,   136,   137,   138,   139,   584,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,     0,   585,   149,   150,
    2507,   637,   638,   639,   640,   641,   642,   643,   152,   153,
     154,   155,   156,   157,   644,   645,   160,   646,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   647,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   648,   189,   190,   191,   649,   650,   193,     0,
     194,   195,   651,   197,     0,   198,     0,   199,   587,     0,
     588,   200,   201,   202,   203,     0,   204,     0,   205,   206,
       0,   207,   208,   209,   210,   211,   589,   212,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,     0,   222,
     590,   223,   224,   225,   226,   227,   652,   653,     0,   654,
       0,   231,   591,   592,   232,   593,   233,   234,   235,   236,
     237,     0,     0,   238,   594,   239,   595,     0,   240,   241,
     242,   655,   656,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   657,
     596,   658,   261,   262,   263,   264,   659,   265,   266,   597,
     267,   660,   661,   269,   662,   271,   272,   273,     0,   274,
     275,     0,     0,   663,   277,   278,     0,     0,   279,   280,
     598,   281,   599,   664,   283,   284,   285,   286,   287,   288,
     289,   290,   291,     0,   292,   293,   665,   295,   296,   297,
     456,   299,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   666,   311,   312,   313,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   600,   329,   330,   331,   667,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   668,   347,   348,   349,   350,   351,
     601,   352,   353,   669,   355,     0,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   670,     0,
     369,   370,     0,   371,   602,   372,   373,   374,   375,   376,
       0,   671,   672,     0,     0,   379,   380,   673,   382,   674,
     675,   384,   385,   386,   387,  2508,   389,   390,     0,     0,
     391,   392,   393,   394,   395,   676,     0,   396,   397,   398,
     399,   400,   401,   677,     0,   403,   603,   404,   405,   406,
     407,     0,     0,   408,     0,     0,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   678,     0,     0,     0,
       0,     0,     0,   679,   680,     0,     0,     0,     0,     0,
       0,     0,   682,     0,     0,     0,     0,   683,   621,   622,
     468,   623,   624,   625,   626,   627,     0,     0,     0,     0,
       0,     0,     0,    96,    97,    98,    99,   100,   101,   102,
     103,     0,   105,   106,   107,     0,     0,     0,     0,     0,
       0,     0,   108,   109,     0,   110,   111,   112,   581,   113,
     114,   115,   116,   628,   582,   629,   630,     0,   120,   121,
     122,   123,   124,   631,   632,   125,   126,   633,   634,   129,
       0,   130,   131,   132,   133,   635,     0,   636,     0,   135,
     136,   137,   138,   139,   584,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,   585,   149,   150,   151,
     637,   638,   639,   640,   641,   642,   643,   152,   153,   154,
     155,   156,   157,   644,   645,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   647,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   648,   189,   190,   191,   649,   650,   193,     0,   194,
     195,   651,   197,     0,   198,     0,   199,   587,     0,   588,
     200,   201,   202,   203,     0,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,   589,   212,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   222,   590,
     223,   224,   225,   226,   227,   652,   653,     0,   654,     0,
     231,   591,   592,   232,   593,   233,   234,   235,   236,   237,
       0,     0,   238,   594,   239,   595,     0,   240,   241,   242,
     655,   656,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   657,   596,
     658,   261,   262,   263,   264,     0,   265,   266,   597,   267,
     660,   661,   269,   662,   271,   272,   273,     0,   274,   275,
       0,     0,   663,   277,   278,     0,     0,   279,   280,   598,
     281,   599,   664,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   292,   293,   665,   295,   296,   297,   456,
     299,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   666,   311,   312,   313,   314,     0,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   600,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   668,   347,   348,   349,   350,   351,   601,
     352,   353,   669,   355,     0,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   670,     0,   369,
     370,     0,   371,   602,   372,   373,   374,   375,   376,     0,
     671,   672,     0,     0,   379,   380,   673,   382,   674,   675,
     384,   385,   386,   387,   388,   389,   390,     0,     0,   391,
     392,   393,   394,   395,   676,     0,   396,   397,   398,   399,
     400,   401,   677,     0,   403,   603,   404,   405,   406,   407,
       0,     0,   408,     0,     0,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,     0,     0,     0,     0,     0,
       0,     0,  1334,  1335,     0,     0,   621,   622,   468,   623,
     624,  1336,   626,   627,     0,     0,   683,     0,     0,     0,
       0,    96,    97,    98,    99,   100,   101,   102,   103,     0,
     105,   106,   107,     0,     0,     0,     0,     0,     0,     0,
     108,   109,     0,   110,   111,   112,   581,   113,   114,   115,
     116,   628,   582,   629,   630,     0,   120,   121,   122,   123,
     124,   631,   632,   125,   126,   633,   634,   129,     0,   130,
     131,   132,   133,   635,     0,   636,     0,   135,   136,   137,
     138,   139,   584,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,   585,   149,   150,   151,   637,   638,
     639,   640,   641,   642,   643,   152,   153,   154,   155,   156,
     157,   644,   645,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   647,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   648,
     189,   190,   191,   649,   650,   193,     0,   194,   195,   651,
     197,     0,   198,     0,   199,   587,     0,   588,   200,   201,
     202,   203,     0,   204,     0,   205,   206,     0,   207,   208,
     209,   210,   211,   589,   212,   213,   214,   215,     0,   216,
     217,   218,   219,   220,   221,     0,   222,   590,   223,   224,
     225,   226,   227,   652,   653,     0,   654,     0,   231,   591,
     592,   232,   593,   233,   234,   235,   236,   237,     0,     0,
     238,   594,   239,   595,     0,   240,   241,   242,   655,   656,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   657,   596,   658,   261,
     262,   263,   264,     0,   265,   266,   597,   267,   660,   661,
     269,   662,   271,   272,   273,     0,   274,   275,     0,     0,
     276,   277,   278,     0,     0,   279,   280,   598,   281,   599,
     664,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   292,   293,   665,   295,   296,   297,   456,   299,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     666,   311,   312,   313,   314,     0,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   600,   329,   330,   331,  1465,  1466,   334,   335,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   668,   347,   348,   349,   350,   351,   601,   352,   353,
     669,   355,     0,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   670,     0,   369,   370,     0,
     371,   602,   372,   373,   374,   375,   376,     0,   671,   672,
       0,     0,   379,   380,   673,   382,   674,   675,   384,   385,
     386,   387,   388,   389,   390,     0,     0,   391,   392,   393,
     394,   395,   676,     0,   396,   397,   398,   399,   400,   401,
     677,     0,   403,   603,   404,   405,   406,   407,     0,     0,
     408,     0,     0,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,     0,     0,     0,     0,     0,
    1467,  1468,     0,     0,     0,     0,     0,     0,     0,  1336,
       0,     0,     0,     0,   683,   621,   622,   468,   623,   624,
     625,   626,   627,     0,     0,     0,     0,     0,     0,     0,
      96,    97,    98,    99,   100,   101,   102,   103,     0,   105,
     106,   107,     0,     0,     0,     0,     0,     0,     0,   108,
     109,     0,   110,   111,   112,   581,   113,   114,   115,   116,
     628,   582,   629,   630,     0,   120,   121,   122,   123,   124,
     631,   632,   125,   126,   633,   634,   129,     0,   130,   131,
     132,   133,   635,     0,   636,     0,   135,   136,   137,   138,
     139,   584,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,     0,   585,   149,   150,   151,   637,   638,   639,
     640,   641,   642,   643,   152,   153,   154,   155,   156,   157,
     644,   645,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   647,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   648,   189,
     190,   191,   649,   650,   193,     0,   194,   195,   651,   197,
       0,   198,     0,   199,   587,     0,   588,   200,   201,   202,
     203,     0,   204,     0,   205,   206,     0,   207,   208,   209,
     210,   211,   589,   212,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,     0,   222,   590,   223,   224,   225,
     226,   227,   652,   653,     0,   654,     0,   231,     0,   592,
     232,   593,   233,   234,   235,   236,   237,     0,     0,   238,
     594,   239,   595,     0,   240,   241,   242,   655,   656,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   657,   596,   658,   261,   262,
     263,   264,     0,   265,   266,   597,   267,   660,   661,   269,
     662,   271,   272,   273,     0,   274,   275,     0,     0,   663,
     277,   278,     0,     0,   279,   280,   598,   281,   599,   664,
     283,   284,   285,   286,   287,   288,   289,   290,   291,     0,
     292,   293,   665,   295,   296,   297,   456,   299,   300,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   666,
     311,   312,   313,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     600,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     668,   347,   348,   349,   350,   351,   601,   352,   353,   669,
     355,     0,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   670,     0,   369,   370,     0,   371,
     602,   372,   373,   374,   375,   376,     0,   671,   672,     0,
       0,   379,   380,   673,   382,   674,   675,   384,   385,   386,
     387,   388,   389,   390,     0,     0,   391,   392,   393,   394,
     395,   676,     0,   396,   397,   398,   399,   400,   401,   677,
       0,   403,   603,   404,   405,   406,   407,     0,     0,   408,
       0,     0,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,     0,     0,     0,     0,     0,     0,  1334,
    1335,     0,     0,     0,     0,     0,     0,     0,  1336,     0,
       0,     0,     0,   683,   621,   622,   468,   623,   624,   625,
     626,   627,     0,     0,     0,     0,     0,     0,     0,    96,
      97,    98,    99,   100,   101,   102,   103,     0,   105,   106,
     107,     0,     0,     0,     0,     0,     0,     0,   108,   109,
       0,   110,   111,   112,   581,   113,   114,   115, -1455,   628,
     582,   629,   630,     0,   120,   121,   122,   123,   124,   631,
     632,   125,   126,   633,   634,   129,     0,   130,   131,   132,
     133,   635,     0,   636,     0,   135,   136,   137,   138,   139,
     584,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,     0,   585,   149,   150,  2507,   637,   638,   639,   640,
     641,   642,   643,   152,   153,   154,   155,   156,   157,   644,
     645,   160,   646,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   647,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   648,   189,   190,
     191,   649,   650,   193,     0,   194,   195,   651,   197,     0,
     198,     0,   199,   587,     0,   588,   200,   201,   202,   203,
       0,   204,     0,   205,   206,     0,   207,   208,   209,   210,
     211, -1455,   212,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   221,     0,   222,   590,   223,   224,   225,   226,
     227,   652,   653,     0,   654,     0,   231,     0,     0,   232,
     593,   233,   234,   235,   236,   237,     0,     0,   238,   594,
     239, -1455,     0,   240,   241,   242,   655,   656,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   657,   596,   658,   261,   262,   263,
     264,     0,   265,   266,     0,   267,   660,   661,   269,   662,
     271,   272,   273,     0,   274,   275,     0,     0,   663,   277,
     278,     0,     0,   279,   280,   598,   281,   599,   664,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   292,
     293,   665,   295,   296,   297,   456,   299,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   666,   311,
     312,   313,   314,     0,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   600,
     329,   330,   331,   667,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   668,
     347,   348,   349,   350,   351, -1455,   352,   353,   669,   355,
       0,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   670,     0,   369,   370,     0,   371,   602,
     372,   373,   374,   375,   376,     0,   671,   672,     0,     0,
     379,   380,   673,   382,   674,   675,   384,   385,   386,   387,
    2508,   389,   390,     0,     0,   391,   392,   393,   394,   395,
     676,     0,   396,   397,   398,   399,   400,   401,   677,     0,
     403,   603,   404,   405,   406,   407,     0,     0,   408,     0,
       0,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428, -1455,     0,     0,     0,     0,     0,     0,   679,   680,
       0,     0,     0,     0,     0,     0,     0,   682,     0,     0,
       0,     0,   683,   621,   622,   468,   623,   624,   625,   626,
     627,     0,     0,     0,     0,     0,     0,     0,    96,    97,
      98,    99,   100,   101,   102,   103,     0,   105,   106,   107,
       0,     0,     0,     0,     0,     0,     0,   108,   109,     0,
     110,   111,   112,   581,   113,   114,   115,     0,   628,   582,
     629,   630,     0,   120,   121,   122,   123,   124,   631,   632,
     125,   126,   633,   634,   129,     0,   130,   131,   132,   133,
     635,     0,   636,     0,   135,   136,   137,   138,   139,   584,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
       0,   585,   149,   150,   151,   637,   638,   639,   640,   641,
     642,   643,   152,   153,   154,   155,   156,   157,   644,   645,
     160,   646,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     647,   176,   177,     0,   178,   179,   180,     0,   181,     0,
     183,     0,   184,   185,   186,   187,   648,   189,   190,   191,
     649,   650,   193,     0,   194,   195,   651,   197,     0,   198,
       0,   199,   587,     0,   588,   200,   201,   202,   203,     0,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,     0,   222,   590,   223,   224,   225,   226,   227,
     652,   653,     0,   654,     0,   231,     0,     0,   232,   593,
     233,   234,   235,   236,   237,     0,     0,   238,   594,   239,
       0,     0,   240,   241,   242,   655,   656,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   657,   596,   658,   261,   262,   263,   264,
       0,   265,   266,     0,   267,   660,   661,   269,   662,   271,
     272,   273,     0,   274,   275,     0,     0,   663,   277,   278,
       0,     0,   279,   280,   598,   281,   599,   664,   283,   284,
     285,   286,   287,   288,   289,   290,   291,     0,   292,   293,
     665,   295,   296,   297,   456,   299,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   666,   311,   312,
     313,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   600,   329,
     330,   331,   667,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   668,   347,
     348,   349,   350,   351,     0,   352,   353,   669,   355,     0,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   670,     0,   369,   370,     0,   371,   602,   372,
     373,   374,   375,   376,     0,   671,   672,     0,     0,   379,
     380,   673,   382,   674,   675,   384,   385,   386,   387,   388,
     389,   390,     0,     0,   391,   392,   393,   394,   395,   676,
       0,   396,   397,   398,   399,   400,   401,   677,     0,   403,
     603,   404,   405,   406,   407,     0,     0,   408,     0,     0,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
       0,     0,     0,     0,     0,     0,     0,   679,   680,    95,
       0,     0,     0,     0,     0,     0,   682,     0,     0,     0,
       0,   683,     0,     0,    96,    97,    98,    99,   100,   101,
     102,   103,     0,   105,   106,   107,     0,     0,     0,     0,
       0,  1943,     0,   108,   109,     0,   110,   111,   112,     0,
     113,   114,   115,   116,   117,     0,   118,   119,     0,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,     0,     0,
     135,   136,   137,   138,   139,     0,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,     0,  -550,   149,   150,
     151,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,     0,   193,     0,
     194,   195,   196,   197,     0,   198,     0,   199,     0,     0,
    -550,   200,   201,   202,   203,     0,   204,     0,   205,   206,
       0,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,     0,   222,
    -550,   223,   224,   225,   226,   227,   228,   229,     0,   230,
       0,   231,     0,     0,   232,  -550,   233,   234,   235,   236,
     237,     0,     0,   238,  -550,   239,     0,     0,   240,   241,
     242,     0,     0,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
    -550,   260,   261,   262,   263,   264,     0,   265,   266,     0,
     267,     0,   268,   269,   270,   271,   272,   273,     0,   274,
     275,     0,     0,   276,   277,   278,     0,     0,   279,   280,
       0,   281,     0,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,     0,   292,   293,   294,   295,   296,   297,
     456,   299,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,  -550,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,     0,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,     0,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,     0,   371,     0,   372,   373,   374,   375,   376,
       0,   377,   378,     0,     0,   379,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,     0,     0,
     391,   392,   393,   394,   395,     0,     0,   396,   397,   398,
     399,   400,   401,   402,     0,   403,     0,   404,   405,   406,
     407,     0,     0,   408,     0,     0,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,     0,     0,     0,   621,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   746,    96,    97,    98,    99,   100,   101,
     102,   103,     0,   105,   106,   107,     0,     0,     0,     0,
       0,     0,     0,   108,   109,     0,   110,   111,   112,   581,
     113,   114,   115,   116,   117,   582,   118,   119,     0,   120,
     121,   122,   123,   124,     0,   632,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   635,     0,   636,     0,
     135,   136,   137,   138,   139,   584,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,     0,   585,   149,   150,
     151,   637,   638,   639,   640,   641,   642,   643,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   649,     0,   193,     0,
     194,   195,   196,   197,     0,   198,     0,   199,   587,     0,
     588,   200,   201,   202,   203,     0,   204,     0,   205,   206,
       0,   207,   208,   209,   210,   211,   589,   212,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,     0,   222,
     590,   223,   224,   225,   226,   227,   228,   229,     0,   230,
       0,   231,   591,   592,   232,   593,   233,   234,   235,   236,
     237,  1707,     0,   238,   594,   239,   595,     0,   240,   241,
     242,   655,   656,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     596,   260,   261,   262,   263,   264,     0,   265,   266,   597,
     267,     0,   661,   269,   270,   271,   272,   273,     0,   274,
     275,     0,   493,   276,   277,   278,     0,     0,   279,   280,
     598,   281,   599,   664,   283,   284,   285,   286,   287,   288,
     289,   290,   291,     0,   292,   293,   665,   295,   296,   297,
     456,   299,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   600,   329,   330,   331,   332,  1708,
     334,   335,   336,   337,   338,   339,   340,   341,    21,   342,
     343,   344,   345,   346,   668,   347,   348,   349,   350,   351,
     601,   352,   353,   354,   355,     0,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   670,     0,
     369,   370,    25,   371,   602,   372,   373,   374,   375,   376,
       0,   377,   378,     0,     0,   379,   380,   673,   382,   674,
       0,   384,   385,   386,   387,   388,   389,   390,     0,     0,
     391,   392,   393,   394,   395,   676,     0,   396,   397,   398,
     399,   400,   529,   402,     0,   403,   603,   404,   405,   406,
     407,     0,     0,   408,     0,    28,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,     0,     0,    29,   621,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1709,     0,    96,    97,    98,    99,   100,   101,
     102,   103,     0,   105,   106,   107,     0,     0,     0,     0,
       0,     0,     0,   108,   109,     0,   110,   111,   112,   581,
     113,   114,   115,   116,   117,   582,   118,   119,     0,   120,
     121,   122,   123,   124,     0,   632,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   635,     0,   636,     0,
     135,   136,   137,   138,   139,   584,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,     0,   585,   149,   150,
     151,   637,   638,   639,   640,   641,   642,   643,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   649,     0,   193,     0,
     194,   195,   196,   197,     0,   198,     0,   199,   587,     0,
     588,   200,   201,   202,   203,     0,   204,     0,   205,   206,
       0,   207,   208,   209,   210,   211,   589,   212,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,     0,   222,
     590,   223,   224,   225,   226,   227,   228,   229,     0,   230,
       0,   231,   591,   592,   232,   593,   233,   234,   235,   236,
     237,  1707,     0,   238,   594,   239,   595,     0,   240,   241,
     242,   655,   656,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     596,   260,   261,   262,   263,   264,     0,   265,   266,   597,
     267,     0,   661,   269,   270,   271,   272,   273,     0,   274,
     275,     0,   493,   276,   277,   278,     0,     0,   279,   280,
     598,   281,   599,   664,   283,   284,   285,   286,   287,   288,
     289,   290,   291,     0,   292,   293,   665,   295,   296,   297,
     456,   299,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   600,   329,   330,   331,   332,  1708,
     334,   335,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   668,   347,   348,   349,   350,   351,
     601,   352,   353,   354,   355,     0,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   670,     0,
     369,   370,     0,   371,   602,   372,   373,   374,   375,   376,
       0,   377,   378,     0,     0,   379,   380,   673,   382,   674,
       0,   384,   385,   386,   387,   388,   389,   390,     0,     0,
     391,   392,   393,   394,   395,   676,     0,   396,   397,   398,
     399,   400,   401,   402,     0,   403,   603,   404,   405,   406,
     407,     0,     0,   408,     0,     0,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,     0,     0,   621,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1709,    96,    97,    98,    99,   100,   101,   102,
     103,     0,   105,   106,   107,     0,     0,     0,     0,     0,
       0,     0,   108,   109,     0,   110,   111,   112,   581,   113,
     114,   115,   116,   117,   582,   118,   119,     0,   120,   121,
     122,   123,   124,     0,   632,   125,   126,   127,   128,   129,
       0,   130,   131,   132,   133,   635,     0,   636,     0,   135,
     136,   137,   138,   139,   584,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,   585,   149,   150,   151,
     637,   638,   639,   640,   641,   642,   643,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   649,     0,   193,     0,   194,
     195,   196,   197,     0,   198,     0,   199,   587,     0,   588,
     200,   201,   202,   203,     0,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,   589,   212,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   222,   590,
     223,   224,   225,   226,   227,   228,   229,     0,   230,     0,
     231,   591,   592,   232,   593,   233,   234,   235,   236,   237,
       0,     0,   238,   594,   239,   595,     0,   240,   241,   242,
     655,   656,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   596,
     260,   261,   262,   263,   264,     0,   265,   266,   597,   267,
       0,   661,   269,   270,   271,   272,   273,     0,   274,   275,
       0,     0,   276,   277,   278,     0,     0,   279,   280,   598,
     281,   599,   664,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   292,   293,   665,   295,   296,   297,   456,
     299,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   600,   329,   330,   331,   332,  1708,   334,
     335,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   668,   347,   348,   349,   350,   351,   601,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   670,     0,   369,
     370,     0,   371,   602,   372,   373,   374,   375,   376,     0,
     377,   378,     0,     0,   379,   380,   673,   382,   674,     0,
     384,   385,   386,   387,   388,   389,   390,     0,     0,   391,
     392,   393,   394,   395,   676,     0,   396,   397,   398,   399,
     400,   401,   402,     0,   403,   603,   404,   405,   406,   407,
       0,     0,   408,     0,     0,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,     0,     0,   621,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    30,    96,    97,    98,    99,   100,   101,   102,   103,
       0,   105,   106,   107,     0,     0,     0,     0,     0,     0,
       0,   108,   109,     0,   110,   111,   112,   581,   113,   114,
     115,   116,   117,   582,   118,   119,     0,   120,   121,   122,
     123,   124,     0,   632,   125,   126,   127,   128,   129,     0,
     130,   131,   132,   133,   635,     0,   636,     0,   135,   136,
     137,   138,   139,   584,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,     0,   585,   149,   150,   151,   637,
     638,   639,   640,   641,   642,   643,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   649,     0,   193,     0,   194,   195,
     196,   197,     0,   198,     0,   199,   587,     0,   588,   200,
     201,   202,   203,     0,   204,     0,   205,   206,     0,   207,
     208,   209,   210,   211,   589,   212,   213,   214,   215,     0,
     216,   217,   218,   219,   220,   221,     0,   222,   590,   223,
     224,   225,   226,   227,   228,   229,     0,   230,     0,   231,
     591,   592,   232,   593,   233,   234,   235,   236,   237,     0,
       0,   238,   594,   239,   595,     0,   240,   241,   242,   655,
     656,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   596,   260,
     261,   262,   263,   264,     0,   265,   266,   597,   267,     0,
     661,   269,   270,   271,   272,   273,     0,   274,   275,     0,
       0,   276,   277,   278,     0,     0,   279,   280,   598,   281,
     599,   664,   283,   284,   285,   286,   287,   288,   289,   290,
     291,     0,   292,   293,   665,   295,   296,   297,   456,   299,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   600,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   668,   347,   348,   349,   350,   351,   601,   352,
     353,   354,   355,     0,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   670,     0,   369,   370,
       0,   371,   602,   372,   373,   374,   375,   376,     0,   377,
     378,     0,     0,   379,   380,   673,   382,   674,     0,   384,
     385,   386,   387,   388,   389,   390,     0,     0,   391,   392,
     393,   394,   395,   676,     0,   396,   397,   398,   399,   400,
     401,   402,     0,   403,   603,   404,   405,   406,   407,     0,
       0,   408,     0,     0,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,     0,     0,   580,   850,   468,     0,
       0,     0,   626,     0,     0,     0,     0,     0,     0,     0,
    2284,    96,    97,    98,    99,   100,   101,   102,   103,     0,
     105,   106,   107,     0,     0,     0,     0,     0,     0,     0,
     108,   109,     0,   110,   111,   112,   581,   113,   114,   115,
     116,   117,   582,   118,   119,     0,   120,   121,   122,   123,
     124,     0,     0,   125,   126,   127,   128,   129,     0,   130,
     131,   132,   133,   134,     0,   583,     0,   135,   136,   137,
     138,   139,   584,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,   585,   149,   150,   151,     0,     0,
       0,   586,     0,     0,     0,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   851,   193,     0,   194,   195,   196,
     197,     0,   198,     0,   199,   587,     0,   588,   200,   201,
     202,   203,     0,   204,     0,   205,   206,     0,   207,   208,
     209,   210,   211,   589,   212,   213,   214,   215,     0,   216,
     217,   218,   219,   220,   221,     0,   222,   590,   223,   224,
     225,   226,   227,   228,   229,     0,   230,     0,   231,   591,
     592,   232,   593,   233,   234,   235,   236,   237,     0,     0,
     238,   594,   239,   595,     0,   240,   241,   242,     0,     0,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   596,   260,   261,
     262,   263,   264,     0,   265,   266,   597,   267,     0,   268,
     269,   270,   271,   272,   273,     0,   274,   275,   852,     0,
     276,   277,   278,     0,     0,   279,   280,   598,   281,   599,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   292,   293,   294,   295,   296,   297,   456,   299,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   600,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,   601,   352,   353,
     354,   355,     0,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,     0,
     371,   602,   372,   373,   374,   375,   376,     0,   377,   378,
       0,     0,   379,   380,   381,   382,   383,   853,   384,   385,
     386,   387,   388,   389,   390,     0,     0,   391,   392,   393,
     394,   395,     0,     0,   396,   397,   398,   399,   400,   401,
     402,     0,   403,   603,   404,   405,   406,   407,     0,     0,
     408,     0,     0,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,     0,     0,   580,     0,     0,     0,     0,
     854,   855,  2420,     0,     0,     0,     0,     0,     0,  2421,
      96,    97,    98,    99,   100,   101,   102,   103,     0,   105,
     106,   107,     3,     4,     0,     0,     0,     0,     0,   108,
     109,     0,   110,   111,   112,   581,   113,   114,   115,   116,
     117,   582,   118,   119,     0,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,   583,     0,   135,   136,   137,   138,
     139,   584,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,     0,   585,   149,   150,   151,     0,     0,     0,
     586,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,     0,   193,     0,   194,   195,   196,   197,
       0,   198,     0,   199,   587,     0,   588,   200,   201,   202,
     203,     0,   204,     0,   205,   206,     0,   207,   208,   209,
     210,   211,   589,   212,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,     0,   222,   590,   223,   224,   225,
     226,   227,   228,   229,     0,   230,     0,   231,   591,   592,
     232,   593,   233,   234,   235,   236,   237,     0,     0,   238,
     594,   239,   595,     0,   240,   241,   242,     0,     0,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   596,   260,   261,   262,
     263,   264,     0,   265,   266,   597,   267,     0,   268,   269,
     270,   271,   272,   273,     0,   274,   275,     0,     0,   276,
     277,   278,     0,     0,   279,   280,   598,   281,   599,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,     0,
     292,   293,   294,   295,   296,   297,   456,   299,   300,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     600,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    21,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,   601,   352,   353,   354,
     355,     0,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,    25,   371,
     602,   372,   373,   374,   375,   376,     0,   377,   378,     0,
       0,   379,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,     0,     0,   391,   392,   393,   394,
     395,     0,     0,   396,   397,   398,   399,   400,   529,   402,
       0,   403,   603,   404,   405,   406,   407,     0,     0,   408,
       0,    28,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,     0,    29,    95,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    30,     0,
      96,    97,    98,    99,   100,   101,   102,   103,   526,   105,
     106,   107,     0,     0,     0,     0,     0,     0,     0,   108,
     109,     0,   110,   111,   112,     0,   113,   114,   115,   116,
     117,     0,   118,   119,     0,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,     0,     0,   135,   136,   137,   138,
     139,     0,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,     0,     0,   149,   150,   151,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,     0,   193,     0,   194,   195,   196,   197,
       0,   198,     0,   199,     0,     0,     0,   200,   201,   202,
     203,     0,   204,     0,   205,   206,     0,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,     0,   222,     0,   223,   224,   225,
     226,   227,   228,   229,     0,   230,     0,   231,     0,     0,
     232,     0,   233,   234,   235,   236,   237,     0,     0,   238,
       0,   239,     0,     0,   240,   241,   242,     0,     0,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,     0,   260,   261,   262,
     263,   264,     0,   265,   266,     0,   267,     0,   268,   269,
     270,   271,   272,   273,     0,   274,   275,     0,     0,   276,
     277,   278,     0,     0,   279,   280,     0,   281,     0,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,     0,
     292,   293,   294,   295,   296,   297,   456,   299,   300,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    21,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,     0,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,    25,   371,
       0,   372,   373,   374,   375,   376,     0,   527,   378,     0,
       0,   528,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,     0,     0,   391,   392,   393,   394,
     395,     0,     0,   396,   397,   398,   399,   400,   529,   402,
       0,   403,     0,   404,   405,   406,   407,     0,     0,   408,
       0,    28,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,     0,    29,    95,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    30,     0,
      96,    97,    98,    99,   100,   101,   102,   103,     0,   105,
     106,   107,     0,     0,     0,     0,     0,     0,     0,   108,
     109,     0,   110,   111,   112,     0,   113,   114,   115,   116,
     117,     0,   118,   119,     0,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,     0,     0,   135,   136,   137,   138,
     139,     0,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,     0,     0,   149,   150,   151,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,     0,   193,     0,   194,   195,   196,   197,
       0,   198,     0,   199,     0,     0,     0,   200,   201,   202,
     203,     0,   204,     0,   205,   206,     0,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,     0,   222,     0,   223,   224,   225,
     226,   227,   228,   229,     0,   230,     0,   231,     0,     0,
     232,     0,   233,   234,   235,   236,   237,     0,     0,   238,
       0,   239,     0,     0,   240,   241,   242,     0,     0,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,     0,   260,   261,   262,
     263,   264,     0,   265,   266,     0,   267,     0,   268,   269,
     270,   271,   272,   273,     0,   274,   275,     0,     0,   276,
     277,   278,     0,     0,   279,   280,     0,   281,     0,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,     0,
     292,   293,   294,   295,   296,   297,   456,   299,   300,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    21,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,     0,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,    25,   371,
       0,   372,   373,   374,   375,   376,     0,   377,   378,     0,
       0,   379,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,     0,     0,   391,   392,   393,   394,
     395,     0,     0,   396,   397,   398,   399,   400,   529,   402,
       0,   403,     0,   404,   405,   406,   407,     0,     0,   408,
       0,    28,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,     0,    29,    95,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    30,     0,
      96,    97,    98,    99,   100,   101,   102,   103,     0,   105,
     106,   107,     0,     0,     0,     0,     0,     0,     0,   108,
     109,     0,   110,   111,   112,     0,   113,   114,   115,   116,
     117,     0,   118,   119,     0,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,     0,     0,   135,   136,   137,   138,
     139,     0,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,     0,     0,   149,   150,   151,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,     0,   193,     0,   194,   195,   196,   197,
       0,   198,     0,   199,     0,     0,     0,   200,   201,   202,
     203,     0,   204,     0,   205,   206,     0,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,     0,   222,     0,   223,   224,   225,
     226,   227,   228,   229,     0,   230,     0,   231,     0,     0,
     232,     0,   233,   234,   235,   236,   237,     0,     0,   238,
       0,   239,     0,     0,   240,   241,   242,     0,     0,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,     0,   260,   261,   262,
     263,   264,     0,   265,   266,     0,   267,     0,   268,   269,
     270,   271,   272,   273,     0,   274,   275,     0,     0,   276,
     277,   278,     0,     0,   279,   280,     0,   281,     0,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,     0,
     292,   293,   294,   295,   296,   297,   456,   299,   300,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,     0,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,     0,   371,
       0,   372,   373,   374,   375,   376,     0,   377,   378,     0,
       0,   379,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,     0,     0,   391,   392,   393,   394,
     395,     0,     0,   396,   397,   398,   399,   400,   401,   402,
       0,   403,     0,   404,   405,   406,   407,     0,     0,   408,
       0,     0,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,     0,     0,    95,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   724,    96,
      97,    98,    99,   100,   101,   102,   103,     0,   105,   106,
     107,     0,     0,     0,     0,     0,     0,     0,   108,   109,
       0,   110,   111,   112,     0,   113,   114,   115,   116,   117,
       0,   118,   119,     0,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   135,   136,   137,   138,   139,
       0,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,     0,     0,   149,   150,   151,     0,     0,     0,     0,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,     0,   193,     0,   194,   195,   196,   197,     0,
     198,     0,   199,     0,     0,     0,   200,   201,   202,   203,
       0,   204,     0,   205,   206,     0,   207,   208,   209,   210,
     211,     0,   212,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   221,     0,   222,     0,   223,   224,   225,   226,
     227,   228,   229,     0,   230,     0,   231,     0,     0,   232,
       0,   233,   234,   235,   236,   237,     0,     0,   238,     0,
     239,     0,     0,   240,   241,   242,     0,     0,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,     0,   260,   261,   262,   263,
     264,     0,   265,   266,     0,   267,     0,   268,   269,   270,
     271,   272,   273,     0,   274,   275,     0,     0,   276,   277,
     278,     0,     0,   279,   280,     0,   281,     0,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   292,
     293,   294,   295,   296,   297,   456,   299,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,     0,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
       0,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,     0,   371,     0,
     372,   373,   374,   375,   376,     0,   377,   378,     0,     0,
     379,   380,   381,   382,   383,     0,   384,   385,   386,   387,
     388,   389,   390,     0,     0,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   401,   402,     0,
     403,     0,   404,   405,   406,   407,     0,     0,   408,     0,
       0,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,     0,     0,    95,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1455,    96,    97,
      98,    99,   100,   101,   102,   103,     0,   105,   106,   107,
       0,     0,     0,     0,     0,     0,     0,   108,   109,     0,
     110,   111,   112,     0,   113,   114,   115,   116,   117,     0,
     118,   119,     0,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     134,     0,     0,     0,   135,   136,   137,   138,   139,     0,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
       0,     0,   149,   150,   151,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,     0,   193,     0,   194,   195,   196,   197,     0,   198,
       0,   199,     0,     0,     0,   200,   201,   202,   203,     0,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,     0,   222,     0,   223,   224,   225,   226,   227,
     228,   229,     0,   230,     0,   231,     0,     0,   232,     0,
     233,   234,   235,   236,   237,     0,     0,   238,     0,   239,
       0,     0,   240,   241,   242,     0,     0,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
       0,   265,   266,     0,   267,     0,   268,   269,   270,   271,
     272,   273,     0,   274,   275,     0,     0,   276,   277,   278,
       0,     0,   279,   280,     0,   281,     0,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,     0,   292,   293,
     294,   295,   296,   297,   456,   299,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,     0,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,     0,   371,     0,   372,
     373,   374,   375,   376,     0,   377,   378,     0,     0,   379,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,     0,     0,   391,   392,   393,   394,   395,     0,
       0,   396,   397,   398,   399,   400,   401,   402,     0,   403,
       0,   404,   405,   406,   407,     0,     0,   408,     0,     0,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
       0,     0,    95,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1926,    96,    97,    98,
      99,   100,   101,   102,   103,     0,   105,   106,   107,     0,
       0,     0,     0,     0,     0,     0,   108,   109,     0,   110,
     111,   112,     0,   113,   114,   115,   116,   117,     0,   118,
     119,     0,   120,   121,   122,   123,   124,     0,     0,   125,
     126,   127,   128,   129,     0,   130,   131,   132,   133,   134,
       0,     0,     0,   135,   136,   137,   138,   139,     0,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,     0,
       0,   149,   150,   151,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
       0,   193,     0,   194,   195,   196,   197,     0,   198,     0,
     199,     0,     0,     0,   200,   201,   202,   203,     0,   204,
       0,   205,   206,     0,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,     0,   222,     0,   223,   224,   225,   226,   227,   228,
     229,     0,   230,     0,   231,     0,     0,   232,     0,   233,
     234,   235,   236,   237,     0,     0,   238,     0,   239,     0,
       0,   240,   241,   242,     0,     0,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,     0,   260,   261,   262,   263,   264,     0,
     265,   266,     0,   267,     0,   268,   269,   270,   271,   272,
     273,     0,   274,   275,     0,     0,   276,   277,   278,     0,
       0,   279,   280,     0,   281,     0,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   292,   293,   294,
     295,   296,   297,   456,   299,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,     0,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,     0,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,     0,   371,     0,   372,   373,
     374,   375,   376,     0,   377,   378,     0,     0,   379,   380,
     381,   382,   383,     0,   384,   385,   386,   387,   388,   389,
     390,     0,     0,   391,   392,   393,   394,   395,     0,     0,
     396,   397,   398,   399,   400,   401,   402,     0,   403,     0,
     404,   405,   406,   407,     0,     0,   408,     0,     0,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,     0,
       0,     0,     0,     0,   874,   850,   468,     0,     0,  1316,
     626,     0,     0,     0,     0,  2134,  1317,  1318,  1319,    96,
      97,    98,    99,   100,   101,   102,   103,  1029,   105,   106,
     107,  1030,  1031,  1032,  1033,  1034,  1035,  1036,   108,   109,
    1037,   110,   111,   112,   581,   113,   114,   115,     0,   875,
     582,   876,   877,  1038,   120,   121,   122,   123,   124,  1039,
    1040,   125,   126,   878,   879,   129,  1041,   130,   131,   132,
     133,     0,  1042,   583,  1043,   135,   136,   137,   138,   139,
     584,   140,   141,   142,  1044,   143,   144,   145,   146,   147,
     148,  1045,   585,   149,   150,   151,  1046,  1047,  1048,   586,
    1049,  1050,  1051,   152,   153,   154,   155,   156,   157,   880,
     881,   160,  1052,   161,  1053,   162,   163,   164,   165,   166,
     167,  1054,   168,   169,   170,   171,   172,  1055,  1056,   173,
     174,   647,   176,   177,  1057,   178,   179,   180,  1058,   181,
     182,   183,  1059,   184,   185,   186,   187,     0,   189,   190,
     191,     0,  1060,   193,  1061,   194,   195,   882,   197,  1062,
     198,  1063,   199,   587,  1064,   588,   200,   201,   202,   203,
    1065,   204,  1066,     0,   206,  1067,   207,   208,   209,   210,
     211,   589,   212,   213,   214,   215,  1068,   216,   217,   218,
     219,   220,   221,  1069,   222,   590,     0,   224,   225,   226,
     227,   883,   884,  1070,   885,  1071,   231,   591,   592,   232,
     593,   233,   234,   235,   236,   237,  1072,  1073,   238,   594,
     239,   595,  1074,   240,   241,   242,  1075,  1076,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   886,   596,   887,   261,   262,   263,
    2034,  1077,   265,   266,   597,   267,  1078,     0,   269,   888,
     271,   272,   273,  1079,   274,   275,  1080,  1081,  2035,   277,
     278,  1082,  1083,   279,     0,   598,   281,   599,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,  1084,   292,
     293,     0,   295,   296,     0,   456,   299,   300,  1085,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   889,   311,
     312,   313,   314,  1086,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,  1087,   327,   328,   600,
     329,   330,   331,     0,   333,   334,   335,   336,   337,   338,
     339,   340,   341,  1088,   342,   343,   344,   345,   346,  1089,
     347,  2036,   349,   350,   351,   601,   352,   353,   891,   355,
    1090,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,  1091,   369,   370,  1092,   371,   602,
     372,   373,   374,   375,   376,  1093,   892,   893,  1094,  1095,
     379,   380,     0,   382,     0,  1096,   384,   385,   386,   387,
     388,   389,   390,  1097,  1098,   391,   392,   393,   394,   395,
    1099,  1100,   396,   397,   398,   399,   400,     0,   894,  1101,
     403,   603,   404,   405,   406,   407,  1102,  1103,   408,  1104,
    1105,   409,   410,   411,   412,   413,   414,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   426,   427,
     428,     0,    95,     0,  1320,  1321,  1322,  1316,  2037,  2038,
    1325,  1326,  1327,  1328,  1317,  1318,  1319,    96,    97,    98,
      99,   100,   101,   102,   103,     0,   105,   106,   107,     0,
       0,     0,     0,     0,     0,     0,   108,   109,     0,   110,
     111,   112,     0,   113,   114,   115,   116,   117,     0,   118,
     119,     0,   120,   121,   122,   123,   124,     0,     0,   125,
     126,   127,   128,   129,     0,   130,   131,   132,   133,   134,
       0,     0,     0,   135,   136,   137,   138,   139,     0,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,     0,
       0,   149,   150,   151,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
       0,   193,     0,   194,   195,   196,   197,     0,   198,     0,
     199,     0,     0,     0,   200,   201,   202,   203,     0,   204,
       0,   205,   206,     0,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,     0,   222,     0,   223,   224,   225,   226,   227,   228,
     229,     0,   230,     0,   231,     0,     0,   232,     0,   233,
     234,   235,   236,   237,     0,     0,   238,     0,   239,     0,
       0,   240,   241,   242,     0,     0,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,     0,   260,   261,   262,   263,   264,     0,
     265,   266,     0,   267,     0,   268,   269,   270,   271,   272,
     273,     0,   274,   275,     0,     0,   276,   277,   278,     0,
       0,   279,   280,     0,   281,     0,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   292,   293,   294,
     295,   296,   297,   456,   299,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,     0,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,     0,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,     0,   371,     0,   372,   373,
     374,   375,   376,     0,   377,   378,     0,     0,   379,   380,
     381,   382,   383,     0,   384,   385,   386,   387,   388,   389,
     390,     0,     0,   391,   392,   393,   394,   395,     0,     0,
     396,   397,   398,   399,   400,   401,   402,     0,   403,     0,
     404,   405,   406,   407,     0,     0,   408,     0,     0,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,     0,
       0,     0,  1320,  1321,  1322,     0,  1323,  1324,  1325,  1326,
    1327,  1328,   968,     0,     0,   969,     0,     0,     0,   970,
     971,   972,     0,     0,     0,     0,     0,     0,     0,     0,
     968,     0,     0,   969,     0,     0,   973,   970,   971,   972,
       0,     0,     0,     0,   975,     0,     0,     0,     0,   968,
       0,   976,   969,     0,   973,     0,   970,   971,   972,     0,
       0,     0,   975,     0,     0,     0,     0,     0,     0,   976,
       0,     0,     0,   973,     0,   977,     0,     0,     0,     0,
       0,   975,     0,   968,     0,     0,   969,     0,   976,     0,
     970,   971,   972,   977,     0,     0,     0,     0,     0,     0,
       0,   968,     0,     0,   969,     0,     0,   973,   970,   971,
     972,     0,   977,     0,     0,   975,     0,     0,     0,     0,
       0,     0,   976,     0,     0,   973,     0,     0,     0,     0,
       0,     0,     0,   975,     0,     0,     0,     0,     0,     0,
     976,     0,   968,     0,     0,   969,   977,     0,     0,   970,
     971,   972,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   977,     0,   973,     0,     0,     0,
       0,     0,     0,     0,   975,     0,     0,     0,     0,     0,
       0,   976,     0,     0,   978,     0,     0,     0,     0,   979,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   978,     0,     0,   977,     0,   979,     0,     0,
     980,   981,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   978,     0,     0,   982,     0,   979,     0,   980,   981,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   982,     0,     0,     0,     0,   980,   981,     0,
       0,     0,     0,     0,   983,   978,     0,   984,     0,     0,
     979,   982,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   985,   983,   978,   986,   984,     0,     0,   979,     0,
       0,   980,   981,     0,     0,     0,     0,     0,     0,   985,
       0,   983,   986,     0,   984,   982,     0,     0,     0,   980,
     981,     0,     0,     0,     0,     0,     0,     0,   985,     0,
       0,   986,     0,   982,   978,     0,     0,     0,     0,   979,
       0,     0,     0,     0,     0,   983,     0,     0,   984,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     980,   981,   985,   983,     0,   986,   984,     0,     0,     0,
       0,     0,     0,     0,   982,     0,     0,     0,   987,     0,
     985,     0,     0,   986,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   987,     0,     0,     0,
       0,     0,     0,     0,   983,     0,     0,   984,     0,     0,
       0,     0,     0,     0,     0,   987,     0,     0,     0,     0,
       0,   985,     0,     0,   986,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   987,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   987,     0,     0,
       0,     0,     0,     0,   988,     0,     0,   989,   990,   991,
       0,   992,   993,   994,   995,   996,   997,     0,     0,     0,
       0,  2106,   988,     0,     0,   989,   990,   991,     0,   992,
     993,   994,   995,   996,   997,     0,     0,     0,   987,  2248,
       0,   988,     0,     0,   989,   990,   991,     0,   992,   993,
     994,   995,   996,   997,     0,     0,     0,     0,  2465,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   988,     0,     0,   989,   990,
     991,     0,   992,   993,   994,   995,   996,   997,     0,     0,
       0,     0,  2477,   988,     0,     0,   989,   990,   991,     0,
     992,   993,   994,   995,   996,   997,     0,     0,     0,     0,
    2586,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   988,  1028,     0,   989,   990,   991,
       0,   992,   993,   994,   995,   996,   997,     0,     0,  1437,
      96,    97,    98,    99,   100,   101,   102,   103,  1029,   105,
     106,   107,  1030,  1031,  1032,  1033,  1034,  1035,  1036,   108,
     109,  1037,   110,   111,   112,   581,   113,   114,   115,   116,
     117,   582,   118,   119,  1038,   120,   121,   122,   123,   124,
    1039,  1040,   125,   126,   127,   128,   129,  1041,   130,   131,
     132,   133,   134,  1042,   583,  1043,   135,   136,   137,   138,
     139,   584,   140,   141,   142,  1044,   143,   144,   145,   146,
     147,   148,  1045,   585,   149,   150,   151,  1046,  1047,  1048,
     586,  1049,  1050,  1051,   152,   153,   154,   155,   156,   157,
     158,   159,   160,  1052,   161,  1053,   162,   163,   164,   165,
     166,   167,  1054,   168,   169,   170,   171,   172,  1055,  1056,
     173,   174,   175,   176,   177,  1057,   178,   179,   180,  1058,
     181,   182,   183,  1059,   184,   185,   186,   187,   188,   189,
     190,   191,   192,  1060,   193,  1061,   194,   195,   196,   197,
    1062,   198,  1063,   199,   587,  1064,   588,   200,   201,   202,
     203,  1065,   204,  1066,   205,   206,  1067,   207,   208,   209,
     210,   211,   589,   212,   213,   214,   215,  1068,   216,   217,
     218,   219,   220,   221,  1069,   222,   590,   223,   224,   225,
     226,   227,   228,   229,  1070,   230,  1071,   231,   591,   592,
     232,   593,   233,   234,   235,   236,   237,  1072,  1073,   238,
     594,   239,   595,  1074,   240,   241,   242,  1075,  1076,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   596,   260,   261,   262,
     263,   264,  1077,   265,   266,   597,   267,  1078,   268,   269,
     270,   271,   272,   273,  1079,   274,   275,  1080,  1081,   276,
     277,   278,  1082,  1083,   279,   280,   598,   281,   599,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,  1084,
     292,   293,   294,   295,   296,   297,   456,   299,   300,  1085,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,  1086,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,  1087,   327,   328,
     600,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,  1088,   342,   343,   344,   345,   346,
    1089,   347,   348,   349,   350,   351,   601,   352,   353,   354,
     355,  1090,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,  1091,   369,   370,  1092,   371,
     602,   372,   373,   374,   375,   376,  1093,   377,   378,  1094,
    1095,   379,   380,   381,   382,   383,  1096,   384,   385,   386,
     387,   388,   389,   390,  1097,  1098,   391,   392,   393,   394,
     395,  1099,  1100,   396,   397,   398,   399,   400,   401,   402,
    1101,   403,   603,   404,   405,   406,   407,  1102,  1103,   408,
    1104,  1105,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    95,     0,     0,     0,     0,     0,     0,     0,
       0,  1106,     0,     0,     0,     0,     0,    96,    97,    98,
      99,   100,   101,   102,   103,     0,   105,   106,   107,     0,
       0,     0,     0,     0,     0,     0,   108,   109,     0,   110,
     111,   112,     0,   113,   114,   115,   116,   117,     0,   118,
     119,     0,   120,   121,   122,   123,   124,     0,     0,   125,
     126,   127,   128,   129,     0,   130,   131,   132,   133,   134,
       0,     0,     0,   135,   136,   137,   138,   139,     0,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,     0,
       0,   149,   150,   151,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
       0,   193,     0,   194,   195,   196,   197,     0,   198,     0,
     199,     0,     0,     0,   200,   201,   202,   203,     0,   204,
       0,   205,   206,     0,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,     0,   222,     0,   223,   224,   225,   226,   227,   228,
     229,     0,   230,     0,   231,     0,     0,   232,     0,   233,
     234,   235,   236,   237,     0,     0,   238,     0,   239,     0,
       0,   240,   241,   242,     0,     0,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,     0,   260,   261,   262,   263,   264,     0,
     265,   266,     0,   267,     0,   268,   269,   270,   271,   272,
     273,     0,   274,   275,     0,     0,   276,   277,   278,     0,
       0,   279,   280,     0,   281,     0,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   292,   293,   294,
     295,   296,   297,   456,   299,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,     0,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,     0,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,     0,   371,     0,   372,   373,
     374,   375,   376,     0,   377,   378,     0,     0,   379,   380,
     381,   382,   383,     0,   384,   385,   386,   387,   388,   389,
     390,     0,     0,   391,   392,   393,   394,   395,     0,     0,
     396,   397,   398,   399,   400,   401,   402,     0,   403,     0,
     404,   405,   406,   407,     0,     0,   408,     0,     0,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   580,
     850,   468,     0,     0,     0,   626,     0,     0,  2493,     0,
       0,     0,     0,     0,    96,    97,    98,    99,   100,   101,
     102,   103,     0,   105,   106,   107,     0,     0,     0,     0,
       0,     0,     0,   108,   109,     0,   110,   111,   112,   581,
     113,   114,   115,   116,   117,   582,   118,   119,     0,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,   583,     0,
     135,   136,   137,   138,   139,   584,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,     0,   585,   149,   150,
     151,     0,     0,     0,   586,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,  1021,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   851,   193,     0,
     194,   195,   196,   197,     0,   198,     0,   199,   587,     0,
     588,   200,   201,   202,   203,     0,   204,     0,   205,   206,
       0,   207,   208,   209,   210,   211,   589,   212,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,     0,   222,
     590,   223,   224,   225,   226,   227,   228,   229,     0,   230,
       0,   231,   591,   592,   232,   593,   233,   234,   235,   236,
     237,     0,     0,   238,   594,   239,   595,     0,   240,   241,
     242,     0,     0,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     596,   260,   261,   262,   263,   264,     0,   265,   266,   597,
     267,     0,   268,   269,   270,   271,   272,   273,     0,   274,
     275,   852,     0,   276,   277,   278,     0,     0,   279,   280,
     598,   281,   599,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,     0,   292,   293,   294,   295,   296,   297,
     456,   299,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   600,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,     0,   347,   348,   349,   350,   351,
     601,   352,   353,   354,   355,     0,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,     0,   371,   602,   372,   373,   374,   375,   376,
       0,   377,   378,     0,     0,   379,   380,   381,   382,   383,
     853,   384,   385,   386,   387,   388,   389,   390,     0,     0,
     391,   392,   393,   394,   395,     0,     0,   396,   397,   398,
     399,   400,   401,   402,     0,   403,   603,   404,   405,   406,
     407,     0,     0,   408,     0,     0,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   580,   850,   468,     0,
       0,     0,   626,   854,   855,     0,     0,     0,     0,     0,
       0,    96,    97,    98,    99,   100,   101,   102,   103,     0,
     105,   106,   107,     0,     0,     0,     0,     0,     0,     0,
     108,   109,     0,   110,   111,   112,   581,   113,   114,   115,
     116,   117,   582,   118,   119,     0,   120,   121,   122,   123,
     124,     0,     0,   125,   126,   127,   128,   129,     0,   130,
     131,   132,   133,   134,     0,   583,     0,   135,   136,   137,
     138,   139,   584,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,   585,   149,   150,   151,     0,     0,
       0,   586,     0,     0,     0,   152,   153,   154,   155,   156,
     157,   158,   159,   160,  1023,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   851,   193,     0,   194,   195,   196,
     197,     0,   198,     0,   199,   587,     0,   588,   200,   201,
     202,   203,     0,   204,     0,   205,   206,     0,   207,   208,
     209,   210,   211,   589,   212,   213,   214,   215,     0,   216,
     217,   218,   219,   220,   221,     0,   222,   590,   223,   224,
     225,   226,   227,   228,   229,     0,   230,     0,   231,   591,
     592,   232,   593,   233,   234,   235,   236,   237,     0,     0,
     238,   594,   239,   595,     0,   240,   241,   242,     0,     0,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   596,   260,   261,
     262,   263,   264,     0,   265,   266,   597,   267,     0,   268,
     269,   270,   271,   272,   273,     0,   274,   275,   852,     0,
     276,   277,   278,     0,     0,   279,   280,   598,   281,   599,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   292,   293,   294,   295,   296,   297,   456,   299,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   600,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,   601,   352,   353,
     354,   355,     0,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,     0,
     371,   602,   372,   373,   374,   375,   376,     0,   377,   378,
       0,     0,   379,   380,   381,   382,   383,   853,   384,   385,
     386,   387,   388,   389,   390,     0,     0,   391,   392,   393,
     394,   395,     0,     0,   396,   397,   398,   399,   400,   401,
     402,     0,   403,   603,   404,   405,   406,   407,     0,     0,
     408,     0,     0,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   580,   850,   468,     0,     0,     0,   626,
     854,   855,     0,     0,     0,     0,     0,     0,    96,    97,
      98,    99,   100,   101,   102,   103,     0,   105,   106,   107,
       0,     0,     0,     0,     0,     0,     0,   108,   109,     0,
     110,   111,   112,   581,   113,   114,   115,   116,   117,   582,
     118,   119,     0,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     134,     0,   583,     0,   135,   136,   137,   138,   139,   584,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
       0,   585,   149,   150,   151,     0,     0,     0,   586,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   851,   193,     0,   194,   195,   196,   197,     0,   198,
       0,   199,   587,     0,   588,   200,   201,   202,   203,     0,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
     589,   212,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,     0,   222,   590,   223,   224,   225,   226,   227,
     228,   229,     0,   230,     0,   231,   591,   592,   232,   593,
     233,   234,   235,   236,   237,     0,     0,   238,   594,   239,
     595,     0,   240,   241,   242,     0,     0,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   596,   260,   261,   262,   263,   264,
       0,   265,   266,   597,   267,     0,   268,   269,   270,   271,
     272,   273,     0,   274,   275,   852,     0,   276,   277,   278,
       0,     0,   279,   280,   598,   281,   599,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,     0,   292,   293,
     294,   295,   296,   297,   456,   299,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   600,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,   601,   352,   353,   354,   355,     0,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,     0,   371,   602,   372,
     373,   374,   375,   376,     0,   377,   378,     0,     0,   379,
     380,   381,   382,   383,   853,   384,   385,   386,   387,   388,
     389,   390,     0,     0,   391,   392,   393,   394,   395,     0,
       0,   396,   397,   398,   399,   400,   401,   402,     0,   403,
     603,   404,   405,   406,   407,     0,     0,   408,     0,     0,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
       0,     0,   968,     0,     0,   969,     0,   854,   855,   970,
     971,   972,     0,     0,     0,     0,     0,     0,     0,     0,
     968,     0,     0,   969,     0,     0,   973,   970,   971,   972,
       0,     0,     0,     0,   975,     0,     0,     0,     0,   968,
       0,   976,   969,     0,   973,     0,   970,   971,   972,     0,
       0,     0,   975,     0,     0,     0,     0,     0,     0,   976,
       0,     0,     0,   973,     0,   977,  1609,     0,     0,     0,
       0,   975,     0,   968,     0,     0,   969,     0,   976,     0,
     970,   971,   972,   977,     0,     0,     0,     0,     0,     0,
       0,   968,     0,     0,   969,     0,     0,   973,   970,   971,
     972,     0,   977,     0,     0,   975,     0,     0,     0,     0,
       0,     0,   976,     0,     0,   973,     0,     0,  1658,     0,
       0,     0,     0,   975,     0,     0,     0,     0,     0,     0,
     976,     0,     0,     0,     0,     0,   977,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1649,     0,   977,     0,     0,  1650,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2547,
       0,     0,     0,     0,   978,     0,     0,     0,     0,   979,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   978,     0,     0,     0,     0,   979,     0,     0,
     980,   981,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   978,     0,     0,   982,     0,   979,     0,   980,   981,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   982,     0,     0,     0,     0,   980,   981,     0,
       0,     0,     0,     0,   983,   978,     0,   984,     0,     0,
     979,   982,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   985,   983,   978,   986,   984,     0,     0,   979,     0,
       0,   980,   981,     0,     0,     0,     0,     0,     0,   985,
       0,   983,   986,     0,   984,   982,     0,     0,     0,   980,
     981,     0,     0,     0,     0,     0,     0,     0,   985,     0,
       0,   986,     0,   982,  2548,   968,     0,     0,   969,     0,
       0,     0,   970,   971,   972,   983,     0,     0,   984,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   973,
       0,     0,   985,   983,     0,   986,   984,   975,     0,     0,
       0,     0,     0,     0,   976,     0,     0,     0,   987,     0,
     985,     0,  1623,   986,     0,     0,     0,     0,     0,     0,
       0,     0,   968,     0,     0,   969,   987,     0,   977,   970,
     971,   972,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   987,   973,     0,     0,     0,
       0,     0,     0,     0,   975,     0,   968,     0,     0,   969,
       0,   976,     0,   970,   971,   972,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   987,
     973,     0,     0,     0,     0,   977,     0,     0,   975,     0,
       0,     0,     0,     0,     0,   976,     0,   987,     0,     0,
       0,     0,     0,     0,   988,     0,     0,   989,   990,   991,
       0,   992,   993,   994,   995,   996,   997,     0,     0,   977,
    1663,     0,   988,     0,     0,   989,   990,   991,     0,   992,
     993,   994,   995,   996,   997,     0,     0,   978,     0,     0,
       0,   988,   979,     0,   989,   990,   991,     0,   992,   993,
     994,   995,   996,   997,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   980,   981,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   988,     0,   982,   989,   990,
     991,     0,   992,   993,   994,   995,   996,   997,     0,     0,
       0,     0,     0,   988,   978,     0,   989,   990,   991,   979,
     992,   993,   994,   995,   996,   997,     0,   983,     0,     0,
     984,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     980,   981,     0,     0,   985,     0,     0,   986,   978,     0,
       0,     0,     0,   979,   982,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   980,   981,     0,     0,     0,     0,
       0,     0,     0,     0,   983,     0,     0,   984,   982,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     968,   985,     0,   969,   986,     0,     0,   970,   971,   972,
       0,     0,     0,     0,     0,     0,     0,     0,   983,     0,
       0,   984,     0,     0,   973,     0,     0,     0,     0,     0,
       0,   987,   975,     0,   968,   985,     0,   969,   986,   976,
     777,   970,   971,   972,     0,     0,   778,     0,     0,     0,
       0,     0,     0,   790,     0,     0,     0,     0,     0,     0,
       0,     0,   968,   977,     0,   969,   975,     0,     0,   970,
     971,   972,   791,   976,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   987,     0,
       0,     0,     0,     0,   975,     0,     0,   977,     0,     0,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1864,     0,
       0,   792,   987,     0,     0,   977,     0,   988,     0,     0,
     989,   990,   991,     0,   992,   993,   994,   995,   996,   997,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   779,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   978,     0,     0,     0,     0,   979,     0,     0,
       0,     0,     0,     0,   988,     0,     0,   989,   990,   991,
       0,   992,   993,   994,   995,   996,   997,     0,   980,   981,
       0,     0,     0,     0,     0,   793,   978,     0,     0,     0,
       0,   979,   982,     0,     0,     0,     0,     0,   988,     0,
       0,   989,   990,   991,     0,   992,   993,   994,   995,   996,
     997,     0,   980,   981,   978,     0,     0,     0,     0,   979,
       0,     0,   983,     0,     0,   984,   982,     0,     0,     0,
       0,     0,   794,     0,     0,   795,     0,     0,     0,   985,
   -1455, -1455,     0,     0,     0,     0,   796,     0,     0,     0,
       0,     0,     0,     0,   982,     0,   983,     0,     0,   984,
       0,     0,     0,     0,     0,     0,     0,   780,     0,     0,
       0,     0,     0,   985,     0,     0,     0,   797,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -1455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   985,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1525,     0,     0,     0,
     782,   799,     0,     0,     0,     0,   987,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   800,     0,     0,     0,     0,     0,  1526,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     987,   802,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   987,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   784,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   988,     0,     0,   989,   990,   991,     0,   992,
     993,   994,   995,   996,   997,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   988,     0,     0,   989,
     990,   991,     0,   992,   993,   994,   995,   996,   997,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1028,     0,   988,     0,     0,   989,   990,   991,
       0,   992,   993,   994,   995,   996,   997,    96,    97,    98,
      99,   100,   101,   102,   103,  1029,   105,   106,   107,  1030,
    1031,  1032,  1033,  1034,  1035,  1036,   108,   109,  1037,   110,
     111,   112,   581,   113,   114,   115,   116,   117,   582,   118,
     119,  1038,   120,   121,   122,   123,   124,  1039,  1040,   125,
     126,   127,   128,   129,  1041,   130,   131,   132,   133,   134,
    1042,   583,  1043,   135,   136,   137,   138,   139,   584,   140,
     141,   142,  1044,   143,   144,   145,   146,   147,   148,  1045,
     585,   149,   150,   151,  1046,  1047,  1048,   586,  1049,  1050,
    1051,   152,   153,   154,   155,   156,   157,   158,   159,   160,
    1052,   161,  1053,   162,   163,   164,   165,   166,   167,  1054,
     168,   169,   170,   171,   172,  1055,  1056,   173,   174,   175,
     176,   177,  1057,   178,   179,   180,  1058,   181,   182,   183,
    1059,   184,   185,   186,   187,   188,   189,   190,   191,   192,
    1060,   193,  1061,   194,   195,   196,   197,  1062,   198,  1063,
     199,   587,  1064,   588,   200,   201,   202,   203,  1065,   204,
    1066,   205,   206,  1067,   207,   208,   209,   210,   211,   589,
     212,   213,   214,   215,  1068,   216,   217,   218,   219,   220,
     221,  1069,   222,   590,   223,   224,   225,   226,   227,   228,
     229,  1070,   230,  1071,   231,   591,   592,   232,   593,   233,
     234,   235,   236,   237,  1072,  1073,   238,   594,   239,   595,
    1074,   240,   241,   242,  1075,  1076,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   596,   260,   261,   262,   263,   264,  1077,
     265,   266,   597,   267,  1078,   268,   269,   270,   271,   272,
     273,  1079,   274,   275,  1080,  1081,   276,   277,   278,  1082,
    1083,   279,   280,   598,   281,   599,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,  1084,   292,   293,   294,
     295,   296,   297,   456,   299,   300,  1085,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,  1086,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,  1087,   327,   328,   600,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,  1088,   342,   343,   344,   345,   346,  1089,   347,   348,
     349,   350,   351,   601,   352,   353,   354,   355,  1090,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,  1091,   369,   370,  1092,   371,   602,   372,   373,
     374,   375,   376,  1093,   377,   378,  1094,  1095,   379,   380,
     381,   382,   383,  1096,   384,   385,   386,   387,   388,   389,
     390,  1097,  1098,   391,   392,   393,   394,   395,  1099,  1100,
     396,   397,   398,   399,   400,   401,   402,  1101,   403,   603,
     404,   405,   406,   407,  1102,  1103,   408,  1104,  1105,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,  1028,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    96,    97,    98,    99,  1510,   101,
     102,   103,  1029,   105,   106,   107,  1030,  1031,  1032,  1033,
    1034,  1035,  1036,   108,   109,  1037,   110,   111,   112,   581,
     113,   114,   115,   116,   117,   582,   118,   119,  1038,   120,
     121,   122,   123,   124,  1039,  1040,   125,   126,   127,   128,
     129,  1041,   130,   131,   132,   133,   134,  1042,   583,  1043,
     135,   136,   137,   138,   139,   584,   140,   141,   142,  1044,
     143,   144,   145,   146,   147,   148,  1045,   585,   149,   150,
     151,  1046,  1047,  1048,   586,  1049,  1050,  1051,   152,   153,
     154,   155,   156,   157,   158,   159,   160,  1052,   161,  1053,
     162,   163,   164,   165,   166,   167,  1054,   168,   169,   170,
     171,   172,  1055,  1056,   173,   174,   175,  1511,   177,  1057,
     178,   179,   180,  1058,   181,   182,   183,  1059,   184,   185,
     186,   187,   188,   189,   190,   191,   192,  1060,   193,  1061,
     194,   195,   196,   197,  1062,   198,  1063,   199,   587,  1064,
     588,   200,   201,   202,   203,  1065,   204,  1066,   205,   206,
    1067,   207,   208,   209,   210,   211,   589,   212,   213,   214,
     215,  1068,   216,   217,   218,   219,   220,   221,  1069,   222,
     590,   223,   224,   225,   226,   227,   228,   229,  1070,   230,
    1071,   231,   591,   592,   232,   593,   233,   234,   235,   236,
     237,  1072,  1073,   238,   594,   239,   595,  1074,   240,   241,
     242,  1075,  1076,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     596,   260,   261,   262,   263,   264,  1077,   265,   266,   597,
     267,  1078,   268,   269,   270,   271,   272,   273,  1079,   274,
     275,  1080,  1081,   276,   277,   278,  1082,  1083,   279,   280,
     598,   281,   599,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,  1084,   292,   293,   294,   295,   296,   297,
     456,   299,   300,  1085,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,  1086,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,  1087,   327,   328,   600,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,  1088,   342,
     343,   344,   345,   346,  1089,  1512,   348,   349,   350,   351,
     601,   352,   353,   354,   355,  1090,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,  1091,
     369,   370,  1092,   371,   602,   372,   373,   374,   375,   376,
    1093,   377,   378,  1094,  1095,   379,   380,   381,   382,   383,
    1096,   384,   385,   386,   387,   388,   389,   390,  1097,  1098,
     391,   392,   393,   394,   395,  1099,  1100,   396,   397,   398,
     399,   400,   401,   402,  1101,   403,   603,   404,   405,   406,
     407,  1102,  1103,   408,  1104,  1105,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   621,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    96,    97,    98,    99,   100,   101,   102,   103,     0,
     105,   106,   107,     0,     0,     0,     0,     0,     0,     0,
     108,   109,     0,   110,   111,   112,   581,   113,   114,   115,
     116,   117,   582,   118,   119,     0,   120,   121,   122,   123,
     124,     0,   632,   125,   126,   127,   128,   129,     0,   130,
     131,   132,   133,   635,     0,   636,     0,   135,   136,   137,
     138,   139,   584,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,   585,   149,   150,   151,   637,   638,
     639,   640,   641,   642,   643,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   649,     0,   193,     0,   194,   195,   196,
     197,     0,   198,     0,   199,   587,     0,   588,   200,   201,
     202,   203,     0,   204,     0,   205,   206,     0,   207,   208,
     209,   210,   211,   589,   212,   213,   214,   215,     0,   216,
     217,   218,   219,   220,   221,     0,   222,   590,   223,   224,
     225,   226,   227,   228,   229,     0,   230,     0,   231,   591,
     592,   232,   593,   233,   234,   235,   236,   237,     0,     0,
     238,   594,   239,   595,     0,   240,   241,   242,   655,   656,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   596,   260,   261,
     262,   263,   264,     0,   265,   266,   597,   267,     0,   661,
     269,   270,   271,   272,   273,     0,   274,   275,     0,     0,
     276,   277,   278,     0,     0,   279,   280,   598,   281,   599,
     664,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   292,   293,   665,   295,   296,   297,   456,   299,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   600,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   668,   347,   348,   349,   350,   351,   601,   352,   353,
     354,   355,     0,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   670,     0,   369,   370,     0,
     371,   602,   372,   373,   374,   375,   376,     0,   377,   378,
       0,     0,   379,   380,   673,   382,   674,     0,   384,   385,
     386,   387,   388,   389,   390,     0,     0,   391,   392,   393,
     394,   395,   676,     0,   396,   397,   398,   399,   400,   401,
     402,     0,   403,   603,   404,   405,   406,   407,     0,     0,
     408,     0,     0,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   580,     0,   468,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    96,    97,
      98,    99,   100,   101,   102,   103,     0,   105,   106,   107,
       0,     0,     0,     0,     0,     0,     0,   108,   109,     0,
     110,   111,   112,   581,   113,   114,   115,   116,   117,   582,
     118,   119,     0,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     134,     0,   583,     0,   135,   136,   137,   138,   139,   584,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
       0,   585,   149,   150,   151,     0,     0,     0,   586,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   851,   193,     0,   194,   195,   196,   197,     0,   198,
       0,   199,   587,     0,   588,   200,   201,   202,   203,     0,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
     589,   212,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,     0,   222,   590,   223,   224,   225,   226,   227,
     228,   229,     0,   230,     0,   231,   591,   592,   232,   593,
     233,   234,   235,   236,   237,     0,     0,   238,   594,   239,
     595,     0,   240,   241,   242,     0,     0,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   596,   260,   261,   262,   263,   264,
       0,   265,   266,   597,   267,     0,   268,   269,   270,   271,
     272,   273,     0,   274,   275,   852,     0,   276,   277,   278,
       0,     0,   279,   280,   598,   281,   599,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,     0,   292,   293,
     294,   295,   296,   297,   456,   299,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   600,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,   601,   352,   353,   354,   355,     0,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,     0,   371,   602,   372,
     373,   374,   375,   376,     0,   377,   378,     0,     0,   379,
     380,   381,   382,   383,   853,   384,   385,   386,   387,   388,
     389,   390,     0,     0,   391,   392,   393,   394,   395,     0,
       0,   396,   397,   398,   399,   400,   401,   402,     0,   403,
     603,   404,   405,   406,   407,     0,     0,   408,     0,     0,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     580,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    96,    97,    98,    99,   100,
     101,   102,   103,     0,   105,   106,   107,     3,     4,     0,
       0,     0,     0,     0,   108,   109,     0,   110,   111,   112,
     581,   113,   114,   115,   116,   117,   582,   118,   119,     0,
     120,   121,   122,   123,   124,     0,     0,   125,   126,   127,
     128,   129,     0,   130,   131,   132,   133,   134,     0,   583,
       0,   135,   136,   137,   138,   139,   584,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,     0,   585,   149,
     150,   151,     0,     0,     0,   586,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,     0,   193,
       0,   194,   195,   196,   197,     0,   198,     0,   199,   587,
       0,   588,   200,   201,   202,   203,     0,   204,     0,   205,
     206,     0,   207,   208,   209,   210,   211,   589,   212,   213,
     214,   215,     0,   216,   217,   218,   219,   220,   221,     0,
     222,   590,   223,   224,   225,   226,   227,   228,   229,     0,
     230,     0,   231,   591,   592,   232,   593,   233,   234,   235,
     236,   237,     0,     0,   238,   594,   239,   595,     0,   240,
     241,   242,     0,     0,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   596,   260,   261,   262,   263,   264,     0,   265,   266,
     597,   267,     0,   268,   269,   270,   271,   272,   273,     0,
     274,   275,     0,     0,   276,   277,   278,     0,     0,   279,
     280,   598,   281,   599,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   292,   293,   294,   295,   296,
     297,   456,   299,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   600,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,   601,   352,   353,   354,   355,     0,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,     0,   371,   602,   372,   373,   374,   375,
     376,     0,   377,   378,     0,     0,   379,   380,   381,   382,
     383,     0,   384,   385,   386,   387,   388,   389,   390,     0,
       0,   391,   392,   393,   394,   395,     0,     0,   396,   397,
     398,   399,   400,   401,   402,     0,   403,   603,   404,   405,
     406,   407,     0,     0,   408,     0,     0,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   621,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    96,    97,    98,    99,   100,   101,   102,   103,
       0,   105,   106,   107,     0,     0,     0,     0,     0,     0,
       0,   108,   109,     0,   110,   111,   112,   581,   113,   114,
     115,   116,   117,   582,   118,   119,     0,   120,   121,   122,
     123,   124,     0,     0,   125,   126,   127,   128,   129,     0,
     130,   131,   132,   133,   134,     0,   583,     0,   135,   136,
     137,   138,   139,   584,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,     0,   585,   149,   150,   151,     0,
       0,     0,   586,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,     0,   193,     0,   194,   195,
     196,   197,     0,   198,     0,   199,   587,     0,   588,   200,
     201,   202,   203,     0,   204,     0,   205,   206,     0,   207,
     208,   209,   210,   211,   589,   212,   213,   214,   215,     0,
     216,   217,   218,   219,   220,   221,     0,   222,   590,   223,
     224,   225,   226,   227,   228,   229,     0,   230,     0,   231,
     591,   592,   232,   593,   233,   234,   235,   236,   237,     0,
       0,   238,   594,   239,   595,     0,   240,   241,   242,     0,
       0,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   596,   260,
     261,   262,   263,   264,     0,   265,   266,   597,   267,     0,
     268,   269,   270,   271,   272,   273,     0,   274,   275,     0,
       0,   276,   277,   278,     0,     0,   279,   280,   598,   281,
     599,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,     0,   292,   293,   294,   295,   296,   297,   456,   299,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   600,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,     0,   347,   348,   349,   350,   351,   601,   352,
     353,   354,   355,     0,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
       0,   371,   602,   372,   373,   374,   375,   376,     0,   377,
     378,     0,     0,   379,   380,   381,   382,   383,     0,   384,
     385,   386,   387,   388,   389,   390,     0,     0,   391,   392,
     393,   394,   395,     0,     0,   396,   397,   398,   399,   400,
     401,   402,     0,   403,   603,   404,   405,   406,   407,     0,
       0,   408,     0,     0,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    95,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    96,
      97,    98,    99,   100,   101,   102,   103,     0,   105,   106,
     107,     0,     0,     0,     0,     0,     0,     0,   108,   109,
       0,   110,   111,   112,     0,   113,   114,   115,   116,   117,
       0,   118,   119,     0,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,  1167,   130,   131,   132,
     133,   134,     0,     0,  1168,   135,   136,   137,   138,   139,
       0,   140,   141,   142,  1169,   143,   144,   145,   146,   147,
     148,     0,     0,   149,   150,   151,     0,     0,     0,     0,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,     0,   193,     0,   194,   195,   196,   197,     0,
     198,  1170,   199,     0,     0,     0,   200,   201,   202,   203,
       0,   204,     0,   205,   206,     0,   207,   208,   209,   210,
    1171,     0,   212,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   221,     0,   222,     0,   223,   224,   225,   226,
     227,   228,   229,     0,   230,     0,   231,     0,     0,   232,
       0,   233,   234,   235,   236,   237,     0,     0,   238,     0,
     239,     0,     0,   240,   241,   242,     0,     0,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,     0,   260,   261,   262,   263,
     264,     0,   265,   266,     0,   267,     0,   268,   269,   270,
     271,   272,   273,     0,   274,   275,     0,     0,   276,   277,
     278,     0,     0,   279,   280,     0,   281,     0,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   292,
     293,   294,   295,   296,   297,   456,   299,   300,  1172,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,     0,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
       0,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,     0,   371,     0,
     372,   373,   374,   375,   376,     0,   377,   378,     0,     0,
     379,   380,   381,   382,   383,     0,   384,   385,   386,   387,
     388,   389,   390,     0,  1173,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   401,   402,     0,
     403,     0,   404,   405,   406,   407,     0,     0,   408,     0,
       0,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    95,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    96,    97,    98,    99,
     100,   101,   102,   103,     0,   105,   106,   107,     0,     0,
       0,     0,     0,     0,     0,   108,   109,     0,   110,   111,
     112,     0,   113,   114,   115,   116,   117,     0,   118,   119,
       0,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,  1167,   130,   131,   132,   133,   134,     0,
       0,     0,   135,   136,   137,   138,   139,     0,   140,   141,
     142,  1169,   143,   144,   145,   146,   147,   148,     0,     0,
     149,   150,   151,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,     0,
     193,     0,   194,   195,   196,   197,     0,   198,  1170,   199,
       0,     0,     0,   200,   201,   202,   203,     0,   204,     0,
     205,   206,     0,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   221,
       0,   222,     0,   223,   224,   225,   226,   227,   228,   229,
       0,   230,     0,   231,     0,     0,   232,     0,   233,   234,
     235,   236,   237,     0,     0,   238,     0,   239,  1563,     0,
     240,   241,   242,     0,     0,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,     0,   260,   261,   262,   263,   264,     0,   265,
     266,     0,   267,     0,   268,   269,   270,   271,   272,   273,
       0,   274,   275,     0,     0,   276,   277,   278,     0,     0,
     279,   280,     0,   281,     0,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,     0,   292,   293,   294,   295,
     296,   297,   456,   299,   300,  1172,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,     0,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,     0,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,     0,   371,     0,   372,   373,   374,
     375,   376,     0,   377,   378,     0,     0,   379,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
       0,  1173,   391,   392,   393,   394,   395,     0,     0,   396,
     397,   398,   399,   400,   401,   402,     0,   403,     0,   404,
     405,   406,   407,     0,     0,   408,     0,     0,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    95,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    96,    97,    98,    99,   100,   101,   102,
     103,     0,   105,   106,   107,     3,     4,     0,     0,     0,
       0,     0,   108,   109,     0,   110,   111,   112,     0,   113,
     114,   115,   116,   117,     0,   118,   119,     0,   120,   121,
     122,   123,   124,     0,     0,   125,   126,   127,   128,   129,
       0,   130,   131,   132,   133,   134,     0,     0,     0,   135,
     136,   137,   138,   139,     0,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,     0,   149,   150,   151,
       0,     0,     0,     0,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,     0,   193,     0,   194,
     195,   196,   197,     0,   198,     0,   199,     0,     0,     0,
     200,   201,   202,   203,     0,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   222,     0,
     223,   224,   225,   226,   227,   228,   229,     0,   230,     0,
     231,     0,     0,   232,     0,   233,   234,   235,   236,   237,
       0,     0,   238,     0,   239,     0,     0,   240,   241,   242,
       0,     0,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,     0,
     260,   261,   262,   263,   264,     0,   265,   266,     0,   267,
       0,   268,   269,   270,   271,   272,   273,     0,   274,   275,
       0,     0,   276,   277,   278,     0,     0,   279,   280,     0,
     281,     0,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   292,   293,   294,   295,   296,   297,   456,
     299,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,     0,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,     0,   371,     0,   372,   373,   374,   375,   376,     0,
     377,   378,     0,     0,   379,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,   389,   390,     0,     0,   391,
     392,   393,   394,   395,     0,     0,   396,   397,   398,   399,
     400,   401,   402,     0,   403,     0,   404,   405,   406,   407,
       0,     0,   408,     0,     0,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    95,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,     0,     0,     0,     0,     0,     0,     0,   108,
     109,     0,   110,   111,   112,     0,   113,   114,   115,   116,
     117,     0,   118,   119,     0,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,     0,     0,   135,   136,   137,   138,
     139,     0,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,     0,     0,   149,   150,   151,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,     0,   193,     0,   194,   195,   196,   197,
       0,   198,     0,   199,     0,     0,     0,   200,   201,   202,
     203,     0,   204,     0,   205,   206,     0,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,     0,   222,     0,   223,   224,   225,
     226,   227,   228,   229,     0,   230,     0,   231,     0,     0,
     232,     0,   233,   234,   235,   236,   237,     0,     0,   238,
       0,   239,     0,     0,   240,   241,   242,     0,     0,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,     0,   260,   261,   262,
     263,   264,     0,   265,   266,     0,   267,     0,   268,   269,
     270,   271,   272,   273,     0,   274,   275,     0,     0,   276,
     277,   278,     0,     0,   279,   280,     0,   281,     0,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,     0,
     292,   293,   294,   295,   296,   297,   298,   299,   300,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,     0,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,     0,   371,
       0,   372,   373,   374,   375,   376,     0,   377,   378,     0,
       0,   379,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,     0,     0,   391,   392,   393,   394,
     395,     0,     0,   396,   397,   398,   399,   400,   401,   402,
       0,   403,     0,   404,   405,   406,   407,     0,     0,   408,
       0,     0,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    95,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    96,    97,    98,
      99,   100,   101,   102,   103,   473,   105,   106,   107,     0,
       0,     0,     0,     0,     0,     0,   108,   109,     0,   110,
     111,   112,     0,   113,   114,   115,   116,   117,     0,   118,
     119,     0,   120,   121,   122,   123,   124,     0,     0,   125,
     126,   127,   128,   129,     0,   130,   131,   132,   133,   134,
       0,     0,     0,   135,   136,   137,   138,   139,     0,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,     0,
       0,   149,   150,   151,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
       0,   193,     0,   194,   195,   196,   197,     0,   198,     0,
     199,     0,     0,     0,   200,   201,   202,   203,     0,   204,
       0,   205,   206,     0,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,     0,   222,     0,   223,   224,   225,   226,   227,   228,
     229,     0,   230,     0,   231,     0,     0,   232,     0,   233,
     234,   235,   236,   237,     0,     0,   238,     0,   239,     0,
       0,   240,   241,   242,     0,     0,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,     0,   260,   261,   262,   263,   264,     0,
     265,   266,     0,   267,     0,   268,   269,   270,   271,   272,
     273,     0,   274,   275,     0,     0,   276,   277,   278,     0,
       0,   279,   280,     0,   281,     0,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   292,   293,   294,
     295,   296,   297,   456,   299,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,     0,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,     0,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,     0,   371,     0,   372,   373,
     374,   375,   376,     0,   474,   378,     0,     0,   475,   380,
     381,   382,   383,     0,   384,   385,   386,   387,   388,   389,
     390,     0,     0,   391,   392,   393,   394,   395,     0,     0,
     396,   397,   398,   399,   400,   401,   402,     0,   403,     0,
     404,   405,   406,   407,     0,     0,   408,     0,     0,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    95,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    96,    97,    98,    99,   100,   101,
     102,   103,     0,   105,   106,   107,     0,     0,     0,     0,
       0,     0,     0,   108,   109,     0,   110,   111,   112,     0,
     113,   114,   115,   116,   117,     0,   118,   119,     0,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,     0,     0,
     135,   136,   137,   138,   139,     0,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,     0,     0,   149,   150,
     151,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,     0,   193,     0,
     194,   195,   196,   197,     0,   198,     0,   199,     0,     0,
       0,   200,   201,   202,   203,     0,   204,     0,   205,   206,
       0,   207,   208,   209,   210,   211,     0,   212,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,     0,   222,
       0,   223,   224,   225,   226,   227,   228,   229,     0,   230,
       0,   231,     0,     0,   232,     0,   233,   234,   235,   236,
     237,     0,     0,   238,     0,   239,     0,     0,   240,   241,
     242,     0,     0,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
       0,   260,   261,   262,   263,   264,     0,   265,   266,     0,
     267,     0,   268,   269,   270,   271,   272,   273,     0,   274,
     275,     0,   493,   276,   277,   278,     0,     0,   279,   280,
       0,   281,     0,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,     0,   292,   293,   294,   295,   296,   297,
     456,   299,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,     0,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,     0,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,     0,   371,     0,   372,   373,   374,   375,   376,
       0,   377,   378,     0,     0,   379,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,     0,     0,
     391,   392,   393,   394,   395,     0,     0,   396,   397,   398,
     399,   400,   401,   402,     0,   403,     0,   404,   405,   406,
     407,     0,     0,   408,     0,     0,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    95,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    96,    97,    98,    99,   100,   101,   102,   103,     0,
     105,   106,   107,     0,     0,     0,     0,     0,     0,     0,
     108,   109,     0,   110,   111,   112,     0,   113,   114,   115,
     116,   117,     0,   118,   119,     0,   120,   121,   122,   123,
     124,     0,     0,   125,   126,   127,   128,   129,     0,   130,
     131,   132,   133,   134,     0,     0,     0,   135,   136,   137,
     138,   139,     0,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,     0,   149,   150,   151,     0,     0,
       0,     0,     0,     0,     0,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,     0,   193,     0,   194,   195,   196,
     197,     0,   198,     0,   199,     0,     0,     0,   200,   201,
     202,   203,     0,   204,     0,   205,   206,     0,   207,   208,
     209,   210,   537,     0,   212,   213,   214,   215,     0,   216,
     217,   218,   219,   220,   221,     0,   222,     0,   223,   224,
     225,   226,   227,   228,   229,     0,   230,     0,   231,     0,
       0,   232,     0,   233,   234,   235,   236,   237,     0,     0,
     238,     0,   239,     0,     0,   240,   241,   242,     0,     0,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,     0,   260,   261,
     262,   263,   264,     0,   265,   266,     0,   267,     0,   268,
     269,   270,   271,   272,   273,     0,   274,   275,     0,   493,
     276,   277,   278,     0,     0,   279,   280,     0,   281,     0,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   292,   293,   294,   295,   296,   297,   456,   299,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,     0,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,     0,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,     0,
     371,     0,   372,   373,   374,   375,   376,     0,   377,   378,
       0,     0,   379,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,     0,     0,   391,   392,   393,
     394,   395,     0,     0,   396,   397,   398,   399,   400,   401,
     402,     0,   403,     0,   404,   405,   406,   407,     0,     0,
     408,     0,     0,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    95,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    96,    97,
      98,    99,   100,   101,   102,   103,   559,   105,   106,   107,
       0,     0,     0,     0,     0,     0,     0,   108,   109,     0,
     110,   111,   112,     0,   113,   114,   115,   116,   117,     0,
     118,   119,     0,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     134,     0,     0,     0,   135,   136,   137,   138,   139,     0,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
       0,     0,   149,   150,   151,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,     0,   193,     0,   194,   195,   196,   197,     0,   198,
       0,   199,     0,     0,     0,   200,   201,   202,   203,     0,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   211,
       0,   212,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,     0,   222,     0,   223,   224,   225,   226,   227,
     228,   229,     0,   230,     0,   231,     0,     0,   232,     0,
     233,   234,   235,   236,   237,     0,     0,   238,     0,   239,
       0,     0,   240,   241,   242,     0,     0,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
       0,   265,   266,     0,   267,     0,   268,   269,   270,   271,
     272,   273,     0,   274,   275,     0,     0,   276,   277,   278,
       0,     0,   279,   280,     0,   281,     0,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,     0,   292,   293,
     294,   295,   296,   297,   456,   299,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,     0,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,     0,   371,     0,   372,
     373,   374,   375,   376,     0,   377,   378,     0,     0,   379,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,     0,     0,   391,   392,   393,   394,   395,     0,
       0,   396,   397,   398,   399,   400,   401,   402,     0,   403,
       0,   404,   405,   406,   407,     0,     0,   408,     0,     0,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      95,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    96,    97,    98,    99,   100,
     101,   102,   103,     0,   105,   106,   107,     0,     0,     0,
       0,     0,     0,     0,   108,   109,     0,   110,   111,   112,
       0,   113,   114,   115,   116,   117,     0,   118,   119,     0,
     120,   121,   122,   123,   124,     0,     0,   125,   126,   127,
     128,   129,     0,   130,   131,   132,   133,   134,     0,     0,
       0,   135,   136,   137,   138,   139,     0,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,     0,     0,   149,
     150,   151,     0,     0,     0,     0,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,     0,   193,
       0,   194,   195,   196,   197,     0,   198,     0,   199,     0,
       0,     0,   200,   201,   202,  1416,     0,   204,     0,   205,
     206,     0,   207,   208,   209,   210,   211,     0,   212,   213,
     214,   215,     0,   216,   217,   218,   219,   220,   221,     0,
     222,     0,   223,   224,   225,   226,   227,   228,   229,     0,
     230,     0,   231,     0,     0,   232,     0,   233,   234,   235,
     236,   237,     0,     0,   238,     0,   239,     0,     0,   240,
     241,  1417,     0,     0,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,     0,   260,   261,   262,   263,   264,     0,   265,   266,
       0,   267,     0,   268,   269,   270,   271,   272,   273,     0,
     274,   275,     0,     0,   276,   277,   278,     0,     0,   279,
     280,     0,   281,     0,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   292,   293,   294,   295,   296,
     297,   456,   299,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,     0,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,     0,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,  1418,   371,     0,   372,  1419,   374,  1420,
     376,     0,   377,   378,     0,     0,   379,   380,   381,   382,
     383,     0,   384,   385,   386,   387,   388,   389,   390,     0,
       0,   391,   392,  1421,   394,   395,     0,     0,   396,   397,
     398,   399,   400,   401,   402,     0,   403,     0,   404,   405,
     406,   407,     0,     0,   408,     0,     0,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    95,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    96,    97,    98,    99,   100,   101,   102,   103,
       0,   105,   106,   107,     0,     0,     0,     0,     0,  1943,
       0,   108,   109,     0,   110,   111,   112,     0,   113,   114,
     115,   116,   117,     0,   118,   119,     0,   120,   121,   122,
     123,   124,     0,     0,   125,   126,   127,   128,   129,     0,
     130,   131,   132,   133,   134,     0,     0,     0,   135,   136,
     137,   138,   139,     0,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,     0,     0,   149,   150,   151,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,     0,   193,     0,   194,   195,
     196,   197,     0,   198,     0,   199,     0,     0,     0,   200,
     201,   202,   203,     0,   204,     0,   205,   206,     0,   207,
     208,   209,   210,   211,     0,   212,   213,   214,   215,     0,
     216,   217,   218,   219,   220,   221,     0,   222,     0,   223,
     224,   225,   226,   227,   228,   229,     0,   230,     0,   231,
       0,     0,   232,     0,   233,   234,   235,   236,   237,     0,
       0,   238,     0,   239,     0,     0,   240,   241,   242,     0,
       0,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,     0,   260,
     261,   262,   263,   264,     0,   265,   266,     0,   267,     0,
     268,   269,   270,   271,   272,   273,     0,   274,   275,     0,
       0,   276,   277,   278,     0,     0,   279,   280,     0,   281,
       0,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,     0,   292,   293,   294,   295,   296,   297,   456,   299,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,     0,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,     0,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
       0,   371,     0,   372,   373,   374,   375,   376,     0,   377,
     378,     0,     0,   379,   380,   381,   382,   383,     0,   384,
     385,   386,   387,   388,   389,   390,     0,     0,   391,   392,
     393,   394,   395,     0,     0,   396,   397,   398,   399,   400,
     401,   402,     0,   403,     0,   404,   405,   406,   407,     0,
       0,   408,     0,     0,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    95,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    96,
      97,    98,    99,   100,   101,   102,   103,     0,   105,   106,
     107,     0,     0,     0,     0,     0,  1957,     0,   108,   109,
       0,   110,   111,   112,     0,   113,   114,   115,   116,   117,
       0,   118,   119,     0,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   135,   136,   137,   138,   139,
       0,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,     0,     0,   149,   150,   151,     0,     0,     0,     0,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,     0,   193,     0,   194,   195,   196,   197,     0,
     198,     0,   199,     0,     0,     0,   200,   201,   202,   203,
       0,   204,     0,   205,   206,     0,   207,   208,   209,   210,
     211,     0,   212,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   221,     0,   222,     0,   223,   224,   225,   226,
     227,   228,   229,     0,   230,     0,   231,     0,     0,   232,
       0,   233,   234,   235,   236,   237,     0,     0,   238,     0,
     239,     0,     0,   240,   241,   242,     0,     0,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,     0,   260,   261,   262,   263,
     264,     0,   265,   266,     0,   267,     0,   268,   269,   270,
     271,   272,   273,     0,   274,   275,     0,     0,   276,   277,
     278,     0,     0,   279,   280,     0,   281,     0,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   292,
     293,   294,   295,   296,   297,   456,   299,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,     0,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
       0,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,     0,   371,     0,
     372,   373,   374,   375,   376,     0,   377,   378,     0,     0,
     379,   380,   381,   382,   383,     0,   384,   385,   386,   387,
     388,   389,   390,     0,     0,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   401,   402,     0,
     403,     0,   404,   405,   406,   407,     0,     0,   408,     0,
       0,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    95,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    96,    97,    98,    99,
     100,   101,   102,   103,     0,   105,   106,   107,     0,     0,
       0,     0,     0,     0,     0,   108,   109,     0,   110,   111,
     112,     0,   113,   114,   115,   116,   117,     0,   118,   119,
       0,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   134,     0,
       0,     0,   135,   136,   137,   138,   139,     0,   140,   141,
     142,     0,   143,   144,   145,   146,   147,   148,     0,     0,
     149,   150,   151,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,     0,
     193,     0,   194,   195,   196,   197,     0,   198,     0,   199,
       0,     0,     0,   200,   201,   202,   203,     0,   204,     0,
     205,   206,     0,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   221,
       0,   222,     0,   223,   224,   225,   226,   227,   228,   229,
       0,   230,     0,   231,     0,     0,   232,     0,   233,   234,
     235,   236,   237,     0,     0,   238,     0,   239,     0,     0,
     240,   241,   242,     0,     0,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,     0,   260,   261,   262,   263,   264,     0,   265,
     266,     0,   267,     0,   268,   269,   270,   271,   272,   273,
       0,   274,   275,     0,     0,   276,   277,   278,     0,     0,
     279,   280,     0,   281,     0,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,     0,   292,   293,   294,   295,
     296,   297,   456,   299,   300,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,     0,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,     0,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,     0,   371,     0,   372,   373,   374,
     375,   376,     0,   377,   378,     0,     0,   379,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
       0,     0,   391,   392,   393,   394,   395,     0,     0,   396,
     397,   398,   399,   400,   401,   402,     0,   403,     0,   404,
     405,   406,   407,     0,     0,   408,     0,     0,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    95,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    96,    97,    98,    99,   100,   101,   102,
     103,     0,   105,   106,   107,     0,     0,     0,     0,     0,
       0,     0,   108,   109,     0,   110,   111,   112,     0,   113,
     114,   115,   116,   117,     0,   118,   119,     0,   120,   121,
     122,   123,   124,     0,     0,   125,   126,   127,   128,   129,
       0,   130,   131,   132,   133,   134,     0,     0,     0,   135,
     136,   137,   138,   139,     0,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,     0,   149,   150,   151,
       0,     0,     0,     0,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,     0,   193,     0,   194,
     195,   196,   197,     0,   198,     0,   199,     0,     0,     0,
     200,   201,   202,   203,     0,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   211,     0,   212,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   222,     0,
     223,   224,   225,   226,   227,   228,   229,     0,   230,     0,
     231,     0,     0,   232,     0,   233,   234,   235,   236,   237,
       0,     0,   238,     0,   239,     0,     0,   240,   241,   485,
       0,     0,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,     0,
     260,   261,   262,   263,   264,     0,   265,   266,     0,   267,
       0,   268,   269,   270,   271,   272,   273,     0,   274,   275,
       0,     0,   276,   277,   278,     0,     0,   279,   280,     0,
     281,     0,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   292,   293,   294,   295,   296,   297,   456,
     299,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,     0,   329,   330,   331,   332,   333,   334,
     335,   486,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   487,     0,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,     0,   371,     0,   372,   373,   374,   375,   376,     0,
     488,   378,     0,     0,   379,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,   389,   390,     0,     0,   391,
     392,   393,   394,   395,     0,     0,   396,   397,   398,   399,
     400,   401,   402,     0,   403,     0,   404,   405,   406,   407,
       0,     0,   408,     0,     0,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    95,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      96,    97,    98,    99,   100,   101,   102,   103,     0,   105,
     106,   107,     0,     0,     0,     0,     0,     0,     0,   108,
     109,     0,   110,   111,   112,     0,   113,   114,   115,   116,
     117,     0,   118,   119,     0,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,     0,     0,   135,   136,   137,   138,
     139,     0,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,     0,     0,   149,   150,   151,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,     0,   193,     0,   194,   195,   196,   197,
       0,   198,     0,   199,     0,     0,     0,   200,   201,   202,
     203,     0,   204,     0,   205,   206,     0,   207,   208,   209,
     210,   211,     0,   212,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,     0,   222,     0,   223,   224,   225,
     226,   227,   228,   229,     0,   230,     0,   231,     0,     0,
     232,     0,   233,   234,   235,   236,   237,     0,     0,   238,
       0,   239,     0,     0,   240,   241,   242,     0,     0,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,     0,   260,   261,   262,
     263,   264,     0,   265,   266,     0,   267,     0,   268,   269,
     270,   271,   272,   273,     0,   274,   275,     0,     0,   276,
     277,   278,     0,     0,   279,   280,     0,   281,     0,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,     0,
     292,   293,   294,   295,   296,   297,   456,   299,   300,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   501,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,     0,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,     0,   371,
       0,   372,   373,   374,   375,   376,     0,   377,   378,     0,
       0,   379,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,     0,     0,   391,   392,   393,   394,
     395,     0,     0,   396,   397,   398,   399,   400,   401,   402,
       0,   403,     0,   404,   405,   406,   407,     0,     0,   408,
       0,     0,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    95,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    96,    97,    98,
      99,   100,   101,   102,   103,     0,   105,   106,   107,     0,
       0,     0,     0,     0,     0,     0,   108,   109,     0,   110,
     111,   112,     0,   113,   114,   115,   116,   117,     0,   118,
     119,     0,   120,   121,   122,   123,   124,     0,     0,   125,
     126,   127,   128,   129,     0,   130,   131,   132,   133,   134,
       0,     0,     0,   135,   136,   137,   138,   139,     0,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,     0,
       0,   149,   150,   151,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
       0,   193,     0,   194,   195,   196,   197,     0,   198,     0,
     199,     0,     0,     0,   200,   201,   202,   203,     0,   204,
       0,   205,   206,     0,   207,   208,   209,   210,   532,     0,
     212,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,     0,   222,     0,   223,   224,   225,   226,   227,   228,
     229,     0,   230,     0,   231,     0,     0,   232,     0,   233,
     234,   235,   236,   237,     0,     0,   238,     0,   239,     0,
       0,   240,   241,   242,     0,     0,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,     0,   260,   261,   262,   263,   264,     0,
     265,   266,     0,   267,     0,   268,   269,   270,   271,   272,
     273,     0,   274,   275,     0,     0,   276,   277,   278,     0,
       0,   279,   280,     0,   281,     0,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   292,   293,   294,
     295,   296,   297,   456,   299,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,     0,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,     0,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,     0,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,     0,   371,     0,   372,   373,
     374,   375,   376,     0,   377,   378,     0,     0,   379,   380,
     381,   382,   383,     0,   384,   385,   386,   387,   388,   389,
     390,     0,     0,   391,   392,   393,   394,   395,     0,     0,
     396,   397,   398,   399,   400,   401,   402,     0,   403,     0,
     404,   405,   406,   407,     0,     0,   408,     0,     0,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    95,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    96,    97,    98,    99,   100,   101,
     102,   103,     0,   105,   106,   107,     0,     0,     0,     0,
       0,     0,     0,   108,   109,     0,   110,   111,   112,     0,
     113,   114,   115,   116,   117,     0,   118,   119,     0,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,     0,     0,
     135,   136,   137,   138,   139,     0,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,     0,     0,   149,   150,
     151,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,     0,   193,     0,
     194,   195,   196,   197,     0,   198,     0,   199,     0,     0,
       0,   200,   201,   202,   203,     0,   204,     0,   205,   206,
       0,   207,   208,   209,   210,   535,     0,   212,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,     0,   222,
       0,   223,   224,   225,   226,   227,   228,   229,     0,   230,
       0,   231,     0,     0,   232,     0,   233,   234,   235,   236,
     237,     0,     0,   238,     0,   239,     0,     0,   240,   241,
     242,     0,     0,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
       0,   260,   261,   262,   263,   264,     0,   265,   266,     0,
     267,     0,   268,   269,   270,   271,   272,   273,     0,   274,
     275,     0,     0,   276,   277,   278,     0,     0,   279,   280,
       0,   281,     0,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,     0,   292,   293,   294,   295,   296,   297,
     456,   299,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,     0,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,     0,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,     0,   371,     0,   372,   373,   374,   375,   376,
       0,   377,   378,     0,     0,   379,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,     0,     0,
     391,   392,   393,   394,   395,     0,     0,   396,   397,   398,
     399,   400,   401,   402,     0,   403,     0,   404,   405,   406,
     407,     0,     0,   408,     0,     0,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    95,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    96,    97,    98,    99,   100,   101,   102,   103,     0,
     105,   106,   107,     0,     0,     0,     0,     0,     0,     0,
     108,   109,     0,   110,   111,   112,     0,   113,   114,   115,
     116,   117,     0,   118,   119,     0,   120,   121,   122,   123,
     124,     0,     0,   125,   126,   127,   128,   129,     0,   130,
     131,   132,   133,   134,     0,     0,     0,   135,   136,   137,
     138,   139,     0,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,     0,   149,   150,   151,     0,     0,
       0,     0,     0,     0,     0,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,     0,   193,     0,   194,   195,   196,
     197,     0,   198,     0,   199,     0,     0,     0,   200,   201,
     202,   203,     0,   204,     0,   205,   206,     0,   207,   208,
     209,   210,   539,     0,   212,   213,   214,   215,     0,   216,
     217,   218,   219,   220,   221,     0,   222,     0,   223,   224,
     225,   226,   227,   228,   229,     0,   230,     0,   231,     0,
       0,   232,     0,   233,   234,   235,   236,   237,     0,     0,
     238,     0,   239,     0,     0,   240,   241,   242,     0,     0,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,     0,   260,   261,
     262,   263,   264,     0,   265,   266,     0,   267,     0,   268,
     269,   270,   271,   272,   273,     0,   274,   275,     0,     0,
     276,   277,   278,     0,     0,   279,   280,     0,   281,     0,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   292,   293,   294,   295,   296,   297,   456,   299,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,     0,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,     0,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,     0,
     371,     0,   372,   373,   374,   375,   376,     0,   377,   378,
       0,     0,   379,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,     0,     0,   391,   392,   393,
     394,   395,     0,     0,   396,   397,   398,   399,   400,   401,
     402,     0,   403,     0,   404,   405,   406,   407,     0,     0,
     408,     0,     0,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    95,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    96,    97,
      98,    99,   100,   101,   102,   103,     0,   105,   106,   107,
       0,     0,     0,     0,     0,     0,     0,   108,   109,     0,
     110,   111,   112,     0,   113,   114,   115,   116,   117,     0,
     118,   119,     0,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     134,     0,     0,     0,   135,   136,   137,   138,   139,     0,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
       0,     0,   149,   150,   151,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,     0,   193,     0,   194,   195,   196,   197,     0,   198,
       0,   199,     0,     0,     0,   200,   201,   202,   203,     0,
     204,     0,   205,   206,     0,   207,   208,   209,   210,   552,
       0,   212,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,     0,   222,     0,   223,   224,   225,   226,   227,
     228,   229,     0,   230,     0,   231,     0,     0,   232,     0,
     233,   234,   235,   236,   237,     0,     0,   238,     0,   239,
       0,     0,   240,   241,   242,     0,     0,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
       0,   265,   266,     0,   267,     0,   268,   269,   270,   271,
     272,   273,     0,   274,   275,     0,     0,   276,   277,   278,
       0,     0,   279,   280,     0,   281,     0,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,     0,   292,   293,
     294,   295,   296,   297,   456,   299,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,     0,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,     0,   371,     0,   372,
     373,   374,   375,   376,     0,   377,   378,     0,     0,   379,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,     0,     0,   391,   392,   393,   394,   395,     0,
       0,   396,   397,   398,   399,   400,   401,   402,     0,   403,
       0,   404,   405,   406,   407,     0,     0,   408,     0,     0,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      95,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    96,    97,    98,    99,   100,
     101,   102,   103,     0,   105,   106,   107,     0,     0,     0,
       0,     0,     0,     0,   108,   109,     0,   110,   111,   112,
       0,   113,   114,   115,   116,   117,     0,   118,   119,     0,
     120,   121,   122,   123,   124,     0,     0,   125,   126,   127,
     128,   129,     0,   130,   131,   132,   133,   134,     0,     0,
       0,   135,   136,   137,   138,   139,     0,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,     0,     0,   149,
     150,   151,     0,     0,     0,     0,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,     0,   193,
       0,   194,   195,   196,   197,     0,   198,     0,   199,     0,
       0,     0,   200,   201,   202,   203,     0,   204,     0,   205,
     206,     0,   207,   208,   209,   210,   567,     0,   212,   213,
     214,   215,     0,   216,   217,   218,   219,   220,   221,     0,
     222,     0,   223,   224,   225,   226,   227,   228,   229,     0,
     230,     0,   231,     0,     0,   232,     0,   233,   234,   235,
     236,   237,     0,     0,   238,     0,   239,     0,     0,   240,
     241,   242,     0,     0,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,     0,   260,   261,   262,   263,   264,     0,   265,   266,
       0,   267,     0,   268,   269,   270,   271,   272,   273,     0,
     274,   275,     0,     0,   276,   277,   278,     0,     0,   279,
     280,     0,   281,     0,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   292,   293,   294,   295,   296,
     297,   456,   299,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,     0,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,     0,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,     0,   371,     0,   372,   373,   374,   375,
     376,     0,   377,   378,     0,     0,   379,   380,   381,   382,
     383,     0,   384,   385,   386,   387,   388,   389,   390,     0,
       0,   391,   392,   393,   394,   395,     0,     0,   396,   397,
     398,   399,   400,   401,   402,     0,   403,     0,   404,   405,
     406,   407,     0,     0,   408,     0,     0,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    95,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    96,    97,    98,    99,   100,   101,   102,   103,
       0,   105,   106,   107,     0,     0,     0,     0,     0,     0,
       0,   108,   109,     0,   110,   111,   112,     0,   113,   114,
     115,   116,   117,     0,   118,   119,     0,   120,   121,   122,
     123,   124,     0,     0,   125,   126,   127,   128,   129,     0,
     130,   131,   132,   133,   134,     0,     0,     0,   135,   136,
     137,   138,   139,     0,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,     0,     0,   149,   150,   151,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,     0,   193,     0,   194,   195,
     196,   197,     0,   198,     0,   199,     0,     0,     0,   200,
     201,   202,   203,     0,   204,     0,   205,   206,     0,   207,
     208,   209,   210,   571,     0,   212,   213,   214,   215,     0,
     216,   217,   218,   219,   220,   221,     0,   222,     0,   223,
     224,   225,   226,   227,   228,   229,     0,   230,     0,   231,
       0,     0,   232,     0,   233,   234,   235,   236,   237,     0,
       0,   238,     0,   239,     0,     0,   240,   241,   242,     0,
       0,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,     0,   260,
     261,   262,   263,   264,     0,   265,   266,     0,   267,     0,
     268,   269,   270,   271,   272,   273,     0,   274,   275,     0,
       0,   276,   277,   278,     0,     0,   279,   280,     0,   281,
       0,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,     0,   292,   293,   294,   295,   296,   297,   456,   299,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,     0,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,     0,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
       0,   371,     0,   372,   373,   374,   375,   376,     0,   377,
     378,     0,     0,   379,   380,   381,   382,   383,     0,   384,
     385,   386,   387,   388,   389,   390,     0,     0,   391,   392,
     393,   394,   395,     0,     0,   396,   397,   398,   399,   400,
     401,   402,     0,   403,     0,   404,   405,   406,   407,     0,
       0,   408,     0,     0,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    95,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    96,
      97,    98,    99,   100,   101,   102,   103,     0,   105,   106,
     107,     0,     0,     0,     0,     0,     0,     0,   108,   109,
       0,   110,   111,   112,     0,   113,   114,   115,   116,   117,
       0,   118,   119,     0,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   135,   136,   137,   138,   139,
       0,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,     0,     0,   149,   150,   151,     0,     0,     0,     0,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,     0,   193,     0,   194,   195,   196,   197,     0,
     198,     0,   199,     0,     0,     0,   200,   201,   202,   203,
       0,   204,     0,   205,   206,     0,   207,   208,   209,   210,
     574,     0,   212,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   221,     0,   222,     0,   223,   224,   225,   226,
     227,   228,   229,     0,   230,     0,   231,     0,     0,   232,
       0,   233,   234,   235,   236,   237,     0,     0,   238,     0,
     239,     0,     0,   240,   241,   242,     0,     0,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,     0,   260,   261,   262,   263,
     264,     0,   265,   266,     0,   267,     0,   268,   269,   270,
     271,   272,   273,     0,   274,   275,     0,     0,   276,   277,
     278,     0,     0,   279,   280,     0,   281,     0,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   292,
     293,   294,   295,   296,   297,   456,   299,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,     0,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
       0,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,     0,   371,     0,
     372,   373,   374,   375,   376,     0,   377,   378,     0,     0,
     379,   380,   381,   382,   383,     0,   384,   385,   386,   387,
     388,   389,   390,     0,     0,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   401,   402,     0,
     403,     0,   404,   405,   406,   407,     0,     0,   408,     0,
       0,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    95,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    96,    97,    98,    99,
     100,   101,   102,   103,     0,   105,   106,   107,     0,     0,
       0,     0,     0,     0,     0,   108,   109,     0,   110,   111,
     112,     0,   113,   114,   115,   116,   117,     0,   118,   119,
       0,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   134,     0,
       0,     0,   135,   136,   137,   138,   139,     0,   140,   141,
     142,     0,   143,   144,   145,   146,   147,   148,     0,     0,
     149,   150,   151,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,     0,
     193,     0,   194,   195,   196,   197,     0,   198,     0,   199,
       0,     0,     0,   200,   201,   202,   203,     0,   204,     0,
     205,   206,     0,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   221,
       0,   222,     0,   223,   224,   225,   226,   227,   228,   229,
       0,   230,     0,   231,     0,     0,   232,     0,   233,   234,
     235,   236,   237,     0,     0,   238,     0,   239,     0,     0,
     240,   241,   242,     0,     0,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,     0,   260,   261,   262,   263,   264,     0,   265,
     266,     0,   267,     0,   268,   269,   270,   271,   272,   273,
       0,   274,   275,     0,     0,   276,   277,   278,     0,     0,
     279,   280,     0,   281,     0,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,     0,   292,   293,   294,   295,
     296,   297,   456,   299,   300,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,     0,   329,   330,   331,
     332,   333,   334,   335,   486,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,     0,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,     0,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,     0,   371,     0,   372,   373,   374,
     375,   376,     0,   488,   378,     0,     0,   379,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
       0,     0,   391,   392,   393,   394,   395,     0,     0,   396,
     397,   398,   399,   400,   401,   402,     0,   403,     0,   404,
     405,   406,   407,     0,     0,   408,     0,     0,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,    95,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    96,    97,    98,    99,   100,   101,   102,
     103,     0,   105,   106,   107,     0,     0,     0,     0,     0,
       0,     0,   108,   109,     0,   110,   111,   112,     0,   113,
     114,   115,   116,   117,     0,   118,   119,     0,   120,   121,
     122,   123,   124,     0,     0,   125,   126,   127,   128,   129,
       0,   130,   131,   132,   133,   134,     0,     0,     0,   135,
     136,   137,   138,   139,     0,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,     0,   149,   150,   151,
       0,     0,     0,     0,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,     0,   193,     0,   194,
     195,   196,   197,     0,   198,     0,   199,     0,     0,     0,
     200,   201,   202,   203,     0,   204,     0,   205,   206,     0,
     207,   208,   209,   210,   821,     0,   212,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   222,     0,
     223,   224,   225,   226,   227,   228,   229,     0,   230,     0,
     231,     0,     0,   232,     0,   233,   234,   235,   236,   237,
       0,     0,   238,     0,   239,     0,     0,   240,   241,   242,
       0,     0,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,     0,
     260,   261,   262,   263,   264,     0,   265,   266,     0,   267,
       0,   268,   269,   270,   271,   272,   273,     0,   274,   275,
       0,     0,   276,   277,   278,     0,     0,   279,   280,     0,
     281,     0,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   292,   293,   294,   295,   296,   297,   456,
     299,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,     0,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,     0,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,     0,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,     0,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,     0,   371,     0,   372,   373,   374,   375,   376,     0,
     377,   378,     0,     0,   379,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,   389,   390,     0,     0,   391,
     392,   393,   394,   395,     0,     0,   396,   397,   398,   399,
     400,   401,   402,     0,   403,     0,   404,   405,   406,   407,
       0,     0,   408,     0,     0,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,    95,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      96,    97,    98,    99,   100,   101,   102,   103,     0,   105,
     106,   107,     0,     0,     0,     0,     0,     0,     0,   108,
     109,     0,   110,   111,   112,     0,   113,   114,   115,   116,
     117,     0,   118,   119,     0,   120,   121,   122,   123,   124,
       0,     0,   125,   126,   127,   128,   129,     0,   130,   131,
     132,   133,   134,     0,     0,     0,   135,   136,   137,   138,
     139,     0,   140,   141,   142,     0,   143,   144,   145,   146,
     147,   148,     0,     0,   149,   150,   151,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,     0,   193,     0,   194,   195,   196,   197,
       0,   198,     0,   199,     0,     0,     0,   200,   201,   202,
     203,     0,   204,     0,   205,   206,     0,   207,   208,   209,
     210,   823,     0,   212,   213,   214,   215,     0,   216,   217,
     218,   219,   220,   221,     0,   222,     0,   223,   224,   225,
     226,   227,   228,   229,     0,   230,     0,   231,     0,     0,
     232,     0,   233,   234,   235,   236,   237,     0,     0,   238,
       0,   239,     0,     0,   240,   241,   242,     0,     0,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,     0,   260,   261,   262,
     263,   264,     0,   265,   266,     0,   267,     0,   268,   269,
     270,   271,   272,   273,     0,   274,   275,     0,     0,   276,
     277,   278,     0,     0,   279,   280,     0,   281,     0,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,     0,
     292,   293,   294,   295,   296,   297,   456,   299,   300,     0,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
       0,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
       0,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,     0,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,     0,   371,
       0,   372,   373,   374,   375,   376,     0,   377,   378,     0,
       0,   379,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,     0,     0,   391,   392,   393,   394,
     395,     0,     0,   396,   397,   398,   399,   400,   401,   402,
       0,   403,     0,   404,   405,   406,   407,     0,     0,   408,
       0,     0,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,    95,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    96,    97,    98,
      99,   100,   101,   102,   103,     0,   105,   106,   107,     0,
       0,     0,     0,     0,  1125,     0,   108,   109,     0,   110,
     111,   112,     0,   113,   114,   115,   116,   117,     0,   118,
     119,     0,   120,   121,   122,   123,   124,     0,     0,   125,
     126,   127,   128,   129,     0,   130,   131,   132,   133,   134,
       0,     0,     0,   135,   136,   137,   138,   139,     0,   140,
     141,   142,     0,   143,   144,   145,   146,   147,   148,     0,
       0,   149,   150,   151,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
       0,   193,     0,   194,   195,   196,   197,     0,   198,     0,
     199,     0,     0,     0,   200,   201,   202,   203,     0,   204,
       0,   205,   206,     0,   207,   208,   209,   210,   211,     0,
     212,   213,   214,   215,     0,   216,   217,   218,   219,   220,
     221,     0,   222,     0,   223,   224,   225,   226,   227,   228,
     229,     0,   230,     0,   231,     0,     0,   232,     0,   233,
     234,   235,   236,   237,     0,     0,   238,     0,   239,     0,
       0,   240,   241,   242,     0,     0,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,     0,   260,   261,   262,   263,   264,     0,
     265,   266,     0,   267,     0,   268,   269,   270,   271,   272,
     273,     0,   274,   275,     0,     0,   276,   277,   278,     0,
       0,   279,   280,     0,   281,     0,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,     0,   292,   293,   294,
     295,   296,   297,   456,   299,   300,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,     0,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,     0,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,     0,     0,   348,
     349,   350,   351,     0,   352,   353,   354,   355,     0,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,     0,   371,     0,   372,   373,
     374,   375,   376,     0,   377,   378,     0,     0,   379,   380,
     381,   382,   383,     0,   384,   385,   386,   387,   388,   389,
     390,     0,     0,   391,   392,   393,   394,   395,     0,     0,
     396,   397,   398,   399,   400,   401,   402,     0,   403,     0,
     404,   405,   406,   407,     0,     0,   408,     0,     0,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,    95,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    96,    97,    98,    99,   100,   101,
     102,   103,     0,   105,   106,   107,     0,     0,     0,     0,
       0,     0,     0,   108,   109,     0,   110,   111,   112,     0,
     113,   114,   115,   116,   117,     0,   118,   119,     0,   120,
     121,   122,   123,   124,     0,     0,   125,   126,   127,   128,
     129,     0,   130,   131,   132,   133,   134,     0,     0,     0,
     135,   136,   137,   138,   139,     0,   140,   141,   142,     0,
     143,   144,   145,   146,   147,   148,     0,     0,   149,   150,
     151,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,     0,   193,     0,
     194,   195,   196,   197,     0,   198,     0,   199,     0,     0,
       0,   200,   201,   202,   203,     0,   204,     0,   205,   206,
       0,   207,   208,   209,   210,  1244,     0,   212,   213,   214,
     215,     0,   216,   217,   218,   219,   220,   221,     0,   222,
       0,   223,   224,   225,   226,   227,   228,   229,     0,   230,
       0,   231,     0,     0,   232,     0,   233,   234,   235,   236,
     237,     0,     0,   238,     0,   239,     0,     0,   240,   241,
     242,     0,     0,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
       0,   260,   261,   262,   263,   264,     0,   265,   266,     0,
     267,     0,   268,   269,   270,   271,   272,   273,     0,   274,
     275,     0,     0,   276,   277,   278,     0,     0,   279,   280,
       0,   281,     0,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,     0,   292,   293,   294,   295,   296,   297,
     456,   299,   300,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,     0,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,     0,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,     0,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,     0,   371,     0,   372,   373,   374,   375,   376,
       0,   377,   378,     0,     0,   379,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,     0,     0,
     391,   392,   393,   394,   395,     0,     0,   396,   397,   398,
     399,   400,   401,   402,     0,   403,     0,   404,   405,   406,
     407,     0,     0,   408,     0,     0,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,    95,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    96,    97,    98,    99,   100,   101,   102,   103,     0,
     105,   106,   107,     0,     0,     0,     0,     0,     0,     0,
     108,   109,     0,   110,   111,   112,     0,   113,   114,   115,
     116,   117,     0,   118,   119,     0,   120,   121,   122,   123,
     124,     0,     0,   125,   126,   127,   128,   129,     0,   130,
     131,   132,   133,   134,     0,     0,     0,   135,   136,   137,
     138,   139,     0,   140,   141,   142,     0,   143,   144,   145,
     146,   147,   148,     0,     0,   149,   150,   151,     0,     0,
       0,     0,     0,     0,     0,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,     0,   193,     0,   194,   195,   196,
     197,     0,   198,     0,   199,     0,     0,     0,   200,   201,
     202,   203,     0,   204,     0,   205,   206,     0,   207,   208,
     209,   210,  1257,     0,   212,   213,   214,   215,     0,   216,
     217,   218,   219,   220,   221,     0,   222,     0,   223,   224,
     225,   226,   227,   228,   229,     0,   230,     0,   231,     0,
       0,   232,     0,   233,   234,   235,   236,   237,     0,     0,
     238,     0,   239,     0,     0,   240,   241,   242,     0,     0,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,     0,   260,   261,
     262,   263,   264,     0,   265,   266,     0,   267,     0,   268,
     269,   270,   271,   272,   273,     0,   274,   275,     0,     0,
     276,   277,   278,     0,     0,   279,   280,     0,   281,     0,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
       0,   292,   293,   294,   295,   296,   297,   456,   299,   300,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,     0,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,     0,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,     0,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,     0,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,     0,
     371,     0,   372,   373,   374,   375,   376,     0,   377,   378,
       0,     0,   379,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,     0,     0,   391,   392,   393,
     394,   395,     0,     0,   396,   397,   398,   399,   400,   401,
     402,     0,   403,     0,   404,   405,   406,   407,     0,     0,
     408,     0,     0,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,    95,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    96,    97,
      98,    99,   100,   101,   102,   103,     0,   105,   106,   107,
       0,     0,     0,     0,     0,     0,     0,   108,   109,     0,
     110,   111,   112,     0,   113,   114,   115,   116,   117,     0,
     118,   119,     0,   120,   121,   122,   123,   124,     0,     0,
     125,   126,   127,   128,   129,     0,   130,   131,   132,   133,
     134,     0,     0,     0,   135,   136,   137,   138,   139,     0,
     140,   141,   142,     0,   143,   144,   145,   146,   147,   148,
       0,     0,   149,   150,   151,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,     0,   193,     0,   194,   195,   196,   197,     0,   198,
       0,   199,     0,     0,     0,   200,   201,   202,   203,     0,
     204,     0,   205,   206,     0,   207,   208,   209,   210,  1494,
       0,   212,   213,   214,   215,     0,   216,   217,   218,   219,
     220,   221,     0,   222,     0,   223,   224,   225,   226,   227,
     228,   229,     0,   230,     0,   231,     0,     0,   232,     0,
     233,   234,   235,   236,   237,     0,     0,   238,     0,   239,
       0,     0,   240,   241,   242,     0,     0,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,     0,   260,   261,   262,   263,   264,
       0,   265,   266,     0,   267,     0,   268,   269,   270,   271,
     272,   273,     0,   274,   275,     0,     0,   276,   277,   278,
       0,     0,   279,   280,     0,   281,     0,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,     0,   292,   293,
     294,   295,   296,   297,   456,   299,   300,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,     0,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,     0,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,     0,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,     0,   371,     0,   372,
     373,   374,   375,   376,     0,   377,   378,     0,     0,   379,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,     0,     0,   391,   392,   393,   394,   395,     0,
       0,   396,   397,   398,   399,   400,   401,   402,     0,   403,
       0,   404,   405,   406,   407,     0,     0,   408,     0,     0,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
      95,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    96,    97,    98,    99,   100,
     101,   102,   103,     0,   105,   106,   107,     0,     0,     0,
       0,     0,     0,     0,   108,   109,     0,   110,   111,   112,
       0,   113,   114,   115,   116,   117,     0,   118,   119,     0,
     120,   121,   122,   123,   124,     0,     0,   125,   126,   127,
     128,   129,     0,   130,   131,   132,   133,   134,     0,     0,
       0,   135,   136,   137,   138,   139,     0,   140,   141,   142,
       0,   143,   144,   145,   146,   147,   148,     0,     0,   149,
     150,   151,     0,     0,     0,     0,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,     0,   193,
       0,   194,   195,   196,   197,     0,   198,     0,   199,     0,
       0,     0,   200,   201,   202,   203,     0,   204,     0,   205,
     206,     0,   207,   208,   209,   210,  1506,     0,   212,   213,
     214,   215,     0,   216,   217,   218,   219,   220,   221,     0,
     222,     0,   223,   224,   225,   226,   227,   228,   229,     0,
     230,     0,   231,     0,     0,   232,     0,   233,   234,   235,
     236,   237,     0,     0,   238,     0,   239,     0,     0,   240,
     241,   242,     0,     0,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,     0,   260,   261,   262,   263,   264,     0,   265,   266,
       0,   267,     0,   268,   269,   270,   271,   272,   273,     0,
     274,   275,     0,     0,   276,   277,   278,     0,     0,   279,
     280,     0,   281,     0,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,     0,   292,   293,   294,   295,   296,
     297,   456,   299,   300,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,     0,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,     0,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,     0,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,     0,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,     0,   371,     0,   372,   373,   374,   375,
     376,     0,   377,   378,     0,     0,   379,   380,   381,   382,
     383,     0,   384,   385,   386,   387,   388,   389,   390,     0,
       0,   391,   392,   393,   394,   395,     0,     0,   396,   397,
     398,   399,   400,   401,   402,     0,   403,     0,   404,   405,
     406,   407,     0,     0,   408,     0,     0,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,    95,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    96,    97,    98,    99,   100,   101,   102,   103,
       0,   105,   106,   107,     0,     0,     0,     0,     0,     0,
       0,   108,   109,     0,   110,   111,   112,     0,   113,   114,
     115,   116,   117,     0,   118,   119,     0,   120,   121,   122,
     123,   124,     0,     0,   125,   126,   127,   128,   129,     0,
     130,   131,   132,   133,   134,     0,     0,     0,   135,   136,
     137,   138,   139,     0,   140,   141,   142,     0,   143,   144,
     145,   146,   147,   148,     0,     0,   149,   150,   151,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,     0,   193,     0,   194,   195,
     196,   197,     0,   198,     0,   199,     0,     0,     0,   200,
     201,   202,   203,     0,   204,     0,   205,   206,     0,   207,
     208,   209,   210,  1508,     0,   212,   213,   214,   215,     0,
     216,   217,   218,   219,   220,   221,     0,   222,     0,   223,
     224,   225,   226,   227,   228,   229,     0,   230,     0,   231,
       0,     0,   232,     0,   233,   234,   235,   236,   237,     0,
       0,   238,     0,   239,     0,     0,   240,   241,   242,     0,
       0,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,     0,   260,
     261,   262,   263,   264,     0,   265,   266,     0,   267,     0,
     268,   269,   270,   271,   272,   273,     0,   274,   275,     0,
       0,   276,   277,   278,     0,     0,   279,   280,     0,   281,
       0,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,     0,   292,   293,   294,   295,   296,   297,   456,   299,
     300,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,     0,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,     0,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,     0,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
       0,   371,     0,   372,   373,   374,   375,   376,     0,   377,
     378,     0,     0,   379,   380,   381,   382,   383,     0,   384,
     385,   386,   387,   388,   389,   390,     0,     0,   391,   392,
     393,   394,   395,     0,     0,   396,   397,   398,   399,   400,
     401,   402,     0,   403,     0,   404,   405,   406,   407,     0,
       0,   408,     0,     0,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,    95,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    96,
      97,    98,    99,   100,   101,   102,   103,     0,   105,   106,
     107,     0,     0,     0,     0,     0,     0,     0,   108,   109,
       0,   110,   111,   112,     0,   113,   114,   115,   116,   117,
       0,   118,   119,     0,   120,   121,   122,   123,   124,     0,
       0,   125,   126,   127,   128,   129,     0,   130,   131,   132,
     133,   134,     0,     0,     0,   135,   136,   137,   138,   139,
       0,   140,   141,   142,     0,   143,   144,   145,   146,   147,
     148,     0,     0,   149,   150,   151,     0,     0,     0,     0,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,     0,   193,     0,   194,   195,   196,   197,     0,
     198,     0,   199,     0,     0,     0,   200,   201,   202,   203,
       0,   204,     0,   205,   206,     0,   207,   208,   209,   210,
    2062,     0,   212,   213,   214,   215,     0,   216,   217,   218,
     219,   220,   221,     0,   222,     0,   223,   224,   225,   226,
     227,   228,   229,     0,   230,     0,   231,     0,     0,   232,
       0,   233,   234,   235,   236,   237,     0,     0,   238,     0,
     239,     0,     0,   240,   241,   242,     0,     0,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,     0,   260,   261,   262,   263,
     264,     0,   265,   266,     0,   267,     0,   268,   269,   270,
     271,   272,   273,     0,   274,   275,     0,     0,   276,   277,
     278,     0,     0,   279,   280,     0,   281,     0,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,     0,   292,
     293,   294,   295,   296,   297,   456,   299,   300,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,     0,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,     0,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,     0,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
       0,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,     0,   371,     0,
     372,   373,   374,   375,   376,     0,   377,   378,     0,     0,
     379,   380,   381,   382,   383,     0,   384,   385,   386,   387,
     388,   389,   390,     0,     0,   391,   392,   393,   394,   395,
       0,     0,   396,   397,   398,   399,   400,   401,   402,     0,
     403,     0,   404,   405,   406,   407,     0,     0,   408,     0,
       0,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,    95,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    96,    97,    98,    99,
     100,   101,   102,   103,     0,   105,   106,   107,     0,     0,
       0,     0,     0,     0,     0,   108,   109,     0,   110,   111,
     112,     0,   113,   114,   115,   116,   117,     0,   118,   119,
       0,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     127,   128,   129,     0,   130,   131,   132,   133,   134,     0,
       0,     0,   135,   136,   137,   138,   139,     0,   140,   141,
     142,     0,   143,   144,   145,   146,   147,   148,     0,     0,
     149,   150,   151,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,     0,
     193,     0,   194,   195,   196,   197,     0,   198,     0,   199,
       0,     0,     0,   200,   201,   202,   203,     0,   204,     0,
     205,   206,     0,   207,   208,   209,   210,   211,     0,   212,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   221,
       0,   222,     0,   223,   224,   225,   226,   227,   228,   229,
       0,   230,     0,   231,     0,     0,   232,     0,   233,   234,
     235,   236,   237,     0,     0,   238,     0,   239,     0,     0,
     240,   241,   242,     0,     0,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,     0,   260,   261,   262,   263,   264,     0,   265,
     266,     0,   267,     0,   268,   269,   270,   271,   272,   273,
       0,   274,   275,     0,     0,   276,   277,   278,     0,     0,
     279,   280,     0,   281,     0,   282,   283,   284,   285,   286,
     287,   288,     0,   290,   291,     0,   292,   293,   294,   295,
     296,   297,   456,   299,   300,     0,   301,   302,   303,   304,
     305,   306,   307,     0,   309,   310,   311,   312,   313,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,     0,   329,   330,   331,
     332,     0,   334,   335,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,     0,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,     0,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,     0,   371,     0,   372,   373,   374,
     375,   376,     0,   377,   378,     0,     0,   379,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
       0,     0,   391,   392,   393,   394,   395,     0,     0,   396,
     397,   398,   399,   400,   401,   402,     0,   403,     0,   404,
     405,   406,   407,     0,     0,   408,     0,     0,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   874,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    96,    97,    98,    99,   100,   101,   102,
     103,     0,   105,   106,   107,     0,     0,     0,     0,     0,
       0,     0,   108,   109,     0,   110,   111,   112,   581,   113,
     114,   115,     0,   875,   582,   876,   877,     0,   120,   121,
     122,   123,   124,     0,     0,   125,   126,   878,   879,   129,
       0,   130,   131,   132,   133,     0,     0,   583,     0,   135,
     136,   137,   138,   139,   584,   140,   141,   142,     0,   143,
     144,   145,   146,   147,   148,     0,   585,   149,   150,   151,
       0,     0,     0,   586,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   880,   881,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   647,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,     0,   189,   190,   191,     0,     0,   193,     0,   194,
     195,   882,   197,     0,   198,     0,   199,   587,     0,   588,
     200,   201,   202,   203,     0,   204,     0,     0,   206,     0,
     207,   208,   209,   210,   211,   589,   212,   213,   214,   215,
       0,   216,   217,   218,   219,   220,   221,     0,   222,   590,
       0,   224,   225,   226,   227,   883,   884,     0,   885,     0,
     231,   591,   592,   232,   593,   233,   234,   235,   236,   237,
       0,     0,   238,   594,   239,   595,     0,   240,   241,   242,
       0,     0,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   886,   596,
     887,   261,   262,   263,     0,     0,   265,   266,   597,   267,
       0,     0,   269,   888,   271,   272,   273,     0,   274,   275,
       0,     0,   276,   277,   278,     0,     0,   279,     0,   598,
     281,   599,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,     0,   292,   293,     0,   295,   296,     0,   456,
     299,   300,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   889,   311,   312,   313,   314,     0,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   600,   329,   330,   331,     0,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,     0,   347,   890,   349,   350,   351,   601,
     352,   353,   891,   355,     0,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,     0,   369,
     370,     0,   371,   602,   372,   373,   374,   375,   376,     0,
     892,   893,     0,     0,   379,   380,     0,   382,     0,     0,
     384,   385,   386,   387,   388,   389,   390,     0,     0,   391,
     392,   393,   394,   395,     0,     0,   396,   397,   398,   399,
     400,     0,   894,     0,   403,   603,   404,   405,   406,   407,
       0,     0,   408,     0,     0,   409,   410,   411,   412,   413,
     414,   874,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   426,   427,   428,     0,    96,    97,    98,    99,
     100,   101,   102,   103,     0,   105,   106,   107,     0,     0,
       0,     0,     0,     0,     0,   108,   109,     0,   110,   111,
     112,   581,   113,   114,   115,     0,   875,   582,   876,   877,
       0,   120,   121,   122,   123,   124,     0,     0,   125,   126,
     878,   879,   129,     0,   130,   131,   132,   133,     0,     0,
     583,     0,   135,   136,   137,   138,   139,   584,   140,   141,
     142,     0,   143,   144,   145,   146,   147,   148,     0,   585,
     149,   150,   151,     0,     0,     0,   586,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   880,   881,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   647,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,     0,   189,   190,   191,     0,     0,
     193,     0,   194,   195,   882,   197,     0,   198,     0,   199,
     587,     0,   588,   200,   201,   202,   203,     0,   204,     0,
       0,   206,     0,   207,   208,   209,   210,   211,   589,   212,
     213,   214,   215,     0,   216,   217,   218,   219,   220,   221,
       0,   222,   590,     0,   224,   225,   226,   227,   883,   884,
       0,   885,     0,   231,   591,   592,   232,   593,   233,   234,
     235,   236,   237,     0,     0,   238,   594,   239,   595,     0,
     240,   241,   242,     0,     0,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   886,   596,   887,   261,   262,   263,     0,     0,   265,
     266,   597,   267,     0,     0,   269,   888,   271,   272,   273,
       0,   274,   275,     0,     0,   276,   277,   278,     0,     0,
     279,     0,   598,   281,   599,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,     0,   292,   293,     0,   295,
     296,     0,   456,   299,   300,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   889,   311,   312,   313,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   600,   329,   330,   331,
       0,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,     0,   347,     0,   349,
     350,   351,   601,   352,   353,   891,   355,     0,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,     0,   369,   370,     0,   371,   602,   372,   373,   374,
     375,   376,     0,   892,   893,     0,     0,   379,   380,     0,
     382,     0,     0,   384,   385,   386,   387,   388,   389,   390,
       0,     0,   391,   392,   393,   394,   395,     0,     0,   396,
     397,   398,   399,   400,     0,   894,     0,   403,   603,   404,
     405,   406,   407,     0,     0,   408,     0,     0,   409,   410,
     411,   412,   413,   414,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   426,   427,   428
};

static const yytype_int16 yycheck[] =
{
      16,    30,   615,   536,   453,   496,   460,    51,   608,   484,
      10,   804,   942,     0,    14,   790,   546,    17,    18,    19,
     908,  1433,    22,   644,   645,    25,   608,   452,    28,    29,
     969,   847,   802,   500,   521,   728,   819,  1504,   572,     0,
       0,   662,   683,     0,     0,    15,   819,   819,   777,  1425,
    1009,   819,   966,  1826,    15,  1759,   458,    53,  1510,   782,
    1512,    53,   773,  1388,   672,   779,  1455,  1807,   910,    69,
    1446,  1268,     0,  1834,  1841,    75,    76,    77,    78,    79,
       5,  1682,    69,  1709,    84,     9,     9,   730,    88,    29,
      25,  1012,   839,   807,  2066,   459,    83,    56,    49,     5,
      10,     5,     5,    71,    14,     5,  1715,   720,    18,   576,
     536,     5,   538,     5,   540,   890,     0,     0,    28,    29,
       9,   106,    83,    83,  2069,  2072,    83,    83,     5,     5,
      39,    39,  1425,     5,     5,   460,    13,    14,   720,     5,
     460,     5,  1501,    78,    65,  1148,   839,    13,    14,   551,
       3,     4,     5,  1446,   608,     5,     9,     4,  1146,   613,
     762,   164,     9,    13,    14,    56,    76,    11,  2136,     3,
     465,     5,    11,     0,   113,    11,   106,   790,   104,   116,
    2207,     4,   163,   163,  2118,    73,     9,  1748,    15,    11,
    2237,   518,   177,    56,   163,    83,    11,  1714,   263,   518,
       3,  1560,    47,    30,    40,  1651,    90,    90,  2021,   791,
     265,   133,   794,   795,   271,   682,   278,   164,    40,   116,
     711,  2155,  2339,  2288,   126,   271,    53,    30,    31,   251,
     116,   177,  1429,     5,   131,    71,   104,   210,  1177,   160,
     118,  2397,    69,  2164,   254,   236,     5,   177,   612,    71,
     332,   236,   204,    26,   239,   153,    83,   164,   111,   880,
     881,   198,   310,    26,  2185,   155,   153,   888,   722,   723,
      33,   914,   106,    26,   728,   248,  2223,   890,    36,    26,
     342,   974,   111,   608,  1778,   893,    33,   194,   613,  2506,
     236,  2064,   466,   114,    26,   744,   826,  1622,   298,     0,
    2268,    33,   209,  2237,   389,   772,   236,    57,    29,   239,
    1777,   218,  1913,   155,   376,    65,    73,  1425,   961,   962,
      26,  1947,  2439,   221,   114,  1951,    83,   410,  1937,    11,
     469,  1707,    53,  1709,   221,   180,   283,   470,  1446,     4,
     185,   305,   944,   177,     9,  1284,   356,   432,   250,   340,
     203,  2568,  1846,   126,   416,   340,   969,   247,   260,   162,
     181,   164,   120,  2519,   262,   324,  2179,   429,  1011,   333,
      76,   224,   214,   126,   422,   220,   297,   420,    84,   352,
     248,   265,   265,   466,   466,   839,   408,  2308,   298,    71,
     452,   181,   841,   113,   340,   849,    11,   722,   723,   296,
    2465,   466,   236,   728,   466,   239,   112,   387,   355,   834,
     340,   466,   837,   470,  1707,  1774,  1709,  1776,   387,  1936,
     845,   328,    90,  2540,   470,    40,   255,  1873,  1989,   455,
     235,   460,    56,   324,  2368,   408,    62,    63,   157,  1168,
     466,   325,   325,   770,   739,  1238,   913,    11,   188,  2476,
     376,   770,   452,   453,   454,   922,    71,  2504,  1388,   926,
    2394,   324,   447,   466,   373,   373,  1469,  2207,  1427,  1428,
     486,   408,   178,   412,   224,   455,    40,   521,   945,   946,
    1468,   466,   403,   189,   848,   485,  2454,   487,   468,   470,
     460,  2092,  1185,   493,  2441,  2440,   464,  2123,   459,   387,
     468,   501,  2128,   425,  1251,  2131,   340,    71,    80,   354,
    2119,   470,   508,   513,   839,   466,   508,   447,   470,   419,
     974,  1435,   408,   510,   849,   525,  2498,   431,   498,   849,
    1727,  1998,   410,  1463,  1136,   255,  1457,    19,   615,   464,
     320,   466,   465,   468,   454,   429,   429,   471,   452,   510,
     510,   123,   977,   510,   510,   555,   556,   557,  1251,  2011,
     466,   501,   466,   466,  1177,  2338,   466,   431,   457,   458,
    2504,  1947,   466,   292,   466,  1951,  2343,   339,   513,   470,
     392,  2342,   510,   467,   467,   469,   469,    69,   452,   466,
     466,   501,   608,   126,   466,   466,   359,   613,  1987,  1707,
     466,  1709,   466,  1445,   457,   458,   429,   366,   367,   422,
     457,   458,   359,   447,   143,  1197,   466,   420,   462,   619,
     459,   460,   461,   462,   248,  1207,   462,   359,  1210,   452,
     387,  1570,   459,   460,   457,   458,  2262,   459,   460,   461,
     462,  2242,   457,   458,   459,   460,   461,   462,   230,   974,
     141,   612,   426,   682,  1947,   230,   410,   186,  1951,   365,
    1193,   103,   368,   111,   342,  1286,  1991,   466,   323,   685,
    1609,  1284,   455,  2446,   342,   375,   230,   145,    22,   695,
     429,   508,  2469,   510,  2471,   468,   208,   310,    65,   168,
    1629,   707,  1622,    75,   349,    77,   470,    79,   376,  2166,
     324,  2060,    84,   452,   720,    73,   722,   723,   376,   409,
     282,   202,   466,   790,  1248,    83,   449,  1358,  1252,  1658,
     343,  1255,   466,   230,   724,   349,   230,   260,  1439,  1183,
     178,  1185,  1334,  1335,   111,  1528,  2476,  1339,   416,   468,
    1166,  1624,  2118,   743,   744,   224,  1562,  2123,   416,   749,
     750,   751,  2128,   376,   336,  2131,  2132,   265,   210,   755,
     756,   429,   758,   755,   756,  2552,   758,  1193,   461,  1652,
    1372,  1373,   431,   466,  1971,   468,   776,   777,  1203,  2155,
     271,   162,   336,  1208,   452,   612,  1212,   131,   466,   789,
     167,  1217,   234,   452,  2567,   237,   248,  1251,   466,   422,
       4,    73,   250,     4,   449,     9,   806,   466,     9,   381,
     810,    83,  1266,   890,   749,   815,  2520,  2521,  1459,   188,
     820,   648,  1536,  1290,   406,  2118,  2293,  1229,   828,   336,
    2123,   406,   336,   743,   834,  2128,   464,   837,  2131,  1947,
     468,   841,   842,  1951,   844,   845,  2298,   847,  1571,    13,
      14,    22,   406,  1576,   306,   682,   459,    28,  1183,   250,
    1185,  2237,  2155,   467,   255,   461,  2570,   466,  1807,   431,
     466,   806,   468,   250,   342,    13,    14,  1807,   255,   849,
    1351,   470,  1353,  1354,   466,  1352,  2262,   848,   230,   431,
     452,   466,   969,   457,   458,   459,   460,   461,   462,   406,
     352,   380,   406,   382,   466,  1595,  1596,  1597,   376,  1376,
     452,   402,   466,   304,   464,   931,   466,   204,   468,   230,
     297,  1420,  1421,   910,   467,   269,  1251,   406,   755,   756,
       8,   758,   842,    11,   844,   312,   163,    15,    16,    17,
     467,  1266,   942,   470,  2237,  1432,    53,  1414,   416,   910,
     910,    30,    31,   910,   910,   466,   408,  1570,    22,   466,
     131,   429,   466,   449,    28,    22,   615,   336,   380,  2262,
     382,    28,   208,  1507,   343,  1509,  2328,   977,   322,   323,
    2332,  2393,  2334,   113,   452,   380,   467,   382,   146,   470,
    1904,   466,  2368,   468,   336,  1788,  1609,   429,   466,   431,
     467,  1017,   318,   470,  1963,   349,  1006,   376,   615,   467,
    2118,    90,   470,   332,   333,  2123,  1629,  1787,  2394,    91,
    2128,   848,  1665,  2131,   146,   336,   403,  1557,  1630,  1631,
    1632,  1633,   146,  1849,  1636,  1637,  1638,  1639,  1640,  1641,
    1642,  1643,  1644,  1645,  1827,  1658,  1775,  2155,  1656,  1657,
     146,  1821,   342,   422,  1827,  1827,  1510,  1511,  1512,  1827,
     467,  1991,   192,  1786,   406,  1788,   466,   131,   468,  1682,
     466,  2430,  2431,     8,   131,  2368,   380,   380,   382,   382,
      15,    16,    17,   910,  1686,  1687,   376,   250,   467,  2556,
    2029,   470,   164,  2505,   422,   406,   467,   153,   269,   470,
    1177,  2394,   158,   467,   467,  1746,   470,   470,   332,   333,
    2522,   493,  1755,  1806,  1114,  1808,  1116,   515,   248,   517,
     250,    79,   194,    35,   466,  1125,   416,  1127,  2504,  2237,
     153,   467,  2491,   146,   470,   158,  1123,   209,  1952,   429,
    1954,   790,    54,   525,   433,  1115,   218,   318,   468,    91,
     467,   322,   979,   470,  2262,   466,   146,  2045,  1583,  1159,
     146,   145,   452,   633,   634,   221,  2578,   467,  1168,  1169,
     470,   265,   244,   555,   556,   557,   466,   310,   349,  1179,
    1180,  1181,  1182,   790,  1184,  1510,  1511,  1512,   658,   267,
    1190,   103,  1192,   265,  1807,   126,  1663,   376,   221,  1698,
    1699,  1700,  1701,  1203,  1204,   269,   262,  1284,  1208,  1209,
     343,  2504,   269,  1213,  1214,  1215,  1216,    35,  1218,  1219,
     151,   467,   164,   467,   470,  1807,   470,  1227,  1228,  1720,
     467,   219,   467,   470,  2027,   470,  1723,  1724,  1725,   262,
    1240,   890,   413,   376,   467,   467,   467,   470,   470,   470,
    1266,   485,   194,   487,   318,  1242,   328,   466,   322,  1169,
    2368,  2036,     5,   342,     5,   322,   126,   209,  2207,  1179,
    1999,  1181,   332,   333,  1184,   187,   218,  2207,   467,   466,
    1190,   470,  1192,   890,    22,   349,  2394,   332,   333,   422,
      28,   151,   349,   466,  1204,   467,  1123,   376,   470,  1209,
    1913,   158,   244,  1213,  1214,  1215,  1216,  1336,  1218,  1219,
     467,   293,   467,   470,  1848,   470,   466,  2205,   466,   250,
     969,  1964,   234,   467,   255,   237,   470,   467,  2267,   260,
     470,  2270,   267,     5,   614,   615,   248,   416,   410,   466,
    1983,   420,   724,   467,   722,   723,   470,  1376,  1802,   413,
     429,   466,  1806,     5,  1808,     5,   413,     7,   342,     5,
      22,   467,   969,    13,   470,   466,    28,   279,   750,   467,
      20,   466,   470,   452,    24,   453,   454,   455,   466,   457,
     458,   459,   460,   461,   462,   466,   328,   466,  1388,   466,
     466,   466,   376,   131,   776,   255,  2504,    22,    22,   467,
     260,     5,   470,    28,    28,   466,   430,   789,   878,   879,
     276,   323,   466,   466,   466,  1242,  2029,   887,  1418,   467,
     204,  1450,   470,  2036,   467,  1425,   467,   470,   810,   470,
     467,   343,   416,   470,   168,   470,  2018,   467,   820,   467,
     470,    94,   470,    35,  2214,   429,  1446,  1938,   349,   467,
    1450,   363,   470,  1453,   188,  1455,   467,   467,  1445,   470,
     470,   467,   158,   394,   470,   847,   936,   937,   452,   131,
     262,   158,   615,   404,  2117,   467,   387,  1802,   470,  2092,
     260,  1806,   466,  1808,  1445,  1445,   219,  2089,  1445,  1445,
     224,   467,   467,  1570,   470,   470,  2030,  2031,    83,   467,
    1516,  1501,   470,  1978,   470,   467,   131,   131,   470,  1336,
     790,   467,   466,   466,   470,   387,    53,  2210,   453,   454,
     455,    53,   457,   458,   459,   460,   461,   462,  1177,   387,
     241,   269,  1609,  1549,   394,   387,   270,  2476,   387,   429,
     146,    90,   250,   250,   404,   466,  2476,    35,   468,  1376,
     419,  1551,  1629,   470,    34,   467,  1556,  2011,   466,   466,
    1560,  1561,  1562,  1563,   466,     9,  1393,   466,   111,   425,
    1177,   385,   385,    11,  1574,  2177,   470,   385,   466,  1579,
     318,  1658,  1409,  1583,   322,  2206,   255,   466,   387,     8,
     171,   154,    11,   163,  2207,   472,   467,   202,  1425,  1586,
     410,  2294,   336,   466,    35,  1682,   470,   269,   352,   210,
     890,   349,   266,   466,   210,   470,   250,   210,  1445,  1446,
     302,    40,  1622,  1450,  1006,  2207,   263,   422,    47,  2242,
     466,   146,   146,   429,   250,  1284,   265,   265,   250,  2241,
      35,    34,   464,   464,   269,   269,   380,   790,   382,   466,
    1694,  2138,    71,  1669,  2267,   387,   318,  2270,  2145,     8,
     322,   387,    11,  1692,  1574,   387,    15,    16,    17,   403,
     387,   163,   406,   467,   467,   413,   467,  1284,   467,   467,
    1709,   467,   467,    32,   449,   468,  2011,   349,   467,   969,
     467,   467,   470,   318,   318,  2316,  1696,   322,   322,   449,
     467,   141,   449,   467,  1704,  1705,  1706,  1707,   467,  1709,
    1710,   467,   467,   153,  1714,  1715,   467,   163,   158,   387,
     139,   466,   275,  2323,   349,   349,  2419,   466,   426,  1009,
    1807,   466,  1114,   426,  1116,   278,   466,   416,   467,   265,
     455,  2323,   451,  2536,   266,   266,   266,   890,   408,   470,
    2175,   413,  1752,   229,    65,   387,  2210,   250,   146,  1586,
      71,   180,   202,  2250,   466,   188,   185,   269,  1768,   146,
    1770,   146,    83,   387,  1774,  1775,  1776,  1159,  1778,  2309,
     387,   221,  2475,   467,   387,   387,   615,   470,   413,   413,
     263,  1807,    35,   265,  1794,   146,  1796,  2288,   429,   342,
     111,   220,   113,   146,   340,  2272,  2255,   464,  1824,  1809,
    1810,  1811,  1812,  1813,  1814,  1815,  1816,  1817,  1818,  2268,
     467,  2421,   262,   239,   137,   163,   969,    11,  1828,   158,
     471,   271,   168,   376,   467,  1835,  1913,   467,   163,   466,
    2294,   467,   271,   426,  2298,  1227,  1846,   467,   267,  1849,
     171,   376,   188,   163,   452,   470,   167,   206,  1845,   467,
    1770,   325,    81,  2476,   415,  1692,   466,   266,   467,  2323,
    2400,   465,   467,   416,   146,   167,   466,   466,   397,   466,
    1707,   192,  1709,    35,  1794,  2210,   429,   466,   224,  2314,
      77,   465,   410,   465,  2476,   163,   467,  1177,  2365,  1809,
    1810,  1811,  1812,  1813,  1814,  1815,  1816,  1817,  1818,   452,
    2377,   467,   466,   209,   274,   467,   209,   467,   267,   466,
     466,  1570,   467,   466,   378,  2374,  1926,   466,   272,  1929,
    1930,  1931,  1932,    53,   270,   354,  1936,  1937,  2538,   250,
    1940,   174,   429,  1943,   255,   455,   190,  1947,  2481,   179,
     467,  1951,  2029,   255,   467,   467,  1972,  1957,  1974,  2036,
    1609,   790,   402,  1570,   255,  2419,   455,  2421,   466,  2294,
    2395,    35,   387,  2298,   387,   250,   466,   104,   429,   265,
    1629,   466,  1982,    35,   465,   163,   297,  1987,  1268,   466,
     284,  1991,   466,  1980,  1981,   209,   466,    83,  2323,  1999,
     428,   312,  1609,   127,  1284,   467,   312,   466,   466,  1658,
     210,   111,    35,   146,    71,  2092,   118,   146,  1845,    35,
     467,  2475,  1629,    53,  2024,   333,   333,    35,   467,   466,
     466,   450,   415,  1682,  1177,   470,  1418,   467,   457,   458,
     459,   460,   461,   462,   380,    71,   382,    49,    35,   410,
     178,  1658,   397,    35,    65,   268,    65,   466,   470,    35,
    2060,   890,   349,   455,   255,   178,  2066,   403,   232,   466,
     406,   397,   255,     0,    35,  1682,   466,  2077,   268,   268,
    2067,   141,   466,   248,  2538,   467,   466,   332,   615,   265,
      92,   470,   403,   153,  2419,   319,  2421,   190,   158,   265,
      32,   466,   265,   116,   453,   454,   455,   408,   457,   458,
     459,   460,   461,   462,    21,   117,   510,  1789,  2118,  2119,
    1947,  2121,  1191,  2123,  1951,  1802,  1982,  1752,  2128,  1505,
    2207,  2131,  2132,   135,  2134,  2394,  2136,   139,  2151,  2472,
     969,  1284,   202,  1830,  2023,  2559,  2478,  1427,  1428,  1429,
    2475,  2301,  2535,  1980,  1981,  2155,  2523,   159,  1807,   777,
     162,   221,  2225,    90,  1499,  2242,  1511,  2475,  1835,  1806,
    2533,  1551,  1496,   175,  1556,  2175,  2176,  2473,   834,  1561,
    1562,  1563,  1555,  2336,  2184,  2419,  2538,   715,  1824,  1460,
    2267,  2207,  1162,  2270,  1475,   743,   765,  1579,   764,  1136,
    1807,  2385,   262,  1973,  1730,   767,  1161,  1446,  2208,  2209,
    1709,   271,  1937,  2538,   141,  1953,  2263,  1707,  2367,  2219,
    2368,  2379,  2222,  2380,  1271,  2462,   153,  2147,  2463,  2450,
    2217,   158,  1004,  1463,  2234,  1438,   163,  2237,  1391,  1393,
    2067,  1292,  2360,  2272,   171,  1007,  1558,   174,  1115,  1266,
     749,  2238,   849,   255,  1116,  2255,  1753,    -1,    -1,    -1,
      -1,   263,  2262,   790,  1913,    -1,  2176,    -1,  2268,    -1,
      -1,    -1,    -1,    -1,    -1,   202,    -1,    -1,  2278,    -1,
      -1,    -1,    -1,  2283,    -1,    -1,    -1,    -1,    -1,    -1,
    1570,    -1,  2292,    -1,   221,    -1,  2123,    -1,  2208,  2209,
      -1,  2128,   304,    -1,  2131,    -1,  1913,  2323,    -1,    -1,
     460,  2327,  2222,    -1,  2314,    -1,    -1,    -1,    -1,    -1,
      -1,  2337,  1704,  1705,  1706,    -1,    -1,    -1,    -1,  1609,
      -1,    -1,    -1,   483,   484,   262,    -1,    -1,   265,    -1,
    2340,    -1,   402,    -1,   271,    -1,    -1,    -1,  1177,  1629,
     500,    -1,    -1,    -1,  2341,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   890,    -1,    -1,    -1,    -1,  2368,    -1,
      -1,    -1,    -1,  2283,  2374,    -1,    -1,    -1,  1658,  2379,
    2029,    -1,    -1,    -1,    -1,    -1,  1768,  2036,    -1,    -1,
    2217,    -1,    -1,    -1,  2394,  2395,  2396,  2397,   325,  2476,
      -1,    -1,  1682,  2390,   464,  2421,    -1,   467,   468,   608,
    2426,  2238,  2428,    -1,   613,    -1,  2432,  2433,    -1,    -1,
      -1,    -1,  2029,    -1,    -1,    -1,   576,  1570,    -1,  2036,
    2430,  2431,    -1,    -1,    -1,  2262,    -1,    -1,    -1,    -1,
      -1,    -1,   969,  2092,    -1,  2272,  1828,  1727,    -1,   376,
      -1,    -1,    -1,    -1,  2454,  1284,    -1,    -1,   608,    -1,
    2476,    -1,  2462,   613,   614,   615,  1609,  1849,    -1,    -1,
      -1,    -1,  2472,    -1,    -1,   402,    -1,    -1,    -1,    -1,
      -1,   631,    -1,    -1,    -1,  2092,  1629,    -1,    -1,    -1,
      -1,  2491,    -1,    -1,    -1,    -1,    -1,    -1,  2498,   426,
      -1,   428,   429,    -1,  2504,    -1,    -1,    -1,    -1,   659,
    2497,    -1,    -1,    -1,  2341,  1658,    -1,    -1,    -1,  2519,
      -1,   720,  2538,   722,   723,    -1,    -1,  1807,   678,   679,
     680,    -1,   682,    -1,    -1,    -1,    -1,   464,    -1,  1682,
     467,   468,   469,    -1,    -1,    -1,    -1,  1929,  1930,  1931,
    1932,    -1,   702,    -1,    -1,    -1,    -1,    -1,  2207,    -1,
      -1,    -1,    -1,  2390,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   722,   723,    -1,    -1,    -1,   727,   728,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   791,  2242,    -1,   794,   795,    -1,    -1,    -1,
    2207,    -1,    -1,    -1,    -1,    -1,    -1,   757,     0,    -1,
      -1,   761,   762,    -1,    -1,    -1,    -1,    -1,  2267,    -1,
      -1,  2270,   772,    -1,    -1,    -1,    18,    -1,    -1,    -1,
      -1,    -1,    -1,  1913,    -1,  2242,    28,    -1,    30,    31,
     790,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1177,    -1,    -1,    -1,    46,   854,   855,    -1,     8,    -1,
    2267,    11,    -1,  2270,  1807,    15,    16,    17,    -1,    -1,
    2497,    -1,    -1,    -1,    66,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1963,    -1,    77,    -1,    -1,    -1,   839,
      40,  1971,    -1,    -1,    -1,    -1,    88,    47,    90,   849,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   107,    -1,    -1,    -1,    -1,
      -1,    71,    -1,    -1,    -1,   924,   925,    -1,    -1,   121,
      -1,    -1,    -1,   932,    -1,   934,   935,    -1,    -1,   131,
     890,  1570,    -1,  1334,  1335,   137,    -1,    -1,  1339,  2029,
     949,    -1,   951,   145,    -1,   147,  2036,  1284,    -1,    -1,
      -1,    -1,    -1,   913,    -1,   964,   965,    -1,    -1,   919,
    1913,    -1,   922,    -1,    -1,    -1,   926,    -1,    -1,    -1,
    1609,  1372,  1373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     940,    -1,    -1,   943,   944,   945,   946,    -1,    -1,    -1,
    1629,    -1,  2184,   953,   954,    -1,    -1,     8,    -1,    -1,
      11,    -1,  2092,    -1,    15,    16,    17,    -1,    -1,   969,
     970,   971,   972,   973,   974,    -1,    -1,  2476,   978,  1658,
     180,   223,   982,    -1,    -1,   185,   986,    -1,    -1,   989,
     990,   991,   992,   993,   994,   995,   996,   997,    -1,    -1,
    1000,    -1,  2234,  1682,    -1,    -1,    -1,  1007,    -1,  1009,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2476,
     220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2029,    -1,    -1,    -1,
      -1,    -1,    -1,  2036,    -1,    -1,    -1,    -1,    -1,   291,
      -1,    -1,   294,     8,    -1,    -1,    11,    -1,    -1,    -1,
    2292,    -1,    -1,    -1,    -1,    -1,     8,   267,    -1,    11,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2207,    -1,    -1,
     322,    -1,    -1,    -1,    -1,    40,    -1,    -1,   330,    -1,
      -1,    -1,    47,    -1,    -1,    -1,  1145,  1146,    40,  2092,
     342,    -1,    -1,    -1,    -1,    47,     8,   349,  2340,    11,
      -1,   353,  2242,    15,    16,    17,    71,    -1,  1118,    -1,
      -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,  1807,    71,
      -1,    -1,    -1,    -1,   376,    -1,  1136,  2267,    -1,    -1,
    2270,    -1,    -1,    35,    -1,  1145,  1146,    -1,  1197,    -1,
      -1,    -1,    -1,    -1,   354,   206,    -1,    -1,  1207,    -1,
      -1,  1210,    54,    -1,    -1,    -1,    -1,    -1,    -1,   411,
      -1,    -1,    -1,    -1,   416,    -1,    -1,  1177,    -1,    -1,
      -1,    -1,    -1,  1183,   139,  1185,    -1,   429,    -1,  1630,
    1631,  1632,  1633,  1570,    -1,  1636,  1637,  1638,  1639,  1640,
    1641,  1642,  1643,  1644,  1645,    -1,    -1,    -1,    -1,    -1,
     452,   103,   104,    -1,  2207,    -1,   267,  1266,    -1,   111,
      -1,    -1,    -1,    -1,   466,   180,    -1,   469,    -1,    -1,
     185,  1280,  1609,    -1,  1913,    -1,    -1,    -1,   180,    -1,
      -1,    -1,    -1,   185,    -1,  1686,  1687,    -1,    -1,  2242,
     450,  1251,  1629,   453,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,    -1,    -1,   220,  1266,    -1,  1268,  1269,
    1270,    -1,    -1,    -1,  2267,   167,    -1,  2270,   220,    -1,
      -1,  1658,    -1,   185,  1284,    -1,    -1,    35,    -1,    -1,
    1290,  1291,    -1,    -1,    -1,   187,  1296,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   206,  1682,    54,    -1,    -1,    -1,
      -1,    -1,   267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   267,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1334,  1335,  1336,    -1,    -1,  1339,
      -1,    -1,   234,    -1,    -1,   237,  2476,    -1,    -1,    -1,
    2029,  1351,  1352,  1353,  1354,   103,   248,  2036,   250,  1359,
      -1,    -1,    -1,    -1,    -1,   267,    -1,    -1,    -1,    -1,
      -1,    -1,  1372,  1373,    -1,     8,  1376,    -1,    11,    -1,
      -1,    -1,    15,    16,    17,  1434,    -1,   279,    -1,    -1,
    1390,    -1,  1392,    -1,  1394,    -1,    -1,    -1,    -1,   354,
      -1,    -1,   453,   454,   455,    -1,   457,   458,   459,   460,
     461,   462,   354,  2092,  1414,    -1,    -1,    -1,  1467,  1468,
      -1,    -1,    -1,    -1,    -1,  1425,    -1,  1427,  1428,  1429,
    1807,   323,    -1,    -1,    -1,    -1,    -1,    -1,  1438,   187,
      -1,    -1,    -1,    -1,    -1,    -1,  1446,    -1,    -1,    -1,
      -1,   343,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1460,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   363,    -1,   365,    -1,  1475,   368,    -1,    -1,    -1,
      -1,    -1,    -1,  2476,    -1,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,  1493,    -1,   450,    -1,    -1,    -1,    -1,
     248,    -1,   457,   458,   459,   460,   461,   462,   450,    -1,
    1510,  1511,  1512,    -1,    -1,   457,   458,   459,   460,   461,
     462,    -1,    -1,    -1,    -1,    -1,    -1,     0,  2207,    -1,
      -1,   279,    -1,    -1,    -1,    -1,  1913,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1593,  1594,    -1,    -1,    -1,  1598,
      -1,   453,   454,   455,    -1,   457,   458,   459,   460,   461,
     462,    -1,    -1,  2242,    -1,    -1,    -1,    -1,    -1,    -1,
    1570,   483,   484,   206,   466,   323,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2267,    -1,
      -1,  2270,    -1,    -1,    -1,   343,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1606,    -1,    -1,  1609,
      -1,    -1,    -1,    -1,    -1,   363,  1616,    90,    -1,    -1,
    1620,    -1,    -1,  1623,    -1,    -1,    -1,    -1,    -1,  1629,
    1630,  1631,  1632,  1633,   267,    -1,  1636,  1637,  1638,  1639,
    1640,  1641,  1642,  1643,  1644,  1645,    -1,    -1,  2089,  1649,
    1650,    -1,  2029,    -1,    -1,    -1,    -1,    -1,  1658,  2036,
      -1,    -1,    -1,  1663,    -1,    -1,    -1,    -1,   141,    -1,
    1670,    -1,    -1,  1673,    -1,  1675,    -1,    -1,    -1,    -1,
     153,    -1,  1682,  1683,    35,   158,  1686,  1687,    -1,    -1,
     163,  1691,  1692,    -1,    -1,    -1,    -1,    -1,   171,    -1,
      -1,   174,   614,    54,    -1,    -1,    -1,  1707,    -1,  1709,
      -1,    -1,    -1,    -1,    -1,  2092,    -1,    -1,    -1,   631,
      -1,  1721,    -1,    -1,    -1,    -1,    -1,  1727,    -1,   202,
      -1,    -1,    -1,    -1,    -1,    -1,  2177,    -1,  1738,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   659,   221,    -1,
      -1,    -1,   103,    -1,  1754,    -1,    -1,    -1,  1807,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   678,   679,   680,    -1,
     682,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,
     702,    -1,   265,    -1,    -1,    -1,    -1,  2476,   271,    -1,
    2241,  1850,  1802,    40,    -1,    -1,  1806,  1807,  1808,    -1,
      47,    -1,    -1,    -1,    -1,   727,   167,    -1,    -1,    -1,
     453,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
    2207,    -1,    -1,    -1,    71,    -1,   187,     8,    -1,    -1,
      11,    -1,    -1,    -1,    -1,   757,    -1,    -1,    -1,   761,
     762,    -1,   325,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    -1,    -1,  1864,  2242,    -1,    -1,    -1,    40,
      -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    -1,   234,    -1,    -1,   237,    40,    -1,    -1,
    2267,    -1,    -1,  2270,    47,    -1,    -1,   248,    -1,    -1,
      71,    -1,   139,   376,    -1,    -1,    -1,  1907,  1908,    -1,
      -1,    -1,  1912,  1913,    -1,    -1,    -1,  1917,    71,    -1,
    1920,  1921,    -1,    -1,    -1,  1925,    -1,    -1,   279,   402,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   180,    -1,    -1,    -1,  1947,   185,    -1,
      -1,  1951,    -1,   426,    -1,   428,   429,    -1,    -1,    -1,
      -1,    -1,    -1,  1963,    -1,    -1,    -1,     0,   139,  2018,
      -1,  1971,   323,    -1,  2023,    -1,    -1,    -1,  1978,    -1,
      -1,    -1,    -1,   220,    -1,    -1,   139,    -1,  2037,  2038,
      -1,   464,   343,    -1,   467,   468,   469,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   919,    -1,   180,
      -1,  2011,   363,    -1,   185,    -1,    -1,    -1,    -1,    -1,
    2020,    -1,    -1,    -1,    -1,    -1,    -1,   180,   940,  2029,
     267,   943,   185,    -1,   946,    -1,  2036,    -1,    -1,    -1,
      -1,   953,   954,    -1,    -1,    -1,    -1,    -1,    -1,   220,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    90,   970,   971,
     972,   973,    -1,    -1,    -1,    -1,   978,   220,    -1,    -1,
     982,    -1,    -1,    -1,   986,    -1,    -1,   989,   990,   991,
     992,   993,   994,   995,   996,   997,    -1,    -1,  1000,  2089,
      -1,    -1,  2092,    -1,    -1,  1007,   267,  1009,    -1,  2476,
      -1,  2101,  2102,    -1,    -1,  2105,    -1,    -1,   141,    -1,
      -1,    -1,    -1,    -1,   267,    -1,    -1,   354,  2118,    -1,
     153,    -1,    -1,  2123,    -1,   158,    -1,    -1,  2128,    -1,
     163,  2131,  2132,    -1,    -1,    -1,    -1,    -1,   171,  2139,
    2140,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2198,
    2199,    -1,    -1,    -1,    -1,  2155,    -1,  2157,  2207,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,   202,
      15,    16,    17,    -1,    -1,    -1,    -1,  2177,    -1,    -1,
      -1,    -1,    -1,   354,    -1,    -1,    -1,    32,   221,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    20,    -1,
      -1,   354,    47,    -1,    -1,    -1,  1118,  2207,    -1,   696,
    2210,    -1,    -1,   450,    -1,    -1,    -1,    -1,    -1,    -1,
     457,   458,   459,   460,   461,   462,    71,    -1,    -1,   262,
      -1,    -1,   265,  1145,  1146,    -1,    -1,  2237,   271,    -1,
      -1,  2241,  2242,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      72,    -1,    -1,   740,    -1,    -1,    -1,    -1,  2258,    -1,
      -1,    -1,  2262,    -1,    -1,    87,    -1,  2267,    -1,    -1,
    2270,    -1,  2272,    -1,  2323,    -1,    -1,    -1,    -1,   450,
      -1,    -1,     8,    -1,  2284,    11,   457,   458,   459,   460,
     461,   462,   325,    -1,  2294,    -1,    -1,   450,  2298,  2299,
      -1,    -1,    -1,    -1,   457,   458,   459,   460,   461,   462,
      -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,   140,    -1,
      -1,    47,    -1,  2323,    -1,    -1,   148,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   180,    -1,    -1,   160,    -1,
     185,    -1,    -1,   376,    -1,    71,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1268,  1269,  1270,    -1,
      -1,   206,   207,    -1,    -1,  2365,   188,    -1,  2368,   402,
      -1,    -1,    -1,    -1,    -1,   220,    -1,  2377,    -1,  1291,
      -1,    -1,   869,    -1,  1296,  2385,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   426,  2394,   428,   429,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   250,    -1,    -1,   253,    -1,
      -1,   233,    -1,   139,  2414,    -1,    -1,    -1,    -1,  2419,
      -1,  2421,   267,    -1,  1336,   270,    -1,  2476,    -1,    -1,
     917,   464,    -1,    -1,   467,   468,   469,    -1,    -1,  1351,
      -1,  1353,  1354,    -1,    -1,    -1,    -1,  1359,    -1,  2449,
    2450,    -1,   939,    -1,   180,    -1,    -1,   944,    -1,   185,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   289,   955,   956,
     957,    -1,   959,    -1,    -1,  2475,  2476,    -1,  1390,    -1,
    1392,   303,  1394,     8,    -1,    -1,    11,    -1,    -1,    -1,
      15,    16,    17,    -1,   220,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2504,    -1,  2506,    32,    -1,   354,
      -1,    -1,   334,    -1,   336,  1427,  1428,  1429,  1005,    -1,
      -1,   343,    -1,     3,   346,    -1,  1438,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,  2538,  1026,
      -1,   267,    -1,   365,    -1,    -1,    -1,    -1,  1460,    -1,
      -1,    -1,    32,    -1,   376,    35,    -1,    -1,    -1,    -1,
      40,   383,    -1,  1475,    -1,    -1,    -1,    47,  2568,  2569,
     392,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,  1493,    11,    -1,    -1,    -1,    15,    16,    17,    -1,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     422,    -1,    -1,    32,    -1,   450,    -1,    -1,   453,   454,
     455,    40,   457,   458,   459,   460,   461,   462,    47,    -1,
      -1,    -1,    -1,    -1,    -1,   470,    -1,    -1,   354,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,
      17,    -1,    71,    -1,    -1,  1132,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    32,    -1,  1144,    -1,    -1,
       8,    -1,  1149,    11,    -1,    -1,    -1,    15,    16,    17,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   206,    -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1606,    -1,    -1,    -1,    -1,    -1,
     180,    -1,    -1,    -1,  1616,   185,    -1,    -1,  1620,    -1,
      -1,  1623,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   450,    -1,   206,   207,    -1,    -1,
      -1,   457,   458,   459,   460,   461,   462,  1649,  1650,    -1,
     220,    -1,   267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   180,    -1,    -1,    -1,    -1,   185,    -1,  1670,    -1,
      -1,  1673,    -1,  1675,    -1,    -1,    -1,    -1,    -1,    -1,
     250,  1683,    -1,   253,    -1,    -1,    -1,   206,   207,  1691,
    1692,    -1,    -1,    -1,    -1,    -1,    -1,   267,    -1,    -1,
     270,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1294,    -1,  1721,
      -1,    -1,    -1,    -1,    -1,  1727,    -1,    -1,    -1,    -1,
      -1,   250,    -1,    -1,   253,    -1,  1738,    -1,  1315,   206,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,    -1,
      -1,   270,  1754,    -1,    -1,  1332,    -1,  1334,  1335,    -1,
    1337,    -1,  1339,    -1,    -1,    -1,  1343,    -1,   206,    -1,
      -1,    -1,    -1,  1350,    -1,    -1,    -1,    -1,  1355,    -1,
      -1,    -1,    -1,    -1,   354,    -1,    -1,    -1,  1365,  1366,
    1367,  1368,    -1,    -1,    -1,  1372,  1373,    -1,  1375,    -1,
     267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1386,
      -1,    -1,  1389,    -1,    -1,    -1,    -1,    -1,    -1,  1396,
    1397,  1398,  1399,  1400,  1401,  1402,  1403,  1404,  1405,   267,
      -1,    -1,    -1,    -1,    -1,   354,    -1,    -1,   453,   454,
     455,    -1,   457,   458,   459,   460,   461,   462,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1864,    -1,    -1,    -1,  1443,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     450,    -1,    -1,   453,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1907,  1908,    -1,    -1,    -1,
    1912,    -1,    -1,    -1,    -1,  1917,    -1,    -1,  1920,  1921,
      -1,     8,    -1,  1925,    11,    -1,    -1,    -1,    15,    16,
      17,   450,    -1,    -1,   453,   454,   455,    -1,   457,   458,
     459,   460,   461,   462,    -1,    32,    -1,    -1,   467,    -1,
      -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      47,  1963,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1971,
      -1,    -1,     8,    -1,    -1,    11,  1978,    -1,    -1,    15,
      16,    17,    -1,    -1,    71,    -1,   453,   454,   455,    -1,
     457,   458,   459,   460,   461,   462,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    47,  1589,  1590,    -1,   453,   454,   455,  2020,   457,
     458,   459,   460,   461,   462,    -1,    -1,    -1,  1605,    -1,
      -1,    -1,    -1,    -1,  1611,    71,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1626,
    1627,  1628,    -1,  1630,  1631,  1632,  1633,    -1,    -1,  1636,
    1637,  1638,  1639,  1640,  1641,  1642,  1643,  1644,  1645,  1646,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1666,
      -1,    -1,    -1,   180,  1671,  1672,    -1,    -1,   185,  2101,
    2102,    -1,    -1,  2105,    -1,    -1,    -1,    -1,  1685,  1686,
    1687,  1688,    -1,  1690,    -1,    -1,    -1,    -1,    -1,   206,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   220,    -1,    -1,    -1,  2139,  2140,    -1,
      -1,    -1,    -1,    -1,   180,    -1,    -1,    -1,    -1,   185,
      -1,    -1,    -1,    -1,    -1,  2157,  1733,    -1,    -1,    -1,
      -1,    -1,    -1,   250,    -1,    -1,   253,    -1,    -1,    -1,
     206,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     267,    -1,    -1,   270,   220,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1771,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   250,    -1,    -1,   253,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   267,    -1,    -1,   270,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2258,    -1,    -1,    -1,
      -1,    -1,    -1,    32,    -1,    -1,    -1,   354,    -1,    -1,
    2272,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,
      -1,    -1,  2284,    -1,    -1,    -1,    -1,    -1,  1865,    -1,
      -1,    -1,  1869,  1870,    -1,  1872,    -1,  2299,  1875,  1876,
    1877,  1878,    71,    -1,    -1,  1882,  1883,  1884,  1885,  1886,
    1887,  1888,  1889,  1890,  1891,  1892,  1893,    -1,   354,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1906,
      -1,    -1,  1909,    -1,  1911,    -1,    -1,    -1,  1915,    -1,
      -1,  1918,  1919,    -1,    -1,  1922,  1923,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   450,    -1,    -1,   453,   454,   455,    -1,
     457,   458,   459,   460,   461,   462,    22,    -1,    -1,    -1,
     467,    -1,    28,  2385,    -1,    -1,    -1,    -1,  1965,    35,
      -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
    1977,    -1,    -1,    15,    16,    17,    -1,    -1,    54,    -1,
      -1,   180,  2414,  1990,   450,    -1,   185,   453,   454,   455,
      32,   457,   458,   459,   460,   461,   462,    -1,    40,    -1,
      -1,   467,    -1,    -1,    -1,    47,    -1,   206,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2449,  2450,    -1,
      -1,   220,    -1,    -1,    -1,    -1,    -1,   103,    -1,    71,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,   250,    -1,    -1,   253,   131,    -1,    -1,    -1,    -1,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,   267,    40,
      -1,   270,    -1,    -1,  2506,    -1,    47,    -1,  2085,    -1,
      -1,    -1,  2089,    -1,    -1,    -1,    -1,    -1,  2095,  2096,
    2097,    -1,    -1,  2100,    -1,    -1,  2103,  2104,    -1,    -1,
      71,  2108,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2568,  2569,   180,    -1,
      -1,    -1,    -1,   185,    -1,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   354,    -1,    -1,   234,    -1,
      -1,   237,    -1,    -1,   206,   207,    -1,    -1,    -1,    -1,
    2177,    -1,   248,    -1,    -1,    -1,    -1,    -1,   220,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2195,    -1,
      -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   279,    -1,    -1,    -1,    -1,   250,   180,
      -1,   253,    -1,    -1,   185,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   267,    -1,    -1,   270,    -1,
      -1,    -1,    -1,  2240,  2241,   206,   207,    -1,  2245,  2246,
    2247,    -1,   318,    -1,    -1,    -1,   322,   323,    -1,   220,
      -1,   450,    -1,    -1,   453,   454,   455,    -1,   457,   458,
     459,   460,   461,   462,    -1,    -1,    -1,   343,   467,  2276,
    2277,    -1,    -1,   349,    -1,    -1,    -1,    -1,    -1,   250,
      -1,    -1,   253,  2290,    -1,    -1,    -1,   363,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2302,   267,    -1,    -1,   270,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   354,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   413,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2362,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2373,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   354,    -1,  2392,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2406,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,    -1,   457,   458,   459,   460,   461,
     462,    -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   410,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2483,    -1,    -1,   450,
      -1,    -1,   453,   454,   455,    -1,   457,   458,   459,   460,
     461,   462,    -1,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,  2509,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,  2580,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,   125,   126,    -1,   128,   129,
     130,   131,   132,    -1,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,    -1,   154,   155,   156,   157,    -1,   159,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,    -1,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,   219,
     220,    -1,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,    -1,   263,   264,    -1,    -1,   267,   268,   269,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    -1,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,   409,
      -1,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,    -1,    -1,    -1,    -1,    -1,    -1,   457,   458,   459,
      -1,    -1,    -1,    -1,    -1,    -1,   466,   467,    -1,    -1,
      -1,   471,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    72,    -1,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,   125,    -1,    -1,   128,   129,   130,
     131,   132,    -1,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,   155,   156,   157,    -1,   159,    -1,
     161,   162,    -1,   164,   165,   166,   167,   168,    -1,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,   194,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,    -1,    -1,   217,   218,   219,   220,
      -1,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,    -1,   267,   268,   269,    -1,
      -1,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,    -1,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,    -1,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
      -1,   452,    -1,    -1,    -1,    -1,   457,   458,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   466,   467,    -1,    -1,    -1,
     471,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      72,    -1,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
     132,    -1,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,    -1,   154,   155,   156,   157,    -1,   159,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,    -1,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,   219,   220,    -1,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
      -1,   263,   264,    -1,    -1,   267,   268,   269,    -1,    -1,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,    -1,   288,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,   409,    -1,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,    -1,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,    -1,
     452,    -1,    -1,    -1,    -1,   457,   458,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   466,    -1,    -1,    -1,    -1,   471,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
      -1,   154,   155,   156,   157,    -1,   159,    -1,   161,   162,
     163,   164,   165,   166,   167,   168,    -1,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,   216,   217,   218,   219,   220,    -1,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,    -1,
     263,   264,    -1,    -1,   267,   268,   269,    -1,    -1,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,    -1,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
      -1,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,    -1,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,    -1,    -1,
      -1,    -1,    -1,    -1,   457,   458,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   466,    -1,    -1,    -1,    -1,   471,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,    -1,
     154,   155,   156,   157,    -1,   159,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,    -1,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
     194,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,   219,   220,    -1,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,    -1,   263,
     264,    -1,    -1,   267,   268,   269,    -1,    -1,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,    -1,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,   409,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,    -1,    -1,    -1,
      -1,    -1,    -1,   457,   458,   459,    -1,    -1,    -1,    -1,
      -1,    -1,   466,    -1,    -1,    -1,    -1,   471,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
     125,    -1,    -1,   128,   129,   130,   131,   132,    -1,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,    -1,   154,
     155,   156,   157,    -1,   159,    -1,   161,   162,    -1,   164,
     165,   166,   167,   168,    -1,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,    -1,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,    -1,   263,   264,
      -1,    -1,   267,   268,   269,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,    -1,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,    -1,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,    -1,    -1,    -1,    -1,
      -1,    -1,   457,   458,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   466,    -1,    -1,    -1,    -1,   471,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    72,    -1,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,   125,
      -1,    -1,   128,   129,   130,   131,   132,    -1,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,    -1,   154,   155,
     156,   157,    -1,   159,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,    -1,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,   219,   220,    -1,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,    -1,   263,   264,    -1,
      -1,   267,   268,   269,    -1,    -1,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,    -1,   288,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,    -1,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,    -1,    -1,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,    -1,   404,   405,
     406,   407,   408,   409,    -1,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,    -1,    -1,    -1,    -1,    -1,
      -1,   457,   458,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     466,   467,    -1,    -1,    -1,   471,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    72,    -1,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,   125,    -1,
      -1,   128,   129,   130,   131,   132,    -1,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,    -1,   154,   155,   156,
     157,    -1,   159,    -1,   161,   162,   163,   164,   165,   166,
     167,   168,    -1,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,   219,   220,    -1,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,    -1,    -1,
     267,   268,   269,    -1,    -1,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
      -1,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    -1,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,    -1,    -1,    -1,    -1,    -1,    -1,
     457,   458,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,
      -1,    -1,    -1,    -1,   471,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,   125,    -1,    -1,
     128,   129,   130,   131,   132,    -1,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,    -1,   154,   155,   156,   157,
      -1,   159,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,    -1,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,    -1,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,    -1,   263,   264,    -1,    -1,   267,
     268,   269,    -1,    -1,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,    -1,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,   409,    -1,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,    -1,    -1,    -1,    -1,    -1,    -1,   457,
     458,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,    -1,
      -1,    -1,    -1,   471,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    72,    -1,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,   125,    -1,    -1,   128,
     129,   130,   131,   132,    -1,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,    -1,   154,   155,   156,   157,    -1,
     159,    -1,   161,   162,    -1,   164,   165,   166,   167,   168,
      -1,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,   194,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
     219,   220,    -1,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,    -1,   267,   268,
     269,    -1,    -1,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,    -1,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,    -1,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,    -1,   404,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,    -1,    -1,    -1,    -1,    -1,    -1,   457,   458,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,    -1,    -1,
      -1,    -1,   471,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
     130,   131,   132,    -1,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,    -1,   154,   155,   156,   157,    -1,   159,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,    -1,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,   219,
     220,    -1,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,    -1,   263,   264,    -1,    -1,   267,   268,   269,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    -1,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,   409,
      -1,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,    -1,    -1,    -1,    -1,    -1,    -1,   457,   458,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   466,    -1,    -1,    -1,
      -1,   471,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    72,    -1,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,   125,    -1,    -1,   128,   129,   130,
     131,   132,    -1,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,    -1,   154,   155,   156,   157,    -1,   159,    -1,
     161,   162,    -1,   164,   165,   166,   167,   168,    -1,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,   194,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,    -1,    -1,   217,   218,   219,   220,
      -1,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,    -1,   267,   268,   269,    -1,
      -1,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,    -1,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,    -1,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
      -1,    -1,    -1,    -1,    -1,    -1,   457,   458,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   466,    -1,    -1,    -1,    -1,
     471,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      72,    -1,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
     132,    -1,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,    -1,   154,   155,   156,   157,    -1,   159,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,    -1,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,   219,   220,    -1,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
      -1,   263,   264,    -1,    -1,   267,   268,   269,    -1,    -1,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,    -1,   288,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,   409,    -1,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,    -1,
      -1,    -1,    -1,    -1,    -1,   457,   458,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   466,    -1,    -1,    -1,    -1,   471,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
      -1,   154,   155,   156,   157,    -1,   159,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,    -1,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,    -1,   217,   218,   219,   220,    -1,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,    -1,
     263,   264,    -1,    -1,   267,   268,   269,    -1,    -1,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,    -1,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
      -1,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,    -1,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,    -1,    -1,
      -1,    -1,    -1,    -1,   457,   458,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   466,    -1,    -1,    -1,    -1,   471,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,    -1,
     154,   155,   156,   157,    -1,   159,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,    -1,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
     194,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,   219,   220,    -1,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,    -1,   263,
     264,    -1,    -1,   267,   268,   269,    -1,    -1,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,    -1,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,   409,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,    -1,    -1,    -1,
      -1,    -1,    -1,   457,   458,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   466,    -1,    -1,    -1,    -1,   471,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
     125,    -1,    -1,   128,   129,   130,   131,   132,    -1,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,    -1,   154,
     155,   156,   157,    -1,   159,    -1,   161,   162,    -1,   164,
     165,   166,   167,   168,    -1,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,    -1,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,    -1,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,    -1,   263,   264,
      -1,    -1,   267,   268,   269,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,    -1,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,    -1,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   457,   458,    -1,    -1,     3,     4,     5,     6,
       7,   466,     9,    10,    -1,    -1,   471,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    72,    -1,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,   125,    -1,
      -1,   128,   129,   130,   131,   132,    -1,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,    -1,   154,   155,   156,
     157,    -1,   159,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,    -1,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,   219,   220,    -1,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,    -1,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,    -1,    -1,
     267,   268,   269,    -1,    -1,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
      -1,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    -1,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     457,   458,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,
      -1,    -1,    -1,    -1,   471,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,   125,    -1,    -1,
     128,   129,   130,   131,   132,    -1,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,    -1,   154,   155,   156,   157,
      -1,   159,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,    -1,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,    -1,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,    -1,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,    -1,   263,   264,    -1,    -1,   267,
     268,   269,    -1,    -1,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,    -1,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,   409,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   457,
     458,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,    -1,
      -1,    -1,    -1,   471,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    72,    -1,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,   125,    -1,    -1,   128,
     129,   130,   131,   132,    -1,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,    -1,   154,   155,   156,   157,    -1,
     159,    -1,   161,   162,    -1,   164,   165,   166,   167,   168,
      -1,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,   194,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,
     209,   210,   211,   212,   213,   214,    -1,    -1,   217,   218,
     219,   220,    -1,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,    -1,   251,   252,    -1,   254,   255,   256,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,    -1,   267,   268,
     269,    -1,    -1,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,    -1,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,    -1,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,    -1,    -1,   404,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,    -1,    -1,    -1,    -1,    -1,    -1,   457,   458,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,    -1,    -1,
      -1,    -1,   471,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    -1,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
     130,   131,   132,    -1,   134,   135,   136,    -1,   138,    -1,
     140,    -1,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,    -1,   154,   155,   156,   157,    -1,   159,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,    -1,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
      -1,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,   209,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,   219,
      -1,    -1,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
      -1,   251,   252,    -1,   254,   255,   256,   257,   258,   259,
     260,   261,    -1,   263,   264,    -1,    -1,   267,   268,   269,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    -1,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,   409,
      -1,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   457,   458,     3,
      -1,    -1,    -1,    -1,    -1,    -1,   466,    -1,    -1,    -1,
      -1,   471,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    35,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,    -1,   152,    -1,
     154,   155,   156,   157,    -1,   159,    -1,   161,    -1,    -1,
     164,   165,   166,   167,   168,    -1,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,    -1,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
     194,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,   208,   209,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,   219,    -1,    -1,   222,   223,
     224,    -1,    -1,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,    -1,   251,   252,    -1,
     254,    -1,   256,   257,   258,   259,   260,   261,    -1,   263,
     264,    -1,    -1,   267,   268,   269,    -1,    -1,   272,   273,
      -1,   275,    -1,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,    -1,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,    -1,   377,    -1,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,    -1,   389,   390,   391,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,    -1,    -1,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   467,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,    -1,   152,    -1,
     154,   155,   156,   157,    -1,   159,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,    -1,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
     194,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,    -1,   217,   218,   219,   220,    -1,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,    -1,   251,   252,   253,
     254,    -1,   256,   257,   258,   259,   260,   261,    -1,   263,
     264,    -1,   266,   267,   268,   269,    -1,    -1,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,    -1,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,    -1,   389,   390,   391,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,   409,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,    -1,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,    -1,    -1,   452,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   466,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,    -1,   152,    -1,
     154,   155,   156,   157,    -1,   159,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,    -1,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
     194,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,    -1,   217,   218,   219,   220,    -1,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,    -1,   251,   252,   253,
     254,    -1,   256,   257,   258,   259,   260,   261,    -1,   263,
     264,    -1,   266,   267,   268,   269,    -1,    -1,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,    -1,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,    -1,   389,   390,   391,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,   409,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,    -1,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   466,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
     125,    -1,    -1,   128,   129,   130,   131,   132,    -1,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
     145,   146,   147,   148,   149,   150,    -1,   152,    -1,   154,
     155,   156,   157,    -1,   159,    -1,   161,   162,    -1,   164,
     165,   166,   167,   168,    -1,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,    -1,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,    -1,   251,   252,   253,   254,
      -1,   256,   257,   258,   259,   260,   261,    -1,   263,   264,
      -1,    -1,   267,   268,   269,    -1,    -1,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,    -1,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,    -1,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,    -1,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,    -1,    -1,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   466,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    72,    -1,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,   125,
      -1,    -1,   128,   129,   130,   131,   132,    -1,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,   145,
     146,   147,   148,   149,   150,    -1,   152,    -1,   154,   155,
     156,   157,    -1,   159,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,    -1,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,   219,   220,    -1,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,    -1,   251,   252,   253,   254,    -1,
     256,   257,   258,   259,   260,   261,    -1,   263,   264,    -1,
      -1,   267,   268,   269,    -1,    -1,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,    -1,   288,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,    -1,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,    -1,    -1,   389,   390,   391,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,    -1,   404,   405,
     406,   407,   408,   409,    -1,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,    -1,    -1,     3,     4,     5,    -1,
      -1,    -1,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     466,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    72,    -1,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,   125,    -1,
      -1,   128,   129,   130,   131,   132,    -1,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,    -1,   154,   155,   156,
     157,    -1,   159,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,    -1,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,   219,   220,    -1,   222,   223,   224,    -1,    -1,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,    -1,   251,   252,   253,   254,    -1,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,   265,    -1,
     267,   268,   269,    -1,    -1,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
      -1,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    -1,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,    -1,    -1,     3,    -1,    -1,    -1,    -1,
     457,   458,   459,    -1,    -1,    -1,    -1,    -1,    -1,   466,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    72,    -1,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,   125,    -1,    -1,
     128,   129,   130,   131,   132,    -1,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,   145,   146,   147,
     148,   149,   150,    -1,   152,    -1,   154,   155,   156,   157,
      -1,   159,    -1,   161,   162,    -1,   164,   165,   166,   167,
     168,    -1,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,   194,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,    -1,    -1,   217,
     218,   219,   220,    -1,   222,   223,   224,    -1,    -1,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,    -1,   251,   252,   253,   254,    -1,   256,   257,
     258,   259,   260,   261,    -1,   263,   264,    -1,    -1,   267,
     268,   269,    -1,    -1,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,    -1,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
      -1,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,    -1,    -1,   427,
      -1,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,    -1,    -1,   452,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,   125,    -1,    -1,
     128,   129,   130,   131,   132,    -1,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,   145,   146,   147,
     148,   149,   150,    -1,   152,    -1,   154,   155,   156,   157,
      -1,   159,    -1,   161,    -1,    -1,    -1,   165,   166,   167,
     168,    -1,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
      -1,   219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,    -1,   245,   246,   247,
     248,   249,    -1,   251,   252,    -1,   254,    -1,   256,   257,
     258,   259,   260,   261,    -1,   263,   264,    -1,    -1,   267,
     268,   269,    -1,    -1,   272,   273,    -1,   275,    -1,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,    -1,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
      -1,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
      -1,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
      -1,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,    -1,    -1,   427,
      -1,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,    -1,    -1,   452,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,   125,    -1,    -1,
     128,   129,   130,   131,   132,    -1,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,   145,   146,   147,
     148,   149,   150,    -1,   152,    -1,   154,   155,   156,   157,
      -1,   159,    -1,   161,    -1,    -1,    -1,   165,   166,   167,
     168,    -1,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
      -1,   219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,    -1,   245,   246,   247,
     248,   249,    -1,   251,   252,    -1,   254,    -1,   256,   257,
     258,   259,   260,   261,    -1,   263,   264,    -1,    -1,   267,
     268,   269,    -1,    -1,   272,   273,    -1,   275,    -1,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,    -1,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
      -1,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
      -1,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
      -1,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,    -1,    -1,   427,
      -1,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,    -1,    -1,   452,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,   125,    -1,    -1,
     128,   129,   130,   131,   132,    -1,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,   145,   146,   147,
     148,   149,   150,    -1,   152,    -1,   154,   155,   156,   157,
      -1,   159,    -1,   161,    -1,    -1,    -1,   165,   166,   167,
     168,    -1,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
      -1,   219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,    -1,   245,   246,   247,
     248,   249,    -1,   251,   252,    -1,   254,    -1,   256,   257,
     258,   259,   260,   261,    -1,   263,   264,    -1,    -1,   267,
     268,   269,    -1,    -1,   272,   273,    -1,   275,    -1,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,    -1,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
      -1,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,   374,   375,    -1,   377,
      -1,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
      -1,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,    -1,    -1,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,    -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,   125,    -1,    -1,   128,
     129,   130,   131,   132,    -1,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,   145,   146,   147,   148,
     149,   150,    -1,   152,    -1,   154,   155,   156,   157,    -1,
     159,    -1,   161,    -1,    -1,    -1,   165,   166,   167,   168,
      -1,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,
      -1,   210,   211,   212,   213,   214,    -1,    -1,   217,    -1,
     219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,    -1,   245,   246,   247,   248,
     249,    -1,   251,   252,    -1,   254,    -1,   256,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,    -1,   267,   268,
     269,    -1,    -1,   272,   273,    -1,   275,    -1,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,    -1,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,    -1,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,    -1,   374,   375,    -1,   377,    -1,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,    -1,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,    -1,   404,   405,   406,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,    -1,    -1,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,    -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
     130,   131,   132,    -1,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,   145,   146,   147,   148,   149,
     150,    -1,   152,    -1,   154,   155,   156,   157,    -1,   159,
      -1,   161,    -1,    -1,    -1,   165,   166,   167,   168,    -1,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
      -1,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,
     210,   211,   212,   213,   214,    -1,    -1,   217,    -1,   219,
      -1,    -1,   222,   223,   224,    -1,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,    -1,   245,   246,   247,   248,   249,
      -1,   251,   252,    -1,   254,    -1,   256,   257,   258,   259,
     260,   261,    -1,   263,   264,    -1,    -1,   267,   268,   269,
      -1,    -1,   272,   273,    -1,   275,    -1,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,    -1,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    -1,   374,   375,    -1,   377,    -1,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,    -1,   389,
     390,   391,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
      -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   466,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,   125,    -1,    -1,   128,   129,   130,
     131,   132,    -1,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,   145,   146,   147,   148,   149,   150,
      -1,   152,    -1,   154,   155,   156,   157,    -1,   159,    -1,
     161,    -1,    -1,    -1,   165,   166,   167,   168,    -1,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,
     211,   212,   213,   214,    -1,    -1,   217,    -1,   219,    -1,
      -1,   222,   223,   224,    -1,    -1,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,    -1,   245,   246,   247,   248,   249,    -1,
     251,   252,    -1,   254,    -1,   256,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,    -1,   267,   268,   269,    -1,
      -1,   272,   273,    -1,   275,    -1,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,    -1,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,    -1,   374,   375,    -1,   377,    -1,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,    -1,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,    -1,
      -1,    -1,    -1,    -1,     3,     4,     5,    -1,    -1,     8,
       9,    -1,    -1,    -1,    -1,   466,    15,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    -1,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,    -1,   147,   148,
     149,    -1,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,    -1,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,    -1,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,   291,   292,    -1,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,    -1,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,    -1,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,    -1,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,    -1,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   447,   448,
     449,    -1,     3,    -1,   453,   454,   455,     8,   457,   458,
     459,   460,   461,   462,    15,    16,    17,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,   125,    -1,    -1,   128,   129,   130,
     131,   132,    -1,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,   145,   146,   147,   148,   149,   150,
      -1,   152,    -1,   154,   155,   156,   157,    -1,   159,    -1,
     161,    -1,    -1,    -1,   165,   166,   167,   168,    -1,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,
     211,   212,   213,   214,    -1,    -1,   217,    -1,   219,    -1,
      -1,   222,   223,   224,    -1,    -1,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,    -1,   245,   246,   247,   248,   249,    -1,
     251,   252,    -1,   254,    -1,   256,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,    -1,   267,   268,   269,    -1,
      -1,   272,   273,    -1,   275,    -1,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,    -1,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,    -1,   374,   375,    -1,   377,    -1,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,    -1,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,    -1,
      -1,    -1,   453,   454,   455,    -1,   457,   458,   459,   460,
     461,   462,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    32,    15,    16,    17,
      -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,     8,
      -1,    47,    11,    -1,    32,    -1,    15,    16,    17,    -1,
      -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,
      -1,    -1,    -1,    32,    -1,    71,    -1,    -1,    -1,    -1,
      -1,    40,    -1,     8,    -1,    -1,    11,    -1,    47,    -1,
      15,    16,    17,    71,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    32,    15,    16,
      17,    -1,    71,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    47,    -1,    -1,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      47,    -1,     8,    -1,    -1,    11,    71,    -1,    -1,    15,
      16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    71,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    47,    -1,    -1,   180,    -1,    -1,    -1,    -1,   185,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   180,    -1,    -1,    71,    -1,   185,    -1,    -1,
     206,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   180,    -1,    -1,   220,    -1,   185,    -1,   206,   207,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   220,    -1,    -1,    -1,    -1,   206,   207,    -1,
      -1,    -1,    -1,    -1,   250,   180,    -1,   253,    -1,    -1,
     185,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   267,   250,   180,   270,   253,    -1,    -1,   185,    -1,
      -1,   206,   207,    -1,    -1,    -1,    -1,    -1,    -1,   267,
      -1,   250,   270,    -1,   253,   220,    -1,    -1,    -1,   206,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,    -1,
      -1,   270,    -1,   220,   180,    -1,    -1,    -1,    -1,   185,
      -1,    -1,    -1,    -1,    -1,   250,    -1,    -1,   253,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     206,   207,   267,   250,    -1,   270,   253,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   220,    -1,    -1,    -1,   354,    -1,
     267,    -1,    -1,   270,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   354,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   250,    -1,    -1,   253,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   354,    -1,    -1,    -1,    -1,
      -1,   267,    -1,    -1,   270,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   354,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   354,    -1,    -1,
      -1,    -1,    -1,    -1,   450,    -1,    -1,   453,   454,   455,
      -1,   457,   458,   459,   460,   461,   462,    -1,    -1,    -1,
      -1,   467,   450,    -1,    -1,   453,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,    -1,    -1,    -1,   354,   467,
      -1,   450,    -1,    -1,   453,   454,   455,    -1,   457,   458,
     459,   460,   461,   462,    -1,    -1,    -1,    -1,   467,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   450,    -1,    -1,   453,   454,
     455,    -1,   457,   458,   459,   460,   461,   462,    -1,    -1,
      -1,    -1,   467,   450,    -1,    -1,   453,   454,   455,    -1,
     457,   458,   459,   460,   461,   462,    -1,    -1,    -1,    -1,
     467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   450,     3,    -1,   453,   454,   455,
      -1,   457,   458,   459,   460,   461,   462,    -1,    -1,   465,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   459,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,   125,    -1,    -1,   128,   129,   130,
     131,   132,    -1,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,   145,   146,   147,   148,   149,   150,
      -1,   152,    -1,   154,   155,   156,   157,    -1,   159,    -1,
     161,    -1,    -1,    -1,   165,   166,   167,   168,    -1,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,
     211,   212,   213,   214,    -1,    -1,   217,    -1,   219,    -1,
      -1,   222,   223,   224,    -1,    -1,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,    -1,   245,   246,   247,   248,   249,    -1,
     251,   252,    -1,   254,    -1,   256,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,    -1,   267,   268,   269,    -1,
      -1,   272,   273,    -1,   275,    -1,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,    -1,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,    -1,   374,   375,    -1,   377,    -1,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,    -1,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,     3,
       4,     5,    -1,    -1,    -1,     9,    -1,    -1,   459,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    72,    -1,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,    -1,
     154,   155,   156,   157,    -1,   159,    -1,   161,   162,    -1,
     164,   165,   166,   167,   168,    -1,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
     194,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,    -1,    -1,   217,   218,   219,   220,    -1,   222,   223,
     224,    -1,    -1,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,    -1,   251,   252,   253,
     254,    -1,   256,   257,   258,   259,   260,   261,    -1,   263,
     264,   265,    -1,   267,   268,   269,    -1,    -1,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,    -1,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,     3,     4,     5,    -1,
      -1,    -1,     9,   457,   458,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    72,    -1,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,   125,    -1,
      -1,   128,   129,   130,   131,   132,    -1,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,    -1,   154,   155,   156,
     157,    -1,   159,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,    -1,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,   219,   220,    -1,   222,   223,   224,    -1,    -1,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,    -1,   251,   252,   253,   254,    -1,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,   265,    -1,
     267,   268,   269,    -1,    -1,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
      -1,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    -1,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,     3,     4,     5,    -1,    -1,    -1,     9,
     457,   458,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
     130,   131,   132,    -1,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,    -1,   154,   155,   156,   157,    -1,   159,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,    -1,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,   219,
     220,    -1,   222,   223,   224,    -1,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
      -1,   251,   252,   253,   254,    -1,   256,   257,   258,   259,
     260,   261,    -1,   263,   264,   265,    -1,   267,   268,   269,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    -1,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
      -1,    -1,     8,    -1,    -1,    11,    -1,   457,   458,    15,
      16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    32,    15,    16,    17,
      -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,     8,
      -1,    47,    11,    -1,    32,    -1,    15,    16,    17,    -1,
      -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,
      -1,    -1,    -1,    32,    -1,    71,    35,    -1,    -1,    -1,
      -1,    40,    -1,     8,    -1,    -1,    11,    -1,    47,    -1,
      15,    16,    17,    71,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    32,    15,    16,
      17,    -1,    71,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    47,    -1,    -1,    32,    -1,    -1,    35,    -1,
      -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   158,    -1,    71,    -1,    -1,   163,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   157,
      -1,    -1,    -1,    -1,   180,    -1,    -1,    -1,    -1,   185,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   180,    -1,    -1,    -1,    -1,   185,    -1,    -1,
     206,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   180,    -1,    -1,   220,    -1,   185,    -1,   206,   207,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   220,    -1,    -1,    -1,    -1,   206,   207,    -1,
      -1,    -1,    -1,    -1,   250,   180,    -1,   253,    -1,    -1,
     185,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   267,   250,   180,   270,   253,    -1,    -1,   185,    -1,
      -1,   206,   207,    -1,    -1,    -1,    -1,    -1,    -1,   267,
      -1,   250,   270,    -1,   253,   220,    -1,    -1,    -1,   206,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   267,    -1,
      -1,   270,    -1,   220,   292,     8,    -1,    -1,    11,    -1,
      -1,    -1,    15,    16,    17,   250,    -1,    -1,   253,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,
      -1,    -1,   267,   250,    -1,   270,   253,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,   354,    -1,
     267,    -1,   287,   270,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,   354,    -1,    71,    15,
      16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   354,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    -1,     8,    -1,    -1,    11,
      -1,    47,    -1,    15,    16,    17,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   354,
      32,    -1,    -1,    -1,    -1,    71,    -1,    -1,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    47,    -1,   354,    -1,    -1,
      -1,    -1,    -1,    -1,   450,    -1,    -1,   453,   454,   455,
      -1,   457,   458,   459,   460,   461,   462,    -1,    -1,    71,
     163,    -1,   450,    -1,    -1,   453,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,    -1,    -1,   180,    -1,    -1,
      -1,   450,   185,    -1,   453,   454,   455,    -1,   457,   458,
     459,   460,   461,   462,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   206,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   450,    -1,   220,   453,   454,
     455,    -1,   457,   458,   459,   460,   461,   462,    -1,    -1,
      -1,    -1,    -1,   450,   180,    -1,   453,   454,   455,   185,
     457,   458,   459,   460,   461,   462,    -1,   250,    -1,    -1,
     253,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     206,   207,    -1,    -1,   267,    -1,    -1,   270,   180,    -1,
      -1,    -1,    -1,   185,   220,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   206,   207,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   250,    -1,    -1,   253,   220,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       8,   267,    -1,    11,   270,    -1,    -1,    15,    16,    17,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   250,    -1,
      -1,   253,    -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,   354,    40,    -1,     8,   267,    -1,    11,   270,    47,
      22,    15,    16,    17,    -1,    -1,    28,    -1,    -1,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    71,    -1,    11,    40,    -1,    -1,    15,
      16,    17,    54,    47,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   354,    -1,
      -1,    -1,    -1,    -1,    40,    -1,    -1,    71,    -1,    -1,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,    -1,
      -1,   103,   354,    -1,    -1,    71,    -1,   450,    -1,    -1,
     453,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   131,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   180,    -1,    -1,    -1,    -1,   185,    -1,    -1,
      -1,    -1,    -1,    -1,   450,    -1,    -1,   453,   454,   455,
      -1,   457,   458,   459,   460,   461,   462,    -1,   206,   207,
      -1,    -1,    -1,    -1,    -1,   187,   180,    -1,    -1,    -1,
      -1,   185,   220,    -1,    -1,    -1,    -1,    -1,   450,    -1,
      -1,   453,   454,   455,    -1,   457,   458,   459,   460,   461,
     462,    -1,   206,   207,   180,    -1,    -1,    -1,    -1,   185,
      -1,    -1,   250,    -1,    -1,   253,   220,    -1,    -1,    -1,
      -1,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,   267,
     206,   207,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   220,    -1,   250,    -1,    -1,   253,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,
      -1,    -1,    -1,   267,    -1,    -1,    -1,   279,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   253,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   318,    -1,    -1,    -1,
     322,   323,    -1,    -1,    -1,    -1,   354,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   343,    -1,    -1,    -1,    -1,    -1,   349,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     354,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   354,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   413,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   450,    -1,    -1,   453,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   450,    -1,    -1,   453,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     3,    -1,   450,    -1,    -1,   453,   454,   455,
      -1,   457,   458,   459,   460,   461,   462,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    72,    -1,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,   125,    -1,
      -1,   128,   129,   130,   131,   132,    -1,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,   145,   146,
     147,   148,   149,   150,    -1,   152,    -1,   154,   155,   156,
     157,    -1,   159,    -1,   161,   162,    -1,   164,   165,   166,
     167,   168,    -1,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,   194,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,    -1,    -1,
     217,   218,   219,   220,    -1,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,    -1,   251,   252,   253,   254,    -1,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,    -1,    -1,
     267,   268,   269,    -1,    -1,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
      -1,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    -1,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,    -1,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,    -1,    -1,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    72,    -1,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
     130,   131,   132,    -1,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,    -1,   154,   155,   156,   157,    -1,   159,
      -1,   161,   162,    -1,   164,   165,   166,   167,   168,    -1,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,   194,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,    -1,    -1,   217,   218,   219,
     220,    -1,   222,   223,   224,    -1,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
      -1,   251,   252,   253,   254,    -1,   256,   257,   258,   259,
     260,   261,    -1,   263,   264,   265,    -1,   267,   268,   269,
      -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    -1,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    30,    31,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,    -1,   152,
      -1,   154,   155,   156,   157,    -1,   159,    -1,   161,   162,
      -1,   164,   165,   166,   167,   168,    -1,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,   194,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,    -1,    -1,   217,   218,   219,   220,    -1,   222,
     223,   224,    -1,    -1,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,    -1,   251,   252,
     253,   254,    -1,   256,   257,   258,   259,   260,   261,    -1,
     263,   264,    -1,    -1,   267,   268,   269,    -1,    -1,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,    -1,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
      -1,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,    -1,    -1,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    72,    -1,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,   125,
      -1,    -1,   128,   129,   130,   131,   132,    -1,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,   145,
     146,   147,   148,   149,   150,    -1,   152,    -1,   154,   155,
     156,   157,    -1,   159,    -1,   161,   162,    -1,   164,   165,
     166,   167,   168,    -1,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,   194,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,    -1,
      -1,   217,   218,   219,   220,    -1,   222,   223,   224,    -1,
      -1,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,    -1,   251,   252,   253,   254,    -1,
     256,   257,   258,   259,   260,   261,    -1,   263,   264,    -1,
      -1,   267,   268,   269,    -1,    -1,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,    -1,   288,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,    -1,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,    -1,    -1,   389,   390,   391,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,    -1,   404,   405,
     406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,    -1,
      -1,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    -1,    -1,    73,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    83,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,   125,    -1,    -1,   128,
     129,   130,   131,   132,    -1,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,   145,   146,   147,   148,
     149,   150,    -1,   152,    -1,   154,   155,   156,   157,    -1,
     159,   160,   161,    -1,    -1,    -1,   165,   166,   167,   168,
      -1,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,
      -1,   210,   211,   212,   213,   214,    -1,    -1,   217,    -1,
     219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,    -1,   245,   246,   247,   248,
     249,    -1,   251,   252,    -1,   254,    -1,   256,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,    -1,   267,   268,
     269,    -1,    -1,   272,   273,    -1,   275,    -1,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,    -1,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,    -1,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,    -1,   374,   375,    -1,   377,    -1,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,    -1,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,   405,   406,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,    -1,    -1,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
     132,    -1,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,   145,   146,   147,   148,   149,   150,    -1,
     152,    -1,   154,   155,   156,   157,    -1,   159,   160,   161,
      -1,    -1,    -1,   165,   166,   167,   168,    -1,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,
     212,   213,   214,    -1,    -1,   217,    -1,   219,   220,    -1,
     222,   223,   224,    -1,    -1,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,    -1,   245,   246,   247,   248,   249,    -1,   251,
     252,    -1,   254,    -1,   256,   257,   258,   259,   260,   261,
      -1,   263,   264,    -1,    -1,   267,   268,   269,    -1,    -1,
     272,   273,    -1,   275,    -1,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,    -1,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,    -1,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,   374,   375,    -1,   377,    -1,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,    -1,   389,   390,   391,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,   405,   406,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    30,    31,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
     125,    -1,    -1,   128,   129,   130,   131,   132,    -1,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
     145,   146,   147,   148,   149,   150,    -1,   152,    -1,   154,
     155,   156,   157,    -1,   159,    -1,   161,    -1,    -1,    -1,
     165,   166,   167,   168,    -1,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,   208,    -1,   210,   211,   212,   213,   214,
      -1,    -1,   217,    -1,   219,    -1,    -1,   222,   223,   224,
      -1,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,    -1,
     245,   246,   247,   248,   249,    -1,   251,   252,    -1,   254,
      -1,   256,   257,   258,   259,   260,   261,    -1,   263,   264,
      -1,    -1,   267,   268,   269,    -1,    -1,   272,   273,    -1,
     275,    -1,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,    -1,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,    -1,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,    -1,   374,
     375,    -1,   377,    -1,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,    -1,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
      -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,   125,    -1,    -1,
     128,   129,   130,   131,   132,    -1,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,   145,   146,   147,
     148,   149,   150,    -1,   152,    -1,   154,   155,   156,   157,
      -1,   159,    -1,   161,    -1,    -1,    -1,   165,   166,   167,
     168,    -1,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
      -1,   219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,    -1,   245,   246,   247,
     248,   249,    -1,   251,   252,    -1,   254,    -1,   256,   257,
     258,   259,   260,   261,    -1,   263,   264,    -1,    -1,   267,
     268,   269,    -1,    -1,   272,   273,    -1,   275,    -1,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,    -1,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
      -1,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,   374,   375,    -1,   377,
      -1,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
      -1,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,    -1,    -1,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,   125,    -1,    -1,   128,   129,   130,
     131,   132,    -1,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,   145,   146,   147,   148,   149,   150,
      -1,   152,    -1,   154,   155,   156,   157,    -1,   159,    -1,
     161,    -1,    -1,    -1,   165,   166,   167,   168,    -1,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,
     211,   212,   213,   214,    -1,    -1,   217,    -1,   219,    -1,
      -1,   222,   223,   224,    -1,    -1,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,    -1,   245,   246,   247,   248,   249,    -1,
     251,   252,    -1,   254,    -1,   256,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,    -1,   267,   268,   269,    -1,
      -1,   272,   273,    -1,   275,    -1,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,    -1,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,    -1,   374,   375,    -1,   377,    -1,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,    -1,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,    -1,   152,    -1,
     154,   155,   156,   157,    -1,   159,    -1,   161,    -1,    -1,
      -1,   165,   166,   167,   168,    -1,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,    -1,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,   213,
     214,    -1,    -1,   217,    -1,   219,    -1,    -1,   222,   223,
     224,    -1,    -1,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
      -1,   245,   246,   247,   248,   249,    -1,   251,   252,    -1,
     254,    -1,   256,   257,   258,   259,   260,   261,    -1,   263,
     264,    -1,   266,   267,   268,   269,    -1,    -1,   272,   273,
      -1,   275,    -1,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,    -1,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,    -1,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,    -1,   377,    -1,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,    -1,   389,   390,   391,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,   125,    -1,
      -1,   128,   129,   130,   131,   132,    -1,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,   145,   146,
     147,   148,   149,   150,    -1,   152,    -1,   154,   155,   156,
     157,    -1,   159,    -1,   161,    -1,    -1,    -1,   165,   166,
     167,   168,    -1,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,    -1,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,    -1,
      -1,   208,    -1,   210,   211,   212,   213,   214,    -1,    -1,
     217,    -1,   219,    -1,    -1,   222,   223,   224,    -1,    -1,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,    -1,   245,   246,
     247,   248,   249,    -1,   251,   252,    -1,   254,    -1,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,    -1,   266,
     267,   268,   269,    -1,    -1,   272,   273,    -1,   275,    -1,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
      -1,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,    -1,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    -1,   374,   375,    -1,
     377,    -1,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,    -1,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,    -1,    -1,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
     130,   131,   132,    -1,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,   145,   146,   147,   148,   149,
     150,    -1,   152,    -1,   154,   155,   156,   157,    -1,   159,
      -1,   161,    -1,    -1,    -1,   165,   166,   167,   168,    -1,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
      -1,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,
     210,   211,   212,   213,   214,    -1,    -1,   217,    -1,   219,
      -1,    -1,   222,   223,   224,    -1,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,    -1,   245,   246,   247,   248,   249,
      -1,   251,   252,    -1,   254,    -1,   256,   257,   258,   259,
     260,   261,    -1,   263,   264,    -1,    -1,   267,   268,   269,
      -1,    -1,   272,   273,    -1,   275,    -1,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,    -1,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    -1,   374,   375,    -1,   377,    -1,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,    -1,   389,
     390,   391,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,    -1,   152,
      -1,   154,   155,   156,   157,    -1,   159,    -1,   161,    -1,
      -1,    -1,   165,   166,   167,   168,    -1,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,
     213,   214,    -1,    -1,   217,    -1,   219,    -1,    -1,   222,
     223,   224,    -1,    -1,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,    -1,   245,   246,   247,   248,   249,    -1,   251,   252,
      -1,   254,    -1,   256,   257,   258,   259,   260,   261,    -1,
     263,   264,    -1,    -1,   267,   268,   269,    -1,    -1,   272,
     273,    -1,   275,    -1,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,    -1,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,    -1,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
      -1,   374,   375,   376,   377,    -1,   379,   380,   381,   382,
     383,    -1,   385,   386,    -1,    -1,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    35,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,   125,
      -1,    -1,   128,   129,   130,   131,   132,    -1,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,   145,
     146,   147,   148,   149,   150,    -1,   152,    -1,   154,   155,
     156,   157,    -1,   159,    -1,   161,    -1,    -1,    -1,   165,
     166,   167,   168,    -1,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,   208,    -1,   210,   211,   212,   213,   214,    -1,
      -1,   217,    -1,   219,    -1,    -1,   222,   223,   224,    -1,
      -1,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,    -1,   245,
     246,   247,   248,   249,    -1,   251,   252,    -1,   254,    -1,
     256,   257,   258,   259,   260,   261,    -1,   263,   264,    -1,
      -1,   267,   268,   269,    -1,    -1,   272,   273,    -1,   275,
      -1,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,    -1,   288,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,    -1,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,    -1,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,    -1,   374,   375,
      -1,   377,    -1,   379,   380,   381,   382,   383,    -1,   385,
     386,    -1,    -1,   389,   390,   391,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,    -1,   404,   405,
     406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,    -1,
      -1,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    35,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,   125,    -1,    -1,   128,
     129,   130,   131,   132,    -1,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,   145,   146,   147,   148,
     149,   150,    -1,   152,    -1,   154,   155,   156,   157,    -1,
     159,    -1,   161,    -1,    -1,    -1,   165,   166,   167,   168,
      -1,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,
      -1,   210,   211,   212,   213,   214,    -1,    -1,   217,    -1,
     219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,    -1,   245,   246,   247,   248,
     249,    -1,   251,   252,    -1,   254,    -1,   256,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,    -1,   267,   268,
     269,    -1,    -1,   272,   273,    -1,   275,    -1,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,    -1,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,    -1,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,    -1,   374,   375,    -1,   377,    -1,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,    -1,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,    -1,   404,   405,   406,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,    -1,    -1,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
     132,    -1,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,   145,   146,   147,   148,   149,   150,    -1,
     152,    -1,   154,   155,   156,   157,    -1,   159,    -1,   161,
      -1,    -1,    -1,   165,   166,   167,   168,    -1,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,
     212,   213,   214,    -1,    -1,   217,    -1,   219,    -1,    -1,
     222,   223,   224,    -1,    -1,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,    -1,   245,   246,   247,   248,   249,    -1,   251,
     252,    -1,   254,    -1,   256,   257,   258,   259,   260,   261,
      -1,   263,   264,    -1,    -1,   267,   268,   269,    -1,    -1,
     272,   273,    -1,   275,    -1,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,    -1,   288,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,    -1,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,   374,   375,    -1,   377,    -1,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,    -1,   389,   390,   391,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
     125,    -1,    -1,   128,   129,   130,   131,   132,    -1,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
     145,   146,   147,   148,   149,   150,    -1,   152,    -1,   154,
     155,   156,   157,    -1,   159,    -1,   161,    -1,    -1,    -1,
     165,   166,   167,   168,    -1,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,   208,    -1,   210,   211,   212,   213,   214,
      -1,    -1,   217,    -1,   219,    -1,    -1,   222,   223,   224,
      -1,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,    -1,
     245,   246,   247,   248,   249,    -1,   251,   252,    -1,   254,
      -1,   256,   257,   258,   259,   260,   261,    -1,   263,   264,
      -1,    -1,   267,   268,   269,    -1,    -1,   272,   273,    -1,
     275,    -1,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,    -1,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,    -1,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,    -1,   374,
     375,    -1,   377,    -1,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,    -1,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
      -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,   125,    -1,    -1,
     128,   129,   130,   131,   132,    -1,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,   145,   146,   147,
     148,   149,   150,    -1,   152,    -1,   154,   155,   156,   157,
      -1,   159,    -1,   161,    -1,    -1,    -1,   165,   166,   167,
     168,    -1,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
      -1,   219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,    -1,   245,   246,   247,
     248,   249,    -1,   251,   252,    -1,   254,    -1,   256,   257,
     258,   259,   260,   261,    -1,   263,   264,    -1,    -1,   267,
     268,   269,    -1,    -1,   272,   273,    -1,   275,    -1,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,    -1,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
      -1,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,   374,   375,    -1,   377,
      -1,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
      -1,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,    -1,    -1,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,   125,    -1,    -1,   128,   129,   130,
     131,   132,    -1,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,   145,   146,   147,   148,   149,   150,
      -1,   152,    -1,   154,   155,   156,   157,    -1,   159,    -1,
     161,    -1,    -1,    -1,   165,   166,   167,   168,    -1,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,
     211,   212,   213,   214,    -1,    -1,   217,    -1,   219,    -1,
      -1,   222,   223,   224,    -1,    -1,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,    -1,   245,   246,   247,   248,   249,    -1,
     251,   252,    -1,   254,    -1,   256,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,    -1,   267,   268,   269,    -1,
      -1,   272,   273,    -1,   275,    -1,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,    -1,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,    -1,   374,   375,    -1,   377,    -1,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,    -1,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,    -1,   152,    -1,
     154,   155,   156,   157,    -1,   159,    -1,   161,    -1,    -1,
      -1,   165,   166,   167,   168,    -1,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,    -1,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,   213,
     214,    -1,    -1,   217,    -1,   219,    -1,    -1,   222,   223,
     224,    -1,    -1,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
      -1,   245,   246,   247,   248,   249,    -1,   251,   252,    -1,
     254,    -1,   256,   257,   258,   259,   260,   261,    -1,   263,
     264,    -1,    -1,   267,   268,   269,    -1,    -1,   272,   273,
      -1,   275,    -1,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,    -1,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,    -1,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,    -1,   377,    -1,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,    -1,   389,   390,   391,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,   125,    -1,
      -1,   128,   129,   130,   131,   132,    -1,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,   145,   146,
     147,   148,   149,   150,    -1,   152,    -1,   154,   155,   156,
     157,    -1,   159,    -1,   161,    -1,    -1,    -1,   165,   166,
     167,   168,    -1,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,    -1,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,    -1,
      -1,   208,    -1,   210,   211,   212,   213,   214,    -1,    -1,
     217,    -1,   219,    -1,    -1,   222,   223,   224,    -1,    -1,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,    -1,   245,   246,
     247,   248,   249,    -1,   251,   252,    -1,   254,    -1,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,    -1,    -1,
     267,   268,   269,    -1,    -1,   272,   273,    -1,   275,    -1,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
      -1,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,    -1,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    -1,   374,   375,    -1,
     377,    -1,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,    -1,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,    -1,    -1,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
     130,   131,   132,    -1,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,   145,   146,   147,   148,   149,
     150,    -1,   152,    -1,   154,   155,   156,   157,    -1,   159,
      -1,   161,    -1,    -1,    -1,   165,   166,   167,   168,    -1,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
      -1,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,
     210,   211,   212,   213,   214,    -1,    -1,   217,    -1,   219,
      -1,    -1,   222,   223,   224,    -1,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,    -1,   245,   246,   247,   248,   249,
      -1,   251,   252,    -1,   254,    -1,   256,   257,   258,   259,
     260,   261,    -1,   263,   264,    -1,    -1,   267,   268,   269,
      -1,    -1,   272,   273,    -1,   275,    -1,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,    -1,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    -1,   374,   375,    -1,   377,    -1,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,    -1,   389,
     390,   391,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,    -1,   152,
      -1,   154,   155,   156,   157,    -1,   159,    -1,   161,    -1,
      -1,    -1,   165,   166,   167,   168,    -1,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,
     213,   214,    -1,    -1,   217,    -1,   219,    -1,    -1,   222,
     223,   224,    -1,    -1,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,    -1,   245,   246,   247,   248,   249,    -1,   251,   252,
      -1,   254,    -1,   256,   257,   258,   259,   260,   261,    -1,
     263,   264,    -1,    -1,   267,   268,   269,    -1,    -1,   272,
     273,    -1,   275,    -1,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,    -1,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,    -1,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
      -1,   374,   375,    -1,   377,    -1,   379,   380,   381,   382,
     383,    -1,   385,   386,    -1,    -1,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,   125,
      -1,    -1,   128,   129,   130,   131,   132,    -1,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,   145,
     146,   147,   148,   149,   150,    -1,   152,    -1,   154,   155,
     156,   157,    -1,   159,    -1,   161,    -1,    -1,    -1,   165,
     166,   167,   168,    -1,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,   208,    -1,   210,   211,   212,   213,   214,    -1,
      -1,   217,    -1,   219,    -1,    -1,   222,   223,   224,    -1,
      -1,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,    -1,   245,
     246,   247,   248,   249,    -1,   251,   252,    -1,   254,    -1,
     256,   257,   258,   259,   260,   261,    -1,   263,   264,    -1,
      -1,   267,   268,   269,    -1,    -1,   272,   273,    -1,   275,
      -1,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,    -1,   288,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,    -1,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,    -1,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,    -1,   374,   375,
      -1,   377,    -1,   379,   380,   381,   382,   383,    -1,   385,
     386,    -1,    -1,   389,   390,   391,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,    -1,   404,   405,
     406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,    -1,
      -1,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,   125,    -1,    -1,   128,
     129,   130,   131,   132,    -1,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,   145,   146,   147,   148,
     149,   150,    -1,   152,    -1,   154,   155,   156,   157,    -1,
     159,    -1,   161,    -1,    -1,    -1,   165,   166,   167,   168,
      -1,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,
      -1,   210,   211,   212,   213,   214,    -1,    -1,   217,    -1,
     219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,    -1,   245,   246,   247,   248,
     249,    -1,   251,   252,    -1,   254,    -1,   256,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,    -1,   267,   268,
     269,    -1,    -1,   272,   273,    -1,   275,    -1,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,    -1,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,    -1,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,    -1,   374,   375,    -1,   377,    -1,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,    -1,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,    -1,   404,   405,   406,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,    -1,    -1,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
     132,    -1,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,   145,   146,   147,   148,   149,   150,    -1,
     152,    -1,   154,   155,   156,   157,    -1,   159,    -1,   161,
      -1,    -1,    -1,   165,   166,   167,   168,    -1,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,
     212,   213,   214,    -1,    -1,   217,    -1,   219,    -1,    -1,
     222,   223,   224,    -1,    -1,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,    -1,   245,   246,   247,   248,   249,    -1,   251,
     252,    -1,   254,    -1,   256,   257,   258,   259,   260,   261,
      -1,   263,   264,    -1,    -1,   267,   268,   269,    -1,    -1,
     272,   273,    -1,   275,    -1,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,    -1,   288,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,    -1,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,   374,   375,    -1,   377,    -1,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,    -1,   389,   390,   391,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,    74,
      75,    76,    77,    78,    -1,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    -1,    92,    93,    94,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
     125,    -1,    -1,   128,   129,   130,   131,   132,    -1,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
     145,   146,   147,   148,   149,   150,    -1,   152,    -1,   154,
     155,   156,   157,    -1,   159,    -1,   161,    -1,    -1,    -1,
     165,   166,   167,   168,    -1,   170,    -1,   172,   173,    -1,
     175,   176,   177,   178,   179,    -1,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,    -1,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,    -1,    -1,   208,    -1,   210,   211,   212,   213,   214,
      -1,    -1,   217,    -1,   219,    -1,    -1,   222,   223,   224,
      -1,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,    -1,
     245,   246,   247,   248,   249,    -1,   251,   252,    -1,   254,
      -1,   256,   257,   258,   259,   260,   261,    -1,   263,   264,
      -1,    -1,   267,   268,   269,    -1,    -1,   272,   273,    -1,
     275,    -1,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,    -1,   288,   289,   290,   291,   292,   293,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,    -1,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,    -1,   374,
     375,    -1,   377,    -1,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,    -1,   389,   390,   391,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
      -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      -1,    -1,    60,    61,    62,    63,    64,    -1,    66,    67,
      68,    69,    70,    -1,    -1,    -1,    74,    75,    76,    77,
      78,    -1,    80,    81,    82,    -1,    84,    85,    86,    87,
      88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,   107,
     108,   109,   110,    -1,   112,    -1,   114,   115,   116,   117,
     118,   119,    -1,   121,   122,   123,   124,   125,    -1,    -1,
     128,   129,   130,   131,   132,    -1,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,   145,   146,   147,
     148,   149,   150,    -1,   152,    -1,   154,   155,   156,   157,
      -1,   159,    -1,   161,    -1,    -1,    -1,   165,   166,   167,
     168,    -1,   170,    -1,   172,   173,    -1,   175,   176,   177,
     178,   179,    -1,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,   190,   191,    -1,   193,    -1,   195,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,
     208,    -1,   210,   211,   212,   213,   214,    -1,    -1,   217,
      -1,   219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,    -1,   245,   246,   247,
     248,   249,    -1,   251,   252,    -1,   254,    -1,   256,   257,
     258,   259,   260,   261,    -1,   263,   264,    -1,    -1,   267,
     268,   269,    -1,    -1,   272,   273,    -1,   275,    -1,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,    -1,
     288,   289,   290,   291,   292,   293,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
      -1,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,   374,   375,    -1,   377,
      -1,   379,   380,   381,   382,   383,    -1,   385,   386,    -1,
      -1,   389,   390,   391,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,    -1,    -1,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    35,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    -1,    -1,    60,
      61,    62,    63,    64,    -1,    66,    67,    68,    69,    70,
      -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,    80,
      81,    82,    -1,    84,    85,    86,    87,    88,    89,    -1,
      -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      -1,   112,    -1,   114,   115,   116,   117,   118,   119,    -1,
     121,   122,   123,   124,   125,    -1,    -1,   128,   129,   130,
     131,   132,    -1,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,   145,   146,   147,   148,   149,   150,
      -1,   152,    -1,   154,   155,   156,   157,    -1,   159,    -1,
     161,    -1,    -1,    -1,   165,   166,   167,   168,    -1,   170,
      -1,   172,   173,    -1,   175,   176,   177,   178,   179,    -1,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,   190,
     191,    -1,   193,    -1,   195,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,
     211,   212,   213,   214,    -1,    -1,   217,    -1,   219,    -1,
      -1,   222,   223,   224,    -1,    -1,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,    -1,   245,   246,   247,   248,   249,    -1,
     251,   252,    -1,   254,    -1,   256,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,    -1,   267,   268,   269,    -1,
      -1,   272,   273,    -1,   275,    -1,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,    -1,   288,   289,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,    -1,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,    -1,    -1,   350,
     351,   352,   353,    -1,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,    -1,   374,   375,    -1,   377,    -1,   379,   380,
     381,   382,   383,    -1,   385,   386,    -1,    -1,   389,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    -1,    -1,    60,    61,    62,    63,
      64,    -1,    66,    67,    68,    69,    70,    -1,    -1,    -1,
      74,    75,    76,    77,    78,    -1,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    89,    -1,    -1,    92,    93,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,   103,
     104,   105,   106,   107,   108,   109,   110,    -1,   112,    -1,
     114,   115,   116,   117,   118,   119,    -1,   121,   122,   123,
     124,   125,    -1,    -1,   128,   129,   130,   131,   132,    -1,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,   145,   146,   147,   148,   149,   150,    -1,   152,    -1,
     154,   155,   156,   157,    -1,   159,    -1,   161,    -1,    -1,
      -1,   165,   166,   167,   168,    -1,   170,    -1,   172,   173,
      -1,   175,   176,   177,   178,   179,    -1,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,   190,   191,    -1,   193,
      -1,   195,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,   213,
     214,    -1,    -1,   217,    -1,   219,    -1,    -1,   222,   223,
     224,    -1,    -1,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
      -1,   245,   246,   247,   248,   249,    -1,   251,   252,    -1,
     254,    -1,   256,   257,   258,   259,   260,   261,    -1,   263,
     264,    -1,    -1,   267,   268,   269,    -1,    -1,   272,   273,
      -1,   275,    -1,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,    -1,   288,   289,   290,   291,   292,   293,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,    -1,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,    -1,   377,    -1,   379,   380,   381,   382,   383,
      -1,   385,   386,    -1,    -1,   389,   390,   391,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    -1,    -1,    60,    61,    62,    63,    64,    -1,    66,
      67,    68,    69,    70,    -1,    -1,    -1,    74,    75,    76,
      77,    78,    -1,    80,    81,    82,    -1,    84,    85,    86,
      87,    88,    89,    -1,    -1,    92,    93,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,    -1,   112,    -1,   114,   115,   116,
     117,   118,   119,    -1,   121,   122,   123,   124,   125,    -1,
      -1,   128,   129,   130,   131,   132,    -1,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,   145,   146,
     147,   148,   149,   150,    -1,   152,    -1,   154,   155,   156,
     157,    -1,   159,    -1,   161,    -1,    -1,    -1,   165,   166,
     167,   168,    -1,   170,    -1,   172,   173,    -1,   175,   176,
     177,   178,   179,    -1,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,   190,   191,    -1,   193,    -1,   195,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,    -1,
      -1,   208,    -1,   210,   211,   212,   213,   214,    -1,    -1,
     217,    -1,   219,    -1,    -1,   222,   223,   224,    -1,    -1,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,    -1,   245,   246,
     247,   248,   249,    -1,   251,   252,    -1,   254,    -1,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,    -1,    -1,
     267,   268,   269,    -1,    -1,   272,   273,    -1,   275,    -1,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
      -1,   288,   289,   290,   291,   292,   293,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,    -1,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,    -1,   374,   375,    -1,
     377,    -1,   379,   380,   381,   382,   383,    -1,   385,   386,
      -1,    -1,   389,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,    -1,    -1,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    -1,    -1,
      60,    61,    62,    63,    64,    -1,    66,    67,    68,    69,
      70,    -1,    -1,    -1,    74,    75,    76,    77,    78,    -1,
      80,    81,    82,    -1,    84,    85,    86,    87,    88,    89,
      -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,    -1,   112,    -1,   114,   115,   116,   117,   118,   119,
      -1,   121,   122,   123,   124,   125,    -1,    -1,   128,   129,
     130,   131,   132,    -1,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,   145,   146,   147,   148,   149,
     150,    -1,   152,    -1,   154,   155,   156,   157,    -1,   159,
      -1,   161,    -1,    -1,    -1,   165,   166,   167,   168,    -1,
     170,    -1,   172,   173,    -1,   175,   176,   177,   178,   179,
      -1,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
     190,   191,    -1,   193,    -1,   195,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,    -1,
     210,   211,   212,   213,   214,    -1,    -1,   217,    -1,   219,
      -1,    -1,   222,   223,   224,    -1,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,    -1,   245,   246,   247,   248,   249,
      -1,   251,   252,    -1,   254,    -1,   256,   257,   258,   259,
     260,   261,    -1,   263,   264,    -1,    -1,   267,   268,   269,
      -1,    -1,   272,   273,    -1,   275,    -1,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,    -1,   288,   289,
     290,   291,   292,   293,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,    -1,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,    -1,   374,   375,    -1,   377,    -1,   379,
     380,   381,   382,   383,    -1,   385,   386,    -1,    -1,   389,
     390,   391,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1,
      -1,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,    -1,    -1,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    -1,    -1,    60,    61,    62,
      63,    64,    -1,    66,    67,    68,    69,    70,    -1,    -1,
      -1,    74,    75,    76,    77,    78,    -1,    80,    81,    82,
      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    92,
      93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,    -1,   112,
      -1,   114,   115,   116,   117,   118,   119,    -1,   121,   122,
     123,   124,   125,    -1,    -1,   128,   129,   130,   131,   132,
      -1,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,   145,   146,   147,   148,   149,   150,    -1,   152,
      -1,   154,   155,   156,   157,    -1,   159,    -1,   161,    -1,
      -1,    -1,   165,   166,   167,   168,    -1,   170,    -1,   172,
     173,    -1,   175,   176,   177,   178,   179,    -1,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,   190,   191,    -1,
     193,    -1,   195,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,   212,
     213,   214,    -1,    -1,   217,    -1,   219,    -1,    -1,   222,
     223,   224,    -1,    -1,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,    -1,   245,   246,   247,   248,   249,    -1,   251,   252,
      -1,   254,    -1,   256,   257,   258,   259,   260,   261,    -1,
     263,   264,    -1,    -1,   267,   268,   269,    -1,    -1,   272,
     273,    -1,   275,    -1,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,    -1,   288,   289,   290,   291,   292,
     293,   294,   295,   296,    -1,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,    -1,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
      -1,   374,   375,    -1,   377,    -1,   379,   380,   381,   382,
     383,    -1,   385,   386,    -1,    -1,   389,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
      -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    -1,    -1,    60,    61,    62,    63,    64,    -1,
      66,    67,    68,    69,    70,    -1,    -1,    -1,    74,    75,
      76,    77,    78,    -1,    80,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    -1,    -1,    92,    93,    94,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,    -1,   112,    -1,   114,   115,
     116,   117,   118,   119,    -1,   121,   122,   123,   124,   125,
      -1,    -1,   128,   129,   130,   131,   132,    -1,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,   145,
     146,   147,   148,   149,   150,    -1,   152,    -1,   154,   155,
     156,   157,    -1,   159,    -1,   161,    -1,    -1,    -1,   165,
     166,   167,   168,    -1,   170,    -1,   172,   173,    -1,   175,
     176,   177,   178,   179,    -1,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,   190,   191,    -1,   193,    -1,   195,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
      -1,    -1,   208,    -1,   210,   211,   212,   213,   214,    -1,
      -1,   217,    -1,   219,    -1,    -1,   222,   223,   224,    -1,
      -1,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,    -1,   245,
     246,   247,   248,   249,    -1,   251,   252,    -1,   254,    -1,
     256,   257,   258,   259,   260,   261,    -1,   263,   264,    -1,
      -1,   267,   268,   269,    -1,    -1,   272,   273,    -1,   275,
      -1,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,    -1,   288,   289,   290,   291,   292,   293,   294,   295,
     296,    -1,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,    -1,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,    -1,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,    -1,   374,   375,
      -1,   377,    -1,   379,   380,   381,   382,   383,    -1,   385,
     386,    -1,    -1,   389,   390,   391,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,    -1,   404,   405,
     406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,    -1,
      -1,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    -1,
      -1,    60,    61,    62,    63,    64,    -1,    66,    67,    68,
      69,    70,    -1,    -1,    -1,    74,    75,    76,    77,    78,
      -1,    80,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    -1,    -1,    92,    93,    94,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,    -1,   112,    -1,   114,   115,   116,   117,   118,
     119,    -1,   121,   122,   123,   124,   125,    -1,    -1,   128,
     129,   130,   131,   132,    -1,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,   145,   146,   147,   148,
     149,   150,    -1,   152,    -1,   154,   155,   156,   157,    -1,
     159,    -1,   161,    -1,    -1,    -1,   165,   166,   167,   168,
      -1,   170,    -1,   172,   173,    -1,   175,   176,   177,   178,
     179,    -1,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,   190,   191,    -1,   193,    -1,   195,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,    -1,    -1,   208,
      -1,   210,   211,   212,   213,   214,    -1,    -1,   217,    -1,
     219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,    -1,   245,   246,   247,   248,
     249,    -1,   251,   252,    -1,   254,    -1,   256,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,    -1,   267,   268,
     269,    -1,    -1,   272,   273,    -1,   275,    -1,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,    -1,   288,
     289,   290,   291,   292,   293,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,    -1,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,    -1,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,    -1,   374,   375,    -1,   377,    -1,
     379,   380,   381,   382,   383,    -1,   385,   386,    -1,    -1,
     389,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,    -1,   404,   405,   406,   407,   408,
      -1,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,    -1,    -1,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    70,    -1,
      -1,    -1,    74,    75,    76,    77,    78,    -1,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    -1,
      92,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
     132,    -1,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,   145,   146,   147,   148,   149,   150,    -1,
     152,    -1,   154,   155,   156,   157,    -1,   159,    -1,   161,
      -1,    -1,    -1,   165,   166,   167,   168,    -1,   170,    -1,
     172,   173,    -1,   175,   176,   177,   178,   179,    -1,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,    -1,   195,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,    -1,    -1,   208,    -1,   210,   211,
     212,   213,   214,    -1,    -1,   217,    -1,   219,    -1,    -1,
     222,   223,   224,    -1,    -1,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,    -1,   245,   246,   247,   248,   249,    -1,   251,
     252,    -1,   254,    -1,   256,   257,   258,   259,   260,   261,
      -1,   263,   264,    -1,    -1,   267,   268,   269,    -1,    -1,
     272,   273,    -1,   275,    -1,   277,   278,   279,   280,   281,
     282,   283,    -1,   285,   286,    -1,   288,   289,   290,   291,
     292,   293,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,    -1,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,    -1,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,   374,   375,    -1,   377,    -1,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,    -1,   389,   390,   391,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    -1,    -1,    60,    61,    62,    63,    64,
      -1,    66,    67,    68,    69,    -1,    -1,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,   102,   103,   104,
     105,   106,   107,   108,   109,   110,    -1,   112,    -1,   114,
     115,   116,   117,   118,   119,    -1,   121,   122,   123,   124,
     125,    -1,    -1,   128,   129,   130,   131,   132,    -1,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
     145,    -1,   147,   148,   149,    -1,    -1,   152,    -1,   154,
     155,   156,   157,    -1,   159,    -1,   161,   162,    -1,   164,
     165,   166,   167,   168,    -1,   170,    -1,    -1,   173,    -1,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,   190,   191,    -1,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
      -1,    -1,   217,   218,   219,   220,    -1,   222,   223,   224,
      -1,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,    -1,    -1,   251,   252,   253,   254,
      -1,    -1,   257,   258,   259,   260,   261,    -1,   263,   264,
      -1,    -1,   267,   268,   269,    -1,    -1,   272,    -1,   274,
     275,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,    -1,   288,   289,    -1,   291,   292,    -1,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,    -1,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,    -1,    -1,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,    -1,    -1,   389,   390,    -1,   392,    -1,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414,
     415,    -1,   417,    -1,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   447,   448,   449,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    -1,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    -1,    -1,    60,    61,
      62,    63,    64,    -1,    66,    67,    68,    69,    -1,    -1,
      72,    -1,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    -1,    84,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,    -1,
     112,    -1,   114,   115,   116,   117,   118,   119,    -1,   121,
     122,   123,   124,   125,    -1,    -1,   128,   129,   130,   131,
     132,    -1,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,   145,    -1,   147,   148,   149,    -1,    -1,
     152,    -1,   154,   155,   156,   157,    -1,   159,    -1,   161,
     162,    -1,   164,   165,   166,   167,   168,    -1,   170,    -1,
      -1,   173,    -1,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,   190,   191,
      -1,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,    -1,    -1,   217,   218,   219,   220,    -1,
     222,   223,   224,    -1,    -1,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,    -1,    -1,   251,
     252,   253,   254,    -1,    -1,   257,   258,   259,   260,   261,
      -1,   263,   264,    -1,    -1,   267,   268,   269,    -1,    -1,
     272,    -1,   274,   275,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,    -1,   288,   289,    -1,   291,
     292,    -1,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
      -1,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,    -1,   349,    -1,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
      -1,    -1,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,    -1,    -1,   389,   390,    -1,
     392,    -1,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411,
     412,   413,   414,   415,    -1,   417,    -1,   419,   420,   421,
     422,   423,   424,    -1,    -1,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   447,   448,   449
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    18,    28,    30,    31,    46,    66,    77,    88,    90,
     107,   121,   131,   137,   145,   147,   223,   291,   294,   322,
     330,   342,   349,   353,   363,   376,   411,   416,   429,   452,
     466,   474,   475,   476,   477,   488,   489,   491,   495,   509,
     510,   512,   514,   521,   523,   569,   575,   576,   593,   594,
     595,   596,   597,   598,   635,   752,   755,   758,   765,   766,
     767,   774,   778,   784,   786,   791,   795,   796,   799,   800,
     802,   804,   389,   432,   522,   188,   336,   343,   376,   422,
     522,   522,    49,   466,   588,   168,   224,   270,   336,   380,
     382,   403,   406,   567,   764,     3,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    37,    38,
      40,    41,    42,    44,    45,    46,    47,    48,    50,    51,
      53,    54,    55,    56,    57,    60,    61,    62,    63,    64,
      66,    67,    68,    69,    70,    74,    75,    76,    77,    78,
      80,    81,    82,    84,    85,    86,    87,    88,    89,    92,
      93,    94,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   112,   114,   115,   116,   117,   118,   119,   121,   122,
     123,   124,   125,   128,   129,   130,   131,   132,   134,   135,
     136,   138,   139,   140,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   152,   154,   155,   156,   157,   159,   161,
     165,   166,   167,   168,   170,   172,   173,   175,   176,   177,
     178,   179,   181,   182,   183,   184,   186,   187,   188,   189,
     190,   191,   193,   195,   196,   197,   198,   199,   200,   201,
     203,   205,   208,   210,   211,   212,   213,   214,   217,   219,
     222,   223,   224,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     245,   246,   247,   248,   249,   251,   252,   254,   256,   257,
     258,   259,   260,   261,   263,   264,   267,   268,   269,   272,
     273,   275,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   326,   327,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   343,   344,   345,   346,   347,   349,   350,   351,
     352,   353,   355,   356,   357,   358,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   374,
     375,   377,   379,   380,   381,   382,   383,   385,   386,   389,
     390,   391,   392,   393,   395,   396,   397,   398,   399,   400,
     401,   404,   405,   406,   407,   408,   411,   412,   413,   414,
     415,   416,   417,   419,   421,   422,   423,   424,   427,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   739,
     745,   807,   808,    20,    72,    87,   140,   148,   160,   188,
     233,   289,   303,   334,   336,   343,   346,   365,   376,   383,
     392,   422,   570,   571,   574,   522,   294,   739,    90,   420,
     466,   491,   575,   593,   770,   774,   791,   804,     5,   744,
     785,   745,   739,    26,   385,   389,   745,   797,   798,   801,
     522,    26,   126,   605,   606,   224,   336,   347,   385,   779,
     780,   801,   522,   266,   646,   737,   745,   164,   466,   788,
     466,   310,   599,   600,   739,   599,   594,   595,   598,     0,
     469,   116,   198,   408,   141,   202,   271,   402,   607,   608,
     594,   596,   597,   470,   420,   768,    26,   385,   389,   416,
     593,   801,   179,   737,   739,   179,   737,   179,   646,   179,
     737,   491,   575,   593,   754,   791,   737,   380,   382,   380,
     382,   320,   179,   745,   310,   343,   376,   422,   188,    26,
     739,   235,   392,   104,   376,   422,   339,   179,   572,   745,
     747,   179,   738,   739,   179,   739,   466,   513,   567,   770,
       3,    43,    49,    72,    79,    91,    98,   162,   164,   180,
     194,   206,   207,   209,   218,   220,   244,   253,   274,   276,
     328,   354,   378,   420,   771,   773,   774,   776,   777,   807,
     808,   809,   768,   455,   466,   466,   753,   449,   208,   468,
     265,     3,     4,     6,     7,     8,     9,    10,    48,    50,
      51,    58,    59,    62,    63,    70,    72,    95,    96,    97,
      98,    99,   100,   101,   108,   109,   111,   130,   146,   150,
     151,   156,   200,   201,   203,   225,   226,   243,   245,   250,
     255,   256,   258,   267,   277,   290,   307,   332,   348,   357,
     372,   385,   386,   391,   393,   394,   409,   417,   450,   457,
     458,   459,   466,   471,   594,   661,   664,   667,   668,   669,
     671,   672,   673,   674,   676,   677,   681,   683,   684,   685,
     687,   700,   704,   722,   727,   734,   735,   741,   742,   743,
     744,   745,   746,   807,   809,   733,   734,   779,   744,   779,
     449,   163,   387,   455,   466,   737,   459,   464,   468,   728,
     730,     3,   162,   164,   420,   774,   787,   789,   162,   790,
     681,   708,   599,   470,   466,   749,   467,   467,   476,   163,
     204,   646,   792,    26,   126,   604,   604,    53,   604,   153,
     158,   221,   262,   613,   615,   616,   628,   630,   631,   632,
     607,   608,   466,   737,   449,   208,   146,    22,    28,   131,
     269,   318,   322,   349,   413,   482,   485,   486,   318,   146,
      35,    54,   103,   187,   234,   237,   248,   279,   318,   323,
     343,   349,   363,   485,   515,   518,   146,   318,   349,   485,
     146,   318,   349,   485,   467,   466,   557,   567,   250,   756,
     422,   179,   737,   179,   737,   806,   737,    79,   761,   433,
      80,   123,   282,   381,   146,    56,   324,   470,   573,   468,
     748,   146,   470,   573,   146,   265,   708,   376,   467,   470,
       4,   151,   265,   394,   457,   458,   517,   520,   743,   744,
     769,   771,   772,   775,   770,   517,   775,   781,   783,   681,
     709,   710,   746,   750,     3,    48,    50,    51,    62,    63,
     108,   109,   156,   200,   201,   203,   243,   245,   258,   307,
     350,   357,   385,   386,   417,   658,   660,   662,   664,   666,
     668,   669,   670,   672,   673,   676,   677,   711,   746,   807,
      35,   219,   745,   466,   731,   419,   675,   681,   726,   466,
     675,   675,   466,   158,   466,   466,   466,   663,   663,   293,
     594,   466,   466,   665,   466,   466,    62,    63,   675,   681,
     466,   663,   466,   466,   466,   466,   466,   431,   452,   466,
     678,   466,   678,   466,   466,   681,   681,   681,   594,   681,
     708,   731,   730,   744,   466,   466,   744,     3,     8,    11,
      15,    16,    17,    32,    35,    40,    47,    71,   180,   185,
     206,   207,   220,   250,   253,   267,   270,   354,   450,   453,
     454,   455,   457,   458,   459,   460,   461,   462,   702,   703,
     704,   706,   430,   688,   276,   681,   204,   470,   601,   466,
     744,   730,   601,     3,   111,   224,   517,   677,   744,   782,
      94,   111,   783,   111,   783,   737,   681,   729,     3,    26,
      30,    31,    32,    33,    34,    35,    36,    39,    52,    58,
      59,    65,    71,    73,    83,    90,    95,    96,    97,    99,
     100,   101,   111,   113,   120,   126,   127,   133,   137,   141,
     151,   153,   158,   160,   163,   169,   171,   174,   185,   192,
     202,   204,   215,   216,   221,   225,   226,   250,   255,   262,
     265,   266,   270,   271,   287,   297,   312,   325,   342,   348,
     359,   373,   376,   384,   387,   388,   394,   402,   403,   409,
     410,   418,   425,   426,   428,   429,   459,   740,   751,   807,
     808,   809,   810,   728,   467,   470,   768,   467,   470,   600,
     738,    35,   792,   493,   737,    35,   745,   349,   596,   596,
     609,   610,   681,   596,   155,   247,   622,   210,   248,   306,
     352,   408,    26,   617,   681,   457,   458,   618,   619,   681,
     683,   628,   629,   616,   615,   613,   614,   158,   631,   260,
     633,   613,   628,   708,   749,   219,   737,    65,    73,    83,
     160,   179,   297,   403,   538,   548,   563,   745,    73,    83,
     490,    83,   490,   466,   387,   466,   536,   230,   406,   536,
      83,   470,   387,   737,   660,   517,    53,   519,   517,   517,
     103,   234,   237,    53,   387,   429,   452,   516,   241,   336,
     516,   518,   646,    83,   387,   490,   336,   737,   387,   336,
     387,   556,   561,   745,   429,   586,   310,   422,   146,    90,
     510,   523,   757,   758,   802,   737,   250,   511,   515,   250,
     466,   557,    35,   557,   179,   551,   745,   762,   572,   747,
     740,   468,   738,   739,   739,   747,   467,   179,   737,   806,
     770,   776,     4,   743,     4,   743,   470,   467,   470,    13,
      14,   660,    34,   659,   106,   177,   236,   239,   340,   447,
     466,   679,   680,   467,   470,   663,   748,   754,   708,   728,
     466,   425,   723,   724,   681,   708,   466,   743,   743,   708,
       3,   106,   177,   236,   239,   340,   447,   712,   713,   744,
     743,   743,   743,   675,   675,   681,     8,    15,    16,    17,
     453,   454,   455,   457,   458,   459,   460,   461,   462,   702,
     707,   745,   681,   714,   457,   458,   466,   682,   683,   704,
     716,   467,   708,   681,   708,   717,   385,   385,   743,   743,
     681,    52,   163,   216,   388,   681,   708,   720,   467,   470,
     743,   471,   743,   679,   658,   681,   681,   681,   681,   751,
     385,    39,   373,   732,   747,   681,   466,   594,   721,   126,
     151,   250,   255,   260,   394,   404,   681,   255,   466,   681,
     387,    47,   180,   185,   220,   354,   681,   681,   681,   681,
     681,   681,   681,   681,   681,   681,    26,    33,   359,   701,
     171,   154,   689,   332,   466,   700,   168,   224,   376,   380,
     382,   406,   602,   737,   735,   163,   636,    26,   126,   418,
     459,   467,   709,   636,   466,   744,   467,   465,   472,   737,
     787,   737,   795,   681,   467,   466,   410,   794,   111,   278,
     466,   492,   593,    35,   745,   466,   497,   506,   508,   745,
     470,    36,   120,   410,   611,   332,   333,   457,   458,   619,
     621,   683,   352,   210,   266,   470,     4,   620,   743,   620,
     332,   333,   621,   736,   737,   254,   356,   634,   629,   614,
     467,   318,   485,   466,   179,   548,   739,   210,   250,   210,
     410,   466,   541,   658,   739,   745,   179,   739,   179,   745,
      22,   131,   349,   481,   484,   531,   546,   751,   739,   540,
     560,   751,   739,   482,   739,   318,   349,   485,   515,   517,
     747,   739,   517,   747,   739,   517,   318,   349,   485,   739,
     739,   739,   739,   318,   349,   485,   739,   739,   302,   582,
     467,   470,   263,   163,   387,   577,   422,   737,   745,   567,
     466,   146,   146,   220,   538,   548,   552,   555,   564,   566,
     745,   429,   431,   543,   145,   593,   429,   763,   250,   265,
     573,   740,   573,   265,   573,   250,    35,   781,   710,   681,
     681,    34,   659,   464,   464,   387,   387,   387,   466,   387,
     743,   658,   663,   467,   708,   681,   133,   724,   725,    35,
     467,   681,   467,   467,   467,   467,   163,   467,   467,   467,
     470,   467,   468,   287,   715,   467,   682,   682,   681,    11,
      15,    16,    17,   185,   206,   267,   453,   454,   455,   457,
     458,   459,   460,   461,   462,   704,   682,   467,   467,   158,
     163,   718,   719,   467,   449,   449,   467,   467,    35,   720,
     708,   720,   720,   163,   467,   731,   681,   467,   467,   467,
     449,   682,   682,   139,   708,   163,   126,   151,   255,   260,
     394,   404,   466,   139,   707,   681,   373,   732,   681,   721,
     681,   387,   466,   594,   466,   466,   275,   693,   380,   382,
     380,   382,   737,   376,   603,   603,   603,   215,   333,   466,
     594,   637,   638,   639,   646,   649,   684,   686,   687,   741,
     745,   426,   654,   709,   709,   710,   467,   470,   607,   608,
     654,   743,   679,   681,   729,   749,   754,   637,   426,   793,
     416,   375,   409,   501,   496,   505,   745,   265,   498,   745,
     502,   508,   470,   636,   455,   731,   610,   267,   702,   705,
     451,   612,     4,   743,   621,   266,   408,   618,   470,   229,
     387,   681,   250,   563,   466,   146,   466,   541,   188,   561,
     524,   269,   534,   524,    22,   131,   322,   323,   349,   478,
     479,   480,   486,   487,   146,   573,   146,   573,   531,   546,
     531,   467,   470,   527,   744,   467,   470,   455,   468,   387,
     336,    83,   387,   490,   336,   387,   387,   387,   336,   366,
     367,   591,   744,   556,   582,   737,   557,   756,   376,   561,
     737,   737,   806,   737,   467,   470,   263,   536,   263,   265,
     535,   739,   429,   805,   536,    35,   146,   737,   747,   146,
     464,   743,   465,   743,   177,   236,   680,   236,   680,   680,
     743,   239,   467,   467,   384,   681,   137,   658,   467,   681,
     681,   707,   681,   718,   658,   682,   682,   682,   682,   126,
     250,   260,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   681,   681,   719,   718,   678,   678,   658,   467,
     467,   467,   708,   467,   471,   744,   681,    32,    32,   681,
     467,   681,   163,   466,   711,   681,   467,   139,   682,   682,
     139,   139,   681,   681,   608,   426,   466,   694,   745,   603,
     603,   603,   603,   737,   737,   737,   594,   649,   745,   163,
     594,   638,   639,    35,   640,   641,   745,   470,    91,   164,
     194,   209,   218,   244,   328,   643,   641,    35,   640,   642,
     745,   452,   653,   466,   730,   681,   171,   623,   607,   607,
     607,   418,   467,   623,   467,   465,   467,   681,   325,   500,
     415,   467,   470,   731,    81,   500,   467,   470,   497,   793,
     681,   466,   612,   155,   214,   266,   737,   739,   467,   146,
     561,   548,   561,   524,   551,   467,   113,   192,   248,   250,
     547,   466,   558,   167,   111,   178,   250,   536,   516,   104,
     111,   167,   250,   365,   368,   518,   536,   349,   480,   397,
     739,   745,   484,   560,   249,   267,   350,   457,   458,   517,
     525,   562,   658,   705,   744,   746,   810,   751,   739,   739,
     739,   739,   739,   739,   739,   739,   739,   739,   516,   591,
     466,   763,   179,   737,   467,   511,   466,    35,   545,   543,
     552,    77,   513,   104,   248,   593,   551,   410,   760,   573,
     806,   743,   465,   465,   467,   681,   467,   467,   719,   163,
     126,   260,   466,   467,   679,   681,   681,   681,   711,   467,
     681,    32,    32,   681,   681,   139,   467,   467,   681,   695,
     745,   737,   737,   737,   737,   641,   642,   730,   466,   467,
     745,   466,   638,   209,   274,   644,   638,   644,   209,   643,
     644,   209,   378,   647,   466,   745,   466,   272,   709,    53,
     174,   627,   467,   467,   467,   710,   744,   627,   744,   734,
     593,   278,   593,   496,   265,   466,   494,   455,   508,   500,
     707,   524,   548,   467,   467,   429,   554,   114,   181,   190,
     113,   412,   531,   549,    65,    71,    83,   111,   113,   167,
     192,   250,   255,   297,   312,   403,   529,   530,   542,    29,
      53,   568,   179,   255,   517,   681,   568,   255,   457,   458,
     520,   745,   658,   573,   573,   746,   748,   455,   387,   387,
     466,   583,   587,   410,   578,   580,   561,    35,   250,   466,
     763,   555,   145,   593,   143,   186,   535,   116,   131,   296,
     805,   104,   429,   803,   265,   745,   759,   466,    35,   465,
     682,   163,   466,   711,   467,   681,   681,   681,   467,   284,
     696,   650,   651,   686,   640,   466,   738,   638,   265,   410,
     645,   638,   209,   638,   741,   655,   656,   745,   466,   655,
     745,   607,   466,   624,   625,   626,   681,   681,   428,   690,
     607,   690,   501,    83,   466,   499,   507,   686,   745,   127,
     681,   467,   312,   554,   466,   544,   524,   467,   470,   466,
     747,   739,   682,   568,   114,   181,   113,   255,   210,   737,
     554,   111,    35,   146,    71,   657,   748,   461,   525,   739,
     739,   585,   592,   751,    49,    92,   117,   135,   139,   159,
     162,   175,   255,   263,   304,   589,   516,   118,   467,   593,
     146,    35,   467,   739,   805,    26,    76,    84,   112,   178,
     189,   365,   368,   539,   539,   333,   333,    57,    65,   224,
     737,   507,   682,   711,   467,    53,   607,   467,   470,    35,
     652,   738,   467,   681,   466,   638,   645,   466,   467,   470,
     658,   655,   467,   467,   467,   470,   691,   692,   745,   467,
     415,   739,   681,   467,   470,    71,   503,   503,   251,   408,
     737,   524,   550,   553,   751,   531,   681,   250,   530,    35,
     554,   557,   178,   747,   410,   483,   461,   397,   467,   470,
     459,   466,   517,   584,   775,    35,   581,   744,   581,   250,
     255,   304,   581,   581,   583,   744,   763,   803,   737,   593,
     543,   513,    65,   268,    65,   760,   467,   467,   708,   305,
     333,   697,   653,   650,   466,   467,   738,   708,   656,   657,
     467,   625,   470,    35,   593,   467,   654,   499,   747,   504,
     747,   504,   349,   557,   467,   470,   455,   467,   178,   232,
     565,   466,   526,   681,   397,   585,   579,   590,   775,   744,
     744,   255,   561,   459,   561,   744,   744,    35,   466,   803,
     535,   805,   268,   268,   466,   763,    47,    94,   399,   681,
     698,   699,   698,   467,   655,   467,   467,   692,   694,   503,
     611,   611,   506,   565,   553,   525,   248,   537,   526,   164,
     283,   355,   265,   532,   533,   559,   515,   467,   470,   561,
     593,   507,   654,   699,   332,   157,   292,   157,   292,   467,
     319,   648,   504,   612,   612,   654,   533,   190,   116,   408,
     265,   559,   265,   532,   467,   590,   803,   467,    32,   466,
     611,   524,    56,   248,   324,   349,   528,   528,   763,   699,
     681,   612,    21,   111,   255,   654,   467
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 449 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 465 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 477 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 34:
#line 515 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 35:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 36:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 37:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 38:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 39:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 40:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 44:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 45:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 46:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 47:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 48:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 49:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 50:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 51:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 52:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 53:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 54:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 55:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 56:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 57:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 58:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 82:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 83:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 84:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 85:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 86:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 87:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 88:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 89:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 90:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 91:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 92:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 93:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 94:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 95:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 96:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 97:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 98:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 99:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 100:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 101:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 111:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 112:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 113:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 114:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 115:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 116:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 117:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 118:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 119:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 120:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 121:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 122:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 123:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 124:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 125:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 126:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 127:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 128:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 129:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 130:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 131:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 132:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 133:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 134:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 135:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 136:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 137:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 138:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 139:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 140:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 141:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 142:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 143:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 144:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 145:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 146:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 147:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 148:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 149:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 150:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 151:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 152:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 153:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 154:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 155:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 156:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 157:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 158:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 159:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 160:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 161:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 162:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 163:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 164:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 165:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 166:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 167:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 168:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 169:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 170:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 171:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 172:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 173:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 174:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 175:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 176:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 177:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 178:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 179:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 180:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 181:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 182:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 183:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 184:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 185:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 186:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 187:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 188:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 189:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 190:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 191:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 192:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 193:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 194:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 195:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 196:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 197:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 198:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 200:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 201:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 202:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 203:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 204:
#line 41 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 205:
#line 43 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 206:
#line 69 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 207:
#line 70 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 208:
#line 71 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 209:
#line 72 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 210:
#line 73 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 211:
#line 74 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 212:
#line 78 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 213:
#line 79 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 214:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 215:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 216:
#line 90 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 217:
#line 91 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 218:
#line 92 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 219:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 220:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 221:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 222:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 223:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 224:
#line 125 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 225:
#line 132 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 226:
#line 139 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 227:
#line 149 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 228:
#line 159 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 229:
#line 171 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 230:
#line 180 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 231:
#line 189 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 232:
#line 208 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 233:
#line 214 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 234:
#line 220 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 235:
#line 222 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 236:
#line 224 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 237:
#line 226 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 238:
#line 228 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 239:
#line 233 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 240:
#line 234 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 241:
#line 238 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 242:
#line 239 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 243:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 244:
#line 241 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 245:
#line 246 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 246:
#line 250 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 247:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 248:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 249:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 250:
#line 268 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 251:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 252:
#line 270 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 253:
#line 271 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 254:
#line 272 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 255:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 256:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 257:
#line 275 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 258:
#line 281 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 259:
#line 282 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 260:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 261:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 262:
#line 299 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 263:
#line 306 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 264:
#line 313 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 265:
#line 324 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 266:
#line 325 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 267:
#line 326 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 268:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 269:
#line 331 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 270:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 271:
#line 337 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 272:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 273:
#line 343 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 274:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 275:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 276:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 277:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 278:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 279:
#line 353 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 280:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 281:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 282:
#line 386 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 283:
#line 392 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 284:
#line 393 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 285:
#line 397 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 286:
#line 401 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 287:
#line 402 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 288:
#line 403 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 289:
#line 408 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 290:
#line 412 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 291:
#line 419 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 292:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 293:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 294:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 295:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 296:
#line 438 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 297:
#line 439 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 298:
#line 444 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 299:
#line 445 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 300:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 301:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 302:
#line 459 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 303:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 304:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 305:
#line 475 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 306:
#line 476 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 307:
#line 480 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 308:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 309:
#line 488 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 310:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 311:
#line 513 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 312:
#line 526 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 313:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 314:
#line 554 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 315:
#line 569 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 316:
#line 591 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 317:
#line 595 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 318:
#line 602 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 319:
#line 606 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 320:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 321:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 322:
#line 626 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 323:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 324:
#line 636 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 325:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 326:
#line 638 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 327:
#line 640 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 328:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 329:
#line 653 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 330:
#line 654 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 331:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 332:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 333:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 334:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 335:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 336:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 337:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 338:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 339:
#line 73 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 340:
#line 74 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 341:
#line 75 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 342:
#line 76 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 343:
#line 77 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 344:
#line 78 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 345:
#line 79 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 346:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 347:
#line 81 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 348:
#line 82 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 349:
#line 83 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 350:
#line 84 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 351:
#line 85 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 352:
#line 90 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 353:
#line 91 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 354:
#line 92 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 355:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 356:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 357:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 358:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 359:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 360:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 361:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 362:
#line 108 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 363:
#line 109 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 364:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 365:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 366:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 367:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 368:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 369:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 370:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 371:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 372:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 373:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 374:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 375:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 376:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 377:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 378:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 379:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 380:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 381:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 382:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 383:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 384:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 385:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 386:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 387:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 388:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 389:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 390:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 391:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 392:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 393:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 394:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 395:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 396:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 397:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 398:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 399:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 400:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 401:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 402:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 403:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 404:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 405:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 406:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 407:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 408:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 409:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 410:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 411:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 412:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 413:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 414:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 415:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 418:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 419:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 420:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 421:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 422:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 423:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 424:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 425:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 426:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 427:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 428:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 429:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 430:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 431:
#line 172 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (9)].list);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 432:
#line 184 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 433:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 434:
#line 205 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 435:
#line 209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 436:
#line 213 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 437:
#line 230 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 438:
#line 237 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 439:
#line 244 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 440:
#line 253 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 441:
#line 254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 442:
#line 258 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 443:
#line 270 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 444:
#line 280 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 445:
#line 289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 446:
#line 294 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 447:
#line 299 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 448:
#line 304 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 449:
#line 309 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 450:
#line 317 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 451:
#line 325 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 452:
#line 330 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 453:
#line 335 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 454:
#line 341 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 455:
#line 342 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 456:
#line 346 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 457:
#line 347 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 458:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 459:
#line 355 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 460:
#line 356 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 461:
#line 360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 462:
#line 361 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 463:
#line 365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 464:
#line 366 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 465:
#line 370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 466:
#line 374 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 467:
#line 375 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 468:
#line 379 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 469:
#line 388 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 470:
#line 398 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 471:
#line 399 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 472:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 473:
#line 403 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 474:
#line 404 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 475:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 476:
#line 409 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 477:
#line 410 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 478:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 479:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 480:
#line 416 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 481:
#line 417 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 482:
#line 422 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 483:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 484:
#line 440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 485:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 486:
#line 447 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 487:
#line 450 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 488:
#line 454 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 489:
#line 456 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 490:
#line 463 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 491:
#line 483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 492:
#line 485 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 493:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 494:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 495:
#line 492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 496:
#line 496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 497:
#line 497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 498:
#line 500 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 499:
#line 501 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 500:
#line 526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 501:
#line 527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 502:
#line 531 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 503:
#line 532 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 504:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 505:
#line 537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 506:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 507:
#line 554 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 508:
#line 555 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 509:
#line 559 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 510:
#line 560 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 511:
#line 564 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 512:
#line 565 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 513:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 514:
#line 570 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 515:
#line 575 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 516:
#line 585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 517:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 518:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 519:
#line 588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 520:
#line 592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 521:
#line 593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 522:
#line 598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 523:
#line 599 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 524:
#line 600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 525:
#line 610 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 526:
#line 616 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 527:
#line 633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 528:
#line 634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 529:
#line 638 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 530:
#line 639 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 531:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (2)].range)->alias = (yyvsp[(2) - (2)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (2)].range);
				;}
    break;

  case 532:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeTableSample *n = (PGRangeTableSample *) (yyvsp[(3) - (3)].node);
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					/* relation_expr goes inside the PGRangeTableSample node */
					n->relation = (PGNode *) (yyvsp[(1) - (3)].range);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 533:
#line 659 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (2)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (2)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (2)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 534:
#line 666 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 535:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (2)].node);
					n->alias = (yyvsp[(2) - (2)].alias);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (2)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (2)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (2)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 536:
#line 709 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 537:
#line 734 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 538:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 539:
#line 764 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 540:
#line 768 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					(yyval.jexpr) = n;
				;}
    break;

  case 541:
#line 780 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					(yyval.jexpr) = n;
				;}
    break;

  case 542:
#line 793 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					(yyval.jexpr) = n;
				;}
    break;

  case 543:
#line 807 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				;}
    break;

  case 544:
#line 818 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				;}
    break;

  case 545:
#line 833 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 546:
#line 839 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 547:
#line 844 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 548:
#line 850 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 549:
#line 856 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 550:
#line 857 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 551:
#line 866 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 552:
#line 870 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 553:
#line 874 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 554:
#line 880 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 555:
#line 886 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 556:
#line 891 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 557:
#line 892 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 558:
#line 893 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 559:
#line 894 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 560:
#line 898 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 561:
#line 899 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 562:
#line 911 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 563:
#line 912 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 564:
#line 918 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 565:
#line 925 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 566:
#line 932 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 567:
#line 939 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 568:
#line 962 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeTableSample *n = makeNode(PGRangeTableSample);
					/* n->relation will be filled in later */
					n->method = (yyvsp[(2) - (6)].list);
					n->args = (yyvsp[(4) - (6)].list);
					n->repeatable = (yyvsp[(6) - (6)].node);
					n->location = (yylsp[(2) - (6)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 569:
#line 974 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].node); ;}
    break;

  case 570:
#line 975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 571:
#line 991 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 572:
#line 1001 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 573:
#line 1013 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 574:
#line 1017 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 575:
#line 1018 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 576:
#line 1021 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 577:
#line 1022 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 578:
#line 1025 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 579:
#line 1026 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 580:
#line 1031 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 581:
#line 1032 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 582:
#line 1038 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 583:
#line 1042 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 584:
#line 1048 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 585:
#line 1069 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 586:
#line 1076 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 587:
#line 1089 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 588:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 589:
#line 1101 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 590:
#line 1106 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 591:
#line 1112 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 592:
#line 1117 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 593:
#line 1126 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 594:
#line 1128 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 595:
#line 1130 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 596:
#line 1134 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 597:
#line 1135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 598:
#line 1136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 599:
#line 1137 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 600:
#line 1138 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 601:
#line 1140 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 602:
#line 1145 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 603:
#line 1164 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 604:
#line 1165 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 605:
#line 1166 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 606:
#line 1167 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 607:
#line 1179 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 608:
#line 1185 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(2) - (3)].list)));
					(yyval.typnam)->typmods = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 609:
#line 1192 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 610:
#line 1193 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 611:
#line 1200 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 612:
#line 1205 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 613:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 614:
#line 1215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 615:
#line 1220 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 616:
#line 1225 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 617:
#line 1230 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 618:
#line 1235 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 619:
#line 1241 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 620:
#line 1247 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 621:
#line 1253 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 622:
#line 1260 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 623:
#line 1281 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
				;}
    break;

  case 624:
#line 1291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 625:
#line 1295 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 626:
#line 1303 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 627:
#line 1307 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 628:
#line 1315 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 629:
#line 1327 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 630:
#line 1348 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 631:
#line 1352 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 632:
#line 1358 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 633:
#line 1362 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 634:
#line 1375 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 635:
#line 1383 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 636:
#line 1393 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 637:
#line 1395 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 638:
#line 1397 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 639:
#line 1399 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 640:
#line 1401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 641:
#line 1403 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 642:
#line 1407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 643:
#line 1408 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 644:
#line 1416 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 645:
#line 1425 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 646:
#line 1433 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 647:
#line 1442 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 648:
#line 1453 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 649:
#line 1460 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 650:
#line 1461 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 651:
#line 1462 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 652:
#line 1467 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 653:
#line 1469 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 654:
#line 1471 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 655:
#line 1473 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 656:
#line 1475 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 657:
#line 1477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 658:
#line 1479 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 659:
#line 1484 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 660:
#line 1489 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 661:
#line 1495 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(DAY) |
												INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 662:
#line 1503 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 663:
#line 1508 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 664:
#line 1515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 665:
#line 1521 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 666:
#line 1526 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)])));
				;}
    break;

  case 667:
#line 1530 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (4)])),
									makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 668:
#line 1565 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 669:
#line 1567 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 670:
#line 1569 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 671:
#line 1577 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 672:
#line 1592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 673:
#line 1594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 674:
#line 1596 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 675:
#line 1598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 676:
#line 1600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 677:
#line 1602 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 678:
#line 1604 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 679:
#line 1606 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 680:
#line 1608 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 681:
#line 1610 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 682:
#line 1612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 683:
#line 1614 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 684:
#line 1616 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 685:
#line 1618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 686:
#line 1621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 687:
#line 1623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 688:
#line 1625 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 689:
#line 1628 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 690:
#line 1630 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 691:
#line 1632 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 692:
#line 1634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 693:
#line 1637 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 694:
#line 1642 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 695:
#line 1649 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 696:
#line 1654 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 697:
#line 1661 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 698:
#line 1666 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 699:
#line 1674 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 700:
#line 1679 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 701:
#line 1688 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 702:
#line 1696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 703:
#line 1704 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 704:
#line 1712 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 705:
#line 1730 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 706:
#line 1738 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 707:
#line 1746 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 708:
#line 1754 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 709:
#line 1762 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 710:
#line 1770 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 711:
#line 1786 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 712:
#line 1794 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 713:
#line 1802 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 714:
#line 1810 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 715:
#line 1818 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 716:
#line 1826 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 717:
#line 1834 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 718:
#line 1838 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 719:
#line 1842 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 720:
#line 1846 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 721:
#line 1850 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 722:
#line 1858 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 723:
#line 1866 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 724:
#line 1874 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 725:
#line 1882 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 726:
#line 1902 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 727:
#line 1924 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 728:
#line 1935 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 729:
#line 1942 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 730:
#line 1967 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 731:
#line 1969 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 732:
#line 1971 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 733:
#line 1973 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 734:
#line 1975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 735:
#line 1977 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 736:
#line 1979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 737:
#line 1981 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 738:
#line 1983 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 739:
#line 1985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 740:
#line 1987 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 741:
#line 1989 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 742:
#line 1991 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 743:
#line 1993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 744:
#line 1995 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 745:
#line 1997 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 746:
#line 1999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 747:
#line 2001 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 748:
#line 2003 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 749:
#line 2005 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 750:
#line 2009 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 751:
#line 2013 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 752:
#line 2017 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 753:
#line 2030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 754:
#line 2031 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 755:
#line 2033 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 756:
#line 2045 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 757:
#line 2060 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 758:
#line 2072 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 759:
#line 2074 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 760:
#line 2076 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 761:
#line 2087 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 762:
#line 2111 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 763:
#line 2124 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 764:
#line 2128 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 765:
#line 2134 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 766:
#line 2141 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 767:
#line 2148 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 768:
#line 2158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 769:
#line 2165 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 770:
#line 2193 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 771:
#line 2228 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 772:
#line 2238 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 773:
#line 2239 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 774:
#line 2247 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 775:
#line 2253 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 776:
#line 2257 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 777:
#line 2261 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 778:
#line 2265 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 779:
#line 2269 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 780:
#line 2273 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 781:
#line 2277 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 782:
#line 2281 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 783:
#line 2285 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 784:
#line 2289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 785:
#line 2293 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 786:
#line 2297 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 787:
#line 2301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 788:
#line 2305 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 789:
#line 2309 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 790:
#line 2313 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); ;}
    break;

  case 791:
#line 2315 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 792:
#line 2319 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 793:
#line 2328 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 794:
#line 2333 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 795:
#line 2340 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 796:
#line 2355 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("btrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 797:
#line 2362 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 798:
#line 2366 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 799:
#line 2370 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("btrim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 800:
#line 2374 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 801:
#line 2378 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 802:
#line 2391 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 803:
#line 2392 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 804:
#line 2396 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 805:
#line 2397 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 806:
#line 2405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 807:
#line 2406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 808:
#line 2410 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 809:
#line 2412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 810:
#line 2417 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 811:
#line 2425 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 812:
#line 2427 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 813:
#line 2440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 814:
#line 2445 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 815:
#line 2470 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 816:
#line 2471 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 817:
#line 2474 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 818:
#line 2475 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 819:
#line 2487 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 820:
#line 2505 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 821:
#line 2511 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 822:
#line 2521 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 823:
#line 2538 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 824:
#line 2583 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 825:
#line 2591 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 826:
#line 2599 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 827:
#line 2607 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 828:
#line 2615 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 829:
#line 2635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 830:
#line 2636 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 831:
#line 2637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 832:
#line 2640 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 833:
#line 2641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 834:
#line 2642 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 835:
#line 2645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 836:
#line 2646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 837:
#line 2649 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 838:
#line 2650 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 839:
#line 2651 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 840:
#line 2652 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 841:
#line 2653 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 842:
#line 2654 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 843:
#line 2655 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 844:
#line 2656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 845:
#line 2657 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 846:
#line 2658 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 847:
#line 2659 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 848:
#line 2660 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 849:
#line 2664 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 850:
#line 2666 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 851:
#line 2671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 852:
#line 2673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 853:
#line 2678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 854:
#line 2680 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 855:
#line 2682 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 856:
#line 2684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 857:
#line 2686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 858:
#line 2688 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 859:
#line 2702 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 860:
#line 2704 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 861:
#line 2708 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 862:
#line 2712 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 863:
#line 2719 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 864:
#line 2723 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 865:
#line 2729 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 866:
#line 2733 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 867:
#line 2742 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 868:
#line 2752 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 869:
#line 2753 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 870:
#line 2758 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 871:
#line 2761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 872:
#line 2768 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 873:
#line 2769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 874:
#line 2770 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 875:
#line 2771 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 876:
#line 2772 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 877:
#line 2773 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 878:
#line 2774 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 879:
#line 2775 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 880:
#line 2786 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 881:
#line 2790 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 882:
#line 2797 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 883:
#line 2803 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 884:
#line 2804 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 885:
#line 2821 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 886:
#line 2825 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 887:
#line 2830 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 888:
#line 2834 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), -1));
				;}
    break;

  case 889:
#line 2849 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 890:
#line 2853 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 891:
#line 2857 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 892:
#line 2860 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 893:
#line 2863 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 894:
#line 2864 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 895:
#line 2865 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 896:
#line 2869 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 897:
#line 2875 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 898:
#line 2886 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 899:
#line 2899 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 900:
#line 2900 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 901:
#line 2905 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 902:
#line 2915 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 903:
#line 2916 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 904:
#line 2919 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 905:
#line 2920 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 906:
#line 2924 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 907:
#line 2928 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 908:
#line 2935 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 909:
#line 2939 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 910:
#line 2943 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 911:
#line 2951 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 912:
#line 2961 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 913:
#line 2962 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 914:
#line 2966 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 915:
#line 2967 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 916:
#line 2971 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 917:
#line 2972 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 920:
#line 2986 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 921:
#line 2987 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 922:
#line 2991 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 923:
#line 2992 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 924:
#line 2996 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 925:
#line 3012 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 926:
#line 3020 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 927:
#line 3028 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 928:
#line 3049 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 929:
#line 3050 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 930:
#line 3062 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 931:
#line 3066 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 932:
#line 3093 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 933:
#line 3095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 934:
#line 3099 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 935:
#line 3101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 936:
#line 3112 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 937:
#line 3114 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 938:
#line 3125 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 939:
#line 3129 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 940:
#line 3133 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 941:
#line 3137 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 942:
#line 3141 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 943:
#line 3150 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 944:
#line 3157 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 945:
#line 3189 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 946:
#line 3193 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 947:
#line 3199 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 948:
#line 3207 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (6)].typnam);
					if ((yyvsp[(6) - (6)].list) != NIL)
					{
						t->typmods = lappend((yyvsp[(6) - (6)].list), makeParamRef(0, (yylsp[(3) - (6)])));
					}
					else
						t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
												makeParamRef(0, (yylsp[(3) - (6)])));
					(yyval.node) = makeParamRefCast(0, (yylsp[(5) - (6)]), t);
				;}
    break;

  case 949:
#line 3219 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 950:
#line 3223 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 951:
#line 3227 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 952:
#line 3232 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 953:
#line 3233 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 954:
#line 3249 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 955:
#line 3250 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 956:
#line 3251 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 957:
#line 3256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 958:
#line 3257 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 959:
#line 3258 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 960:
#line 3261 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 961:
#line 3262 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 962:
#line 3266 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 963:
#line 3268 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 964:
#line 3272 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 965:
#line 3273 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 967:
#line 3284 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 968:
#line 3285 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 969:
#line 3286 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 970:
#line 3287 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 971:
#line 3288 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 972:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 973:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 974:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 979:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 980:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 981:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 982:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 987:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 988:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 989:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 990:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 991:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 992:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 993:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 994:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 995:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 996:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 997:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 998:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 999:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1000:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1001:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1002:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1003:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1004:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1005:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1006:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1007:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1008:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1009:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1010:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1011:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1012:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1013:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1014:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1015:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1021:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1022:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1023:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1024:
#line 68 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1025:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1026:
#line 74 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1027:
#line 80 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1028:
#line 84 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1029:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1030:
#line 92 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1031:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1032:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1033:
#line 99 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1034:
#line 105 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1035:
#line 111 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1036:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1037:
#line 119 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1038:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1039:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1040:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1041:
#line 32 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1042:
#line 34 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1043:
#line 42 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1044:
#line 53 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1045:
#line 65 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1046:
#line 73 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1047:
#line 81 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1048:
#line 88 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1049:
#line 98 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1050:
#line 100 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1051:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1052:
#line 110 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1053:
#line 114 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1054:
#line 129 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1055:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1056:
#line 136 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1057:
#line 137 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1058:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1059:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1060:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1061:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1062:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1063:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1064:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1065:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1066:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1067:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1068:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1069:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1070:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1071:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1072:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1073:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1074:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1075:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1076:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1077:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1078:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1079:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1080:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1081:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1082:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1083:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1084:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1085:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1086:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1087:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1088:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1089:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1090:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1091:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1092:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1093:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1094:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmtSelect *n = makeNode(PGVariableShowStmtSelect);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name="select";
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1095:
#line 11 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1096:
#line 17 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1097:
#line 23 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1098:
#line 29 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1101:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1102:
#line 41 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1103:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1104:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1105:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1106:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1107:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1108:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1109:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1110:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1111:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1112:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1113:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1114:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1115:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1116:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 21732 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 67 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, -1);
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

